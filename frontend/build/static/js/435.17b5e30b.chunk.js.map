{"version":3,"file":"static/js/435.17b5e30b.chunk.js","mappings":"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","sources":["components/utils/PasswordVisibilityToggle.jsx","components/utils/Menu.jsx","components/utils/MenuItemText.jsx","components/menus/NotificationsMenu.jsx","components/dialogs/ChangePasswordBody.jsx","components/dialogs/EditNameBody.jsx","components/menus/EditPicMenu.jsx","components/utils/CustomTooltip.tsx","components/utils/CustomDialog.tsx","components/utils/ChildDialog.jsx","components/dialogs/EditProfileBody.jsx","components/menus/ProfileSettingsMenu.jsx","components/utils/UserListItem.jsx","components/utils/LoadingList.tsx","components/utils/SearchInput.tsx","components/utils/SearchUsersDrawer.jsx","components/ChatpageHeader.jsx","components/dialogs/NewGroupBody.jsx","components/dialogs/AddMembersToGroup.jsx","components/utils/TypingIndicator.jsx","components/utils/ChatListItem.jsx","components/utils/FullSizeImage.jsx","components/GettingStarted.jsx","components/ChatListView.jsx","components/dialogs/ViewProfileBody.jsx","components/utils/GroupMemberItem.jsx","components/menus/MemberOptionsMenu.jsx","components/dialogs/ViewGroupMembers.jsx","components/dialogs/GroupInfoBody.jsx","components/utils/LoadingMsgs.tsx","components/utils/MsgAttachment.tsx","components/utils/AttachmentPreview.tsx","components/utils/Message.jsx","components/menus/MsgOptionsMenu.jsx","components/WelcomeBanner.jsx","components/MsgsHeader.jsx","components/MessagesView.jsx","pages/ChatsPage.tsx","store/storeHooks.ts","utils/appUtils.ts","utils/axios.ts"],"sourcesContent":["import { Visibility, VisibilityOff } from \"@mui/icons-material\";\n\nconst PasswordVisibilityToggle = ({\n  disableIfLoading,\n  showPassword,\n  setShowPassword,\n}) => {\n  return (\n    <span\n      className={`input-group-text ${disableIfLoading} btn btn-outline-info rounded-pill rounded-start`}\n      onClick={() => setShowPassword(!showPassword)}\n    >\n      {showPassword ? <VisibilityOff /> : <Visibility />}\n    </span>\n  );\n};\n\nexport default PasswordVisibilityToggle;\n","import { Menu as MuiMenu } from \"@mui/material\";\n\nexport const menuPaperProps = {\n  elevation: 0,\n  sx: {\n    overflow: \"auto\",\n    maxHeight: 250,\n    filter: \"drop-shadow(0px 2px 8px rgba(0,0,0,0.32))\",\n    borderRadius: 2,\n    backgroundColor: \"#404040\",\n    mt: 1,\n  },\n};\n\nexport const menuItemProps = {\n  \":hover\": { backgroundColor: \"#505050\" },\n  color: \"#e0e0e0\",\n  fontSize: \"19px\",\n};\n\nexport const menuIconProps = { color: \"lightblue\" };\n\nconst Menu = ({\n  children,\n  menuAnchor,\n  setMenuAnchor,\n  transformOrigin,\n  anchorOrigin,\n}) => {\n  const isMenuOpen = Boolean(menuAnchor);\n  const closeMenu = () => setMenuAnchor(null);\n\n  return (\n    <MuiMenu\n      anchorEl={menuAnchor}\n      open={isMenuOpen}\n      onClose={closeMenu}\n      onClick={closeMenu}\n      PaperProps={menuPaperProps}\n      transformOrigin={transformOrigin}\n      anchorOrigin={anchorOrigin}\n    >\n      {children}\n    </MuiMenu>\n  );\n};\n\nexport default Menu;\n","const MenuItemText = ({ children }) => {\n  return <span style={{ marginBottom: \"3px\" }}>{children}</span>;\n};\n\nexport default MenuItemText;\n","import { MenuItem } from \"@mui/material\";\nimport Menu, { menuItemProps } from \"../utils/Menu\";\nimport MenuItemText from \"../utils/MenuItemText\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectAppState,\n  setDeleteNotifsOfChat,\n  setFetchMsgs,\n  setGroupInfo,\n  setSelectedChat,\n} from \"../../store/slices/AppSlice\";\nimport { getOneToOneChatReceiver, truncateString } from \"../../utils/appUtils\";\n\nconst NotificationsMenu = ({ chats, anchor, setAnchor }) => {\n  const { loggedInUser } = useSelector(selectAppState);\n  const dispatch = useDispatch();\n  const notifs = [...loggedInUser?.notifications];\n  const notifGroups = {};\n\n  notifs.forEach((notif) => {\n    // Notifications grouped by 'chat'\n    const notifChat = notif.chat;\n    const chatId = notifChat._id;\n    const chatName = notifChat.isGroupChat\n      ? `group===${notifChat.chatName}`\n      : getOneToOneChatReceiver(loggedInUser, notifChat.users).name;\n    const notifGroupId = `${chatId}---${chatName}`;\n    if (notifGroups[notifGroupId]) {\n      ++notifGroups[notifGroupId];\n    } else {\n      notifGroups[notifGroupId] = 1;\n    }\n  });\n\n  const chatNotifClickHandler = (e) => {\n    const chatNotifId =\n      e.target.dataset.notifGroup || e.target.parentNode.dataset.notifGroup;\n    if (!chatNotifId) return;\n\n    const chatId = chatNotifId.split(\"---\")[0];\n    const chatToBeOpened = chats.find((chat) => chat._id === chatId);\n    dispatch(setSelectedChat(chatToBeOpened));\n    dispatch(setFetchMsgs(true)); // To fetch selected chat msgs\n    dispatch(setDeleteNotifsOfChat(chatId));\n    if (chatToBeOpened?.isGroupChat) dispatch(setGroupInfo(chatToBeOpened));\n  };\n\n  return (\n    <Menu\n      menuAnchor={anchor}\n      setMenuAnchor={setAnchor}\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n    >\n      {Object.keys(notifGroups).length ? (\n        <div onClick={chatNotifClickHandler}>\n          {Object.keys(notifGroups).map((notifGroupId) => {\n            const fromGroup = notifGroupId.includes(\"group===\");\n            const notifCount = notifGroups[notifGroupId];\n            let chatName = notifGroupId.split(\"---\")[1];\n            chatName = fromGroup ? chatName.split(\"===\")[1] : chatName;\n            return (\n              <MenuItem\n                key={notifGroupId}\n                data-notif-group={notifGroupId}\n                sx={menuItemProps}\n              >\n                <MenuItemText>\n                  {`${notifCount} message${notifCount > 1 ? \"s\" : \"\"} ${\n                    fromGroup ? \"in\" : \"from\"\n                  } `}\n                  <span\n                    title={chatName}\n                    data-notif-group={notifGroupId}\n                    className=\"text-info\"\n                  >\n                    {`${truncateString(\n                      fromGroup ? chatName : chatName.split(\" \")[0],\n                      12,\n                      9\n                    )}`}\n                  </span>\n                </MenuItemText>\n              </MenuItem>\n            );\n          })}\n        </div>\n      ) : (\n        <MenuItem sx={menuItemProps}>\n          <MenuItemText>No notifications</MenuItemText>\n        </MenuItem>\n      )}\n    </Menu>\n  );\n};\n\nexport default NotificationsMenu;\n","import { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectFormfieldState } from \"../../store/slices/FormfieldSlice\";\nimport PasswordVisibilityToggle from \"../utils/PasswordVisibilityToggle\";\n\nconst ChangePasswordBody = ({ getUpdatedState }) => {\n  const {\n    loading,\n    disableIfLoading,\n    formLabelClassName,\n    formFieldClassName,\n    inputFieldClassName,\n  } = useSelector(selectFormfieldState);\n\n  const [showPassword, setShowPassword] = useState(false);\n  const [changePasswordData, setChangePasswordData] = useState({\n    currentPassword: \"\",\n    newPassword: \"\",\n    confirmNewPassword: \"\",\n  });\n\n  const { currentPassword, newPassword, confirmNewPassword } =\n    changePasswordData;\n\n  const handleChangeFor = (prop) => (e) => {\n    setChangePasswordData({ ...changePasswordData, [prop]: e.target.value });\n  };\n\n  useEffect(() => {\n    // Return updated state to profile settings menu\n    getUpdatedState(changePasswordData);\n  }, [changePasswordData]);\n\n  const onEnterKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      // Submit updated password data\n      getUpdatedState(changePasswordData, { submitUpdatedPassword: true });\n    }\n  };\n\n  return (\n    <>\n      {/* Current Password input */}\n      <section\n        className={`dialogField ${formFieldClassName} mb-2 mt-3 col-md-6 order-md-2`}\n      >\n        <label htmlFor=\"current_password\" className={`${formLabelClassName}`}>\n          Current Password <span className=\"required\">*</span>\n        </label>\n        <div className=\"input-group\">\n          <input\n            type={showPassword ? \"text\" : \"password\"}\n            value={currentPassword}\n            onChange={handleChangeFor(\"currentPassword\")}\n            onKeyDown={onEnterKeyDown}\n            required\n            autoFocus\n            name=\"currentPassword\"\n            id=\"current_password\"\n            className={`${inputFieldClassName} rounded-end`}\n            disabled={loading}\n            placeholder=\"Used While Signing In\"\n          />\n          <PasswordVisibilityToggle\n            disableIfLoading={disableIfLoading}\n            showPassword={showPassword}\n            setShowPassword={setShowPassword}\n          />\n        </div>\n      </section>\n      {/* New Password input */}\n      <section\n        className={`dialogField ${formFieldClassName} mb-2 col-md-6 order-md-2`}\n      >\n        <label htmlFor=\"new_password\" className={`${formLabelClassName}`}>\n          New Password <span className=\"required\">*</span>\n        </label>\n        <div className=\"input-group\">\n          <input\n            type={showPassword ? \"text\" : \"password\"}\n            value={newPassword}\n            onChange={handleChangeFor(\"newPassword\")}\n            onKeyDown={onEnterKeyDown}\n            required\n            name=\"newPassword\"\n            id=\"new_password\"\n            className={`${inputFieldClassName} rounded-end`}\n            disabled={loading}\n            placeholder=\"Different from Current\"\n          />\n          <PasswordVisibilityToggle\n            disableIfLoading={disableIfLoading}\n            showPassword={showPassword}\n            setShowPassword={setShowPassword}\n          />\n        </div>\n      </section>\n      {/* Confirm New Password input */}\n      <section\n        className={`dialogField ${formFieldClassName} mb-2 col-md-6 order-md-2`}\n      >\n        <label\n          htmlFor=\"confirm_new_password\"\n          className={`${formLabelClassName}`}\n        >\n          Confirm New Password <span className=\"required\">*</span>\n        </label>\n        <div className=\"input-group\">\n          <input\n            type={showPassword ? \"text\" : \"password\"}\n            value={confirmNewPassword}\n            onChange={handleChangeFor(\"confirmNewPassword\")}\n            onKeyDown={onEnterKeyDown}\n            required\n            name=\"confirmNewPassword\"\n            id=\"confirm_new_password\"\n            className={`${inputFieldClassName} rounded-end`}\n            disabled={loading}\n            placeholder=\"Exactly as Above\"\n          />\n          <PasswordVisibilityToggle\n            disableIfLoading={disableIfLoading}\n            showPassword={showPassword}\n            setShowPassword={setShowPassword}\n          />\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default ChangePasswordBody;\n","import { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectFormfieldState } from \"../../store/slices/FormfieldSlice\";\n\nconst EditNameBody = ({ originalName, getUpdatedName, placeholder }) => {\n  const { loading, formFieldClassName, inputFieldClassName } =\n    useSelector(selectFormfieldState);\n  const [name, setName] = useState(originalName);\n\n  useEffect(() => {\n    getUpdatedName(name);\n  }, [name]);\n\n  return (\n    <section\n      className={`${formFieldClassName} mx-auto`}\n      style={{ width: \"clamp(250px, 60vw, 360px)\" }}\n    >\n      <input\n        type=\"text\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n        onKeyDown={(e) => {\n          if (e.key === \"Enter\") {\n            // Submit updated group name\n            getUpdatedName(name, { submitUpdatedName: true });\n          }\n        }}\n        name=\"editname\"\n        autoFocus\n        className={`${inputFieldClassName} mt-1`}\n        disabled={loading}\n        placeholder={placeholder}\n      />\n    </section>\n  );\n};\n\nexport default EditNameBody;\n","import { Delete, Upload } from \"@mui/icons-material\";\nimport { ListItemIcon, MenuItem } from \"@mui/material\";\nimport Menu, { menuIconProps, menuItemProps } from \"../utils/Menu\";\nimport MenuItemText from \"../utils/MenuItemText\";\n\nconst EditPicMenu = ({\n  anchor,\n  setAnchor,\n  selectProfilePic,\n  openDeletePhotoConfirmDialog,\n  deletePhotoCondition,\n}) => {\n  return (\n    <Menu\n      menuAnchor={anchor}\n      setMenuAnchor={setAnchor}\n      transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n    >\n      <MenuItem sx={menuItemProps} onClick={selectProfilePic}>\n        <ListItemIcon sx={menuIconProps}>\n          <Upload />\n        </ListItemIcon>\n        <MenuItemText>Upload Photo</MenuItemText>\n      </MenuItem>\n      {deletePhotoCondition && (\n        <MenuItem sx={menuItemProps} onClick={openDeletePhotoConfirmDialog}>\n          <ListItemIcon sx={menuIconProps}>\n            <Delete />\n          </ListItemIcon>\n          <MenuItemText>Delete Photo</MenuItemText>\n        </MenuItem>\n      )}\n    </Menu>\n  );\n};\n\nexport default EditPicMenu;\n","import { styled } from \"@mui/material/styles\";\nimport Tooltip, { tooltipClasses } from \"@mui/material/Tooltip\";\n\ninterface StyledProps {\n  className: string;\n  children: any;\n  title: string;\n  placement: any;\n  arrow: boolean;\n}\n\nconst getCustomTooltip = (arrowStyles: any, tooltipStyles: any) =>\n  styled(\n    ({ className, children, title, placement, arrow }: StyledProps): any => (\n      <Tooltip\n        title={title}\n        placement={placement}\n        arrow={arrow}\n        classes={{ popper: className }}\n      >\n        {children}\n      </Tooltip>\n    )\n  )(({ theme }) => ({\n    [`& .${tooltipClasses.arrow}`]: { ...arrowStyles },\n    [`& .${tooltipClasses.tooltip}`]: { ...tooltipStyles },\n  }));\n\nexport default getCustomTooltip;\n","import {\n  Close,\n  KeyboardDoubleArrowLeft,\n  KeyboardDoubleArrowRight,\n} from \"@mui/icons-material\";\nimport {\n  Button,\n  CircularProgress,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n} from \"@mui/material\";\nimport { NavigateFunction, useNavigate } from \"react-router-dom\";\nimport { setSelectedChat } from \"../../store/slices/AppSlice\";\nimport { hideDialog } from \"../../store/slices/CustomDialogSlice\";\nimport { selectFormfieldState } from \"../../store/slices/FormfieldSlice\";\nimport { useAppDispatch, useAppSelector } from \"../../store/storeHooks\";\nimport { CustomDialogState } from \"../../utils/AppTypes\";\nimport { truncateString } from \"../../utils/appUtils\";\n\nexport const btnHoverStyle = { \":hover\": { backgroundColor: \"#93c2f727\" } };\nexport const btnCustomStyle = {\n  fontSize: 17,\n  color: \"#8cc2ff\",\n  fontFamily: \"Trebuchet MS\",\n  borderRadius: 10,\n};\n\nconst CustomDialog = ({\n  children,\n  dialogData,\n  showDialogActions,\n  showDialogClose,\n  closeDialog,\n}: CustomDialogState) => {\n  const { loading, disableIfLoading } = useAppSelector(selectFormfieldState);\n  const dispatch = useAppDispatch();\n  const navigate: NavigateFunction = useNavigate();\n  const {\n    isFullScreen,\n    isOpen,\n    title,\n    nolabel,\n    yeslabel,\n    loadingYeslabel,\n    action,\n  } = dialogData;\n\n  const handleDialogClose = () => {\n    if (closeDialog) return closeDialog();\n    dispatch(hideDialog());\n  };\n\n  const handleYes = async () => {\n    if (!action) return;\n    const result = await action();\n    if (\n      result === \"profileUpdated\" ||\n      result === \"membersUpdated\" ||\n      result === \"msgActionDone\"\n    ) {\n      handleDialogClose();\n    } else if (result === \"createdGroup\") {\n      handleDialogClose();\n      // Close Parent Dialog as well\n      dispatch(hideDialog());\n    } else if (result === \"pwdUpdated\" || result === \"loggingOut\") {\n      handleDialogClose();\n      dispatch(setSelectedChat(null));\n      navigate(\"/\");\n    }\n  };\n\n  return (\n    <Dialog\n      fullScreen={Boolean(isFullScreen)}\n      PaperProps={{\n        sx: {\n          borderRadius: 2,\n          backgroundImage: \"linear-gradient(0deg,#353535,#444)\",\n        },\n      }}\n      className={`user-select-none ${disableIfLoading}`}\n      open={isOpen}\n      onClose={handleDialogClose}\n    >\n      <DialogTitle\n        style={{\n          fontSize: 25,\n          color: \"#A4D0F0\",\n          fontFamily: \"Trebuchet MS\",\n          fontWeight: \"bold\",\n        }}\n      >\n        <span\n          className=\"d-flex\"\n          title={title}\n          style={{ marginTop: -5, marginRight: 10 }}\n        >\n          {truncateString(title, 24, 21)}\n        </span>\n        {showDialogClose && (\n          <IconButton\n            onClick={handleDialogClose}\n            disabled={loading}\n            sx={{\n              position: \"absolute\",\n              right: 8,\n              top: 8,\n              color: \"#999999\",\n              \":hover\": {\n                backgroundColor: \"#aaaaaa20\",\n              },\n            }}\n          >\n            <Close />\n          </IconButton>\n        )}\n      </DialogTitle>\n      <DialogContent\n        style={{ fontSize: 19, color: \"#e0e0e0\", fontFamily: \"Trebuchet MS\" }}\n      >\n        {children || <></>}\n      </DialogContent>\n      {showDialogActions && (\n        <DialogActions>\n          <Button\n            sx={btnHoverStyle}\n            disabled={loading}\n            style={btnCustomStyle}\n            onClick={handleDialogClose}\n          >\n            {nolabel === \"Back\" ? (\n              <span>\n                <KeyboardDoubleArrowLeft\n                  className=\"btnArrowIcons\"\n                  style={{\n                    margin: \"0px 5px 2px 0px\",\n                  }}\n                />\n                Back\n              </span>\n            ) : (\n              nolabel\n            )}\n          </Button>\n          <Button\n            sx={btnHoverStyle}\n            disabled={loading}\n            style={btnCustomStyle}\n            onClick={handleYes}\n          >\n            {loading && yeslabel !== \"Next\" ? (\n              <>\n                <CircularProgress size={25} style={{ marginRight: 12 }} />\n                <span style={{ marginRight: 22 }}>{loadingYeslabel}</span>\n              </>\n            ) : (\n              <>\n                {yeslabel === \"Next\" ? (\n                  <span>\n                    Next\n                    <KeyboardDoubleArrowRight\n                      className=\"btnArrowIcons\"\n                      style={{\n                        marginLeft: 4,\n                      }}\n                    />\n                  </span>\n                ) : (\n                  yeslabel\n                )}\n              </>\n            )}\n          </Button>\n        </DialogActions>\n      )}\n    </Dialog>\n  );\n};\n\nexport default CustomDialog;\n","import { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setChildDialogMethods } from \"../../store/slices/ChildDialogSlice\";\nimport CustomDialog from \"./CustomDialog\";\n\nconst ChildDialog = ({\n  showChildDialogActions = true,\n  showChildDialogClose = false,\n}) => {\n  // Child Dialog config\n  const [childDialogData, setChildDialogData] = useState({\n    isOpen: false,\n    title: \"Child Dialog\",\n    nolabel: \"NO\",\n    yeslabel: \"YES\",\n    loadingYeslabel: \"Updating...\",\n    action: () => {},\n  });\n  const [childDialogBody, setChildDialogBody] = useState(<></>);\n  const dispatch = useDispatch();\n  const displayChildDialog = (options) =>\n    setChildDialogData({ ...options, isOpen: true });\n\n  const closeChildDialog = (data) =>\n    setChildDialogData({ ...data, isOpen: false });\n\n  useEffect(() => {\n    dispatch(\n      setChildDialogMethods({\n        setChildDialogBody,\n        displayChildDialog,\n        closeChildDialog,\n      })\n    );\n  }, [childDialogData]);\n\n  return (\n    <CustomDialog\n      dialogData={childDialogData}\n      closeDialog={closeChildDialog}\n      showDialogActions={showChildDialogActions}\n      showDialogClose={showChildDialogClose}\n    >\n      {childDialogBody}\n    </CustomDialog>\n  );\n};\n\nexport default ChildDialog;\n","import { Edit } from \"@mui/icons-material\";\nimport { useEffect, useRef, useState } from \"react\";\nimport axios from \"../../utils/axios\";\nimport EditNameBody from \"./EditNameBody\";\nimport { CircularProgress, IconButton } from \"@mui/material\";\nimport EditPicMenu from \"../menus/EditPicMenu\";\nimport getCustomTooltip from \"../utils/CustomTooltip\";\nimport {\n  getAxiosConfig,\n  isImageFile,\n  truncateString,\n  truncateWords,\n  TWO_MB,\n} from \"../../utils/appUtils\";\nimport ChildDialog from \"../utils/ChildDialog\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectFormfieldState,\n  setLoading,\n} from \"../../store/slices/FormfieldSlice\";\nimport { selectAppState, setLoggedInUser } from \"../../store/slices/AppSlice\";\nimport { selectChildDialogState } from \"../../store/slices/ChildDialogSlice\";\nimport { displayToast } from \"../../store/slices/ToastSlice\";\n\nconst arrowStyles = { color: \"#111\" };\nconst tooltipStyles = {\n  maxWidth: 260,\n  color: \"#eee\",\n  fontFamily: \"Trebuchet MS\",\n  fontSize: 17,\n  padding: \"5px 10px\",\n  border: \"1px solid #333\",\n  backgroundColor: \"#111\",\n};\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\n\nconst EditProfileBody = () => {\n  const { loggedInUser } = useSelector(selectAppState);\n  const { loading, disableIfLoading } = useSelector(selectFormfieldState);\n  const { childDialogMethods } = useSelector(selectChildDialogState);\n  const dispatch = useDispatch();\n  const { setChildDialogBody, displayChildDialog, closeChildDialog } =\n    childDialogMethods;\n\n  const [profileData, setProfileData] = useState({\n    profilePicUrl: loggedInUser?.profilePic,\n    name: loggedInUser?.name,\n    email: loggedInUser?.email,\n  });\n  const [editProfilePicMenuAnchor, setEditProfilePicMenuAnchor] =\n    useState(null);\n\n  useEffect(() => {\n    setProfileData({\n      ...profileData,\n      profilePicUrl: loggedInUser?.profilePic,\n      name: loggedInUser?.name,\n    });\n  }, [loggedInUser]);\n\n  const displayWarning = (message = \"Warning\", duration = 3000) => {\n    dispatch(\n      displayToast({\n        message,\n        type: \"warning\",\n        duration,\n        position: \"top-center\",\n      })\n    );\n  };\n\n  const displayError = (\n    error = \"Oops! Something went wrong\",\n    title = \"Operation Failed\"\n  ) => {\n    dispatch(\n      displayToast({\n        title,\n        message: error.response?.data?.message || error.message,\n        type: \"error\",\n        duration: 5000,\n        position: \"top-center\",\n      })\n    );\n  };\n\n  const displaySuccess = (message = \"Operation Successful\") => {\n    dispatch(\n      displayToast({\n        message,\n        type: \"success\",\n        duration: 3000,\n        position: \"bottom-center\",\n      })\n    );\n  };\n\n  // For profile pic upload loading indicator\n  const [uploading, setUploading] = useState(false);\n\n  const { profilePicUrl, name, email } = profileData;\n  const imgInput = useRef();\n  const isGuestUser = loggedInUser?.email === \"guest.user@gmail.com\";\n\n  const persistUpdatedUser = (updatedUser) => {\n    // localStorage persists updated user even after page refresh\n    localStorage.setItem(\"loggedInUser\", JSON.stringify(updatedUser));\n    dispatch(setLoggedInUser(updatedUser));\n  };\n\n  // Click a button/icon upon 'Enter' or 'Space' keydown\n  const clickOnKeydown = (e) => {\n    if (e.key === \" \" || e.key === \"Enter\") {\n      e.target.click();\n    }\n  };\n\n  // Update Profile Pic\n  const handleImgInputChange = async (e) => {\n    const image = e.target.files[0];\n    if (!image) return;\n\n    if (!isImageFile(image.name)) {\n      return dispatch(\n        displayToast({\n          title: \"Invalid Image File\",\n          message: \"Please Select an Image File (png/jpg/jpeg/svg/webp)\",\n          type: \"warning\",\n          duration: 5000,\n          position: \"bottom-center\",\n        })\n      );\n    }\n\n    if (image.size >= TWO_MB) {\n      imgInput.current.value = \"\";\n      return displayWarning(\"Please Select an Image Smaller than 2 MB\", 4000);\n    }\n    dispatch(setLoading(true));\n    setUploading(true);\n    const config = getAxiosConfig({ loggedInUser, formData: true });\n\n    const formData = new FormData();\n    formData.append(\"profilePic\", image);\n    formData.append(\"currentProfilePic\", loggedInUser?.profilePic);\n    formData.append(\"cloudinary_id\", loggedInUser?.cloudinary_id);\n\n    try {\n      const { data } = await axios.put(\n        \"/api/user/update/profile-pic\",\n        formData,\n        config\n      );\n      displaySuccess(\"ProfilePic Updated Successfully\");\n      dispatch(setLoading(false));\n      setUploading(false);\n      persistUpdatedUser({\n        ...data,\n        token: loggedInUser.token,\n        expiryTime: loggedInUser.expiryTime,\n      });\n    } catch (error) {\n      displayError(error, \"ProfilePic Update Failed\");\n      dispatch(setLoading(false));\n      setUploading(false);\n    }\n  };\n\n  const deleteProfilePic = async () => {\n    dispatch(setLoading(true));\n    const config = getAxiosConfig({ loggedInUser });\n    try {\n      const { data } = await axios.put(\n        \"/api/user/delete/profile-pic\",\n        {\n          currentProfilePic: loggedInUser?.profilePic,\n          cloudinary_id: loggedInUser?.cloudinary_id,\n        },\n        config\n      );\n      displaySuccess(\"ProfilePic Deleted Successfully\");\n      dispatch(setLoading(false));\n      persistUpdatedUser({\n        ...data,\n        token: loggedInUser.token,\n        expiryTime: loggedInUser.expiryTime,\n      });\n      return \"profileUpdated\";\n    } catch (error) {\n      displayError(error, \"ProfilePic Deletion Failed\");\n      dispatch(setLoading(false));\n    }\n  };\n\n  // Edited Name config\n  let editedName;\n\n  const getUpdatedName = (updatedValue, options) => {\n    editedName = updatedValue;\n    if (options?.submitUpdatedName)\n      updateProfileName({ enterKeyPressed: true });\n  };\n\n  const updateProfileName = async (options) => {\n    if (!editedName) return displayWarning(\"Please Enter a Valid Name\");\n\n    dispatch(setLoading(true));\n    const config = getAxiosConfig({ loggedInUser });\n    try {\n      const { data } = await axios.put(\n        \"/api/user/update/name\",\n        { newUserName: editedName },\n        config\n      );\n      displaySuccess(\"Name Updated Successfully\");\n      dispatch(setLoading(false));\n      persistUpdatedUser({\n        ...data,\n        token: loggedInUser.token,\n        expiryTime: loggedInUser.expiryTime,\n      });\n      if (options?.enterKeyPressed) closeChildDialog();\n      else return \"profileUpdated\";\n    } catch (error) {\n      displayError(error, \"Name Update Failed\");\n      dispatch(setLoading(false));\n    }\n  };\n\n  // Open edit name dialog\n  const openEditNameDialog = () => {\n    setChildDialogBody(\n      <EditNameBody\n        originalName={loggedInUser?.name}\n        getUpdatedName={getUpdatedName}\n        placeholder=\"Enter New Name\"\n      />\n    );\n    displayChildDialog({\n      title: \"Edit Name\",\n      nolabel: \"CANCEL\",\n      yeslabel: \"SAVE\",\n      loadingYeslabel: \"Saving...\",\n      action: updateProfileName,\n    });\n  };\n\n  // Open delete photo confirm dialog\n  const openDeletePhotoConfirmDialog = () => {\n    setChildDialogBody(<>Are you sure you want to delete this profile pic?</>);\n    displayChildDialog({\n      title: \"Delete Profile Pic\",\n      nolabel: \"NO\",\n      yeslabel: \"YES\",\n      loadingYeslabel: \"Deleting...\",\n      action: deleteProfilePic,\n    });\n  };\n\n  const openEditProfilePicMenu = (e) => {\n    setEditProfilePicMenuAnchor(e.target);\n  };\n\n  return (\n    <>\n      {/* View/Edit Profile Pic */}\n      {loading && uploading ? (\n        <div className=\"d-flex flex-column justify-content-center align-items-center\">\n          <CircularProgress\n            size={75}\n            style={{ margin: \"30px 0px\", color: \"lightblue\" }}\n          />\n          <span style={{ marginBottom: \"45px\" }} className=\"text-light h1\">\n            {\" Updating Photo...\"}\n          </span>\n        </div>\n      ) : (\n        <section className=\"dialogField d-flex position-relative mb-4\">\n          <img\n            className=\"img-fluid d-flex mx-auto border border-2 border-primary rounded-circle mt-1\"\n            id=\"viewedit__profilePic\"\n            src={profilePicUrl}\n            alt=\"profilePic\"\n          />\n          {!isGuestUser && (\n            <CustomTooltip title=\"Edit Profile Pic\" placement=\"top-start\" arrow>\n              <i\n                id=\"editProfilePic\"\n                tabIndex={2}\n                onKeyDown={clickOnKeydown}\n                className={`selectPicIcon position-absolute p-2 d-flex ${disableIfLoading} justify-content-center align-items-center bg-success rounded-circle pointer`}\n                onClick={openEditProfilePicMenu}\n              >\n                <Edit className=\"text-light fs-6\" />\n              </i>\n            </CustomTooltip>\n          )}\n          {/* Edit/Delete profile pic menu */}\n          <EditPicMenu\n            anchor={editProfilePicMenuAnchor}\n            setAnchor={setEditProfilePicMenuAnchor}\n            selectProfilePic={() => imgInput.current.click()}\n            openDeletePhotoConfirmDialog={openDeletePhotoConfirmDialog}\n            deletePhotoCondition={\n              !loggedInUser?.profilePic?.endsWith(\"user_dqzjdz.png\")\n            }\n          />\n          <input\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={handleImgInputChange}\n            name=\"profilepic\"\n            id=\"editProfilePic\"\n            ref={imgInput}\n            className={`d-none`}\n            disabled={loading}\n          />\n        </section>\n      )}\n      {/* View Name */}\n      <section className={`dialogField text-center mb-2`}>\n        <div className=\"input-group\" style={{ marginTop: \"-15px\" }}>\n          <CustomTooltip title={name} placement=\"top\" arrow>\n            <div\n              className=\"w-100 h1 fw-bold mx-4 text-info\"\n              style={{ fontSize: \"32px\", wordWrap: \"break-word\" }}\n            >\n              {truncateWords(name, 14, 11)}\n            </div>\n          </CustomTooltip>\n          {!isGuestUser && (\n            <CustomTooltip title=\"Edit Name\" placement=\"top\" arrow>\n              <IconButton\n                tabIndex={3}\n                onKeyDown={clickOnKeydown}\n                onClick={openEditNameDialog}\n                sx={{\n                  position: \"absolute\",\n                  right: -8,\n                  top: 0,\n                  \":hover\": { backgroundColor: \"#aaaaaa30\" },\n                }}\n              >\n                <Edit className=\"text-light\" />\n              </IconButton>\n            </CustomTooltip>\n          )}\n        </div>\n      </section>\n      {/* View Email */}\n      <section\n        className={`dialogField text-center mb-2`}\n        style={{ marginTop: \"-10px\" }}\n      >\n        <CustomTooltip\n          title={email?.length > 24 ? email : \"\"}\n          placement=\"bottom\"\n          arrow\n        >\n          <span className=\"h4\" style={{ color: \"lightblue\" }}>\n            {truncateString(email, 25, 21)}\n          </span>\n        </CustomTooltip>\n      </section>\n      {/* Child confirmation dialog */}\n      <ChildDialog />\n    </>\n  );\n};\n\nexport default EditProfileBody;\n","import { Key, Logout, ManageAccounts, Person } from \"@mui/icons-material\";\nimport { ListItemIcon, MenuItem } from \"@mui/material\";\nimport Menu, { menuIconProps, menuItemProps } from \"../utils/Menu\";\nimport axios from \"../../utils/axios\";\nimport ChangePasswordBody from \"../dialogs/ChangePasswordBody\";\nimport EditProfileBody from \"../dialogs/EditProfileBody\";\nimport MenuItemText from \"../utils/MenuItemText\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectAppState,\n  setLoggedInUser,\n  setSelectedChat,\n} from \"../../store/slices/AppSlice\";\nimport { setLoading } from \"../../store/slices/FormfieldSlice\";\nimport {\n  displayDialog,\n  hideDialog,\n  setShowDialogActions,\n} from \"../../store/slices/CustomDialogSlice\";\nimport { displayToast } from \"../../store/slices/ToastSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getAxiosConfig } from \"../../utils/appUtils\";\n\nconst ProfileSettingsMenu = ({ anchor, setAnchor, setDialogBody }) => {\n  const { loggedInUser } = useSelector(selectAppState);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const displaySuccess = (\n    message = \"Operation Successful\",\n    duration = 3000\n  ) => {\n    dispatch(\n      displayToast({\n        message,\n        type: \"success\",\n        duration,\n        position: \"bottom-center\",\n      })\n    );\n  };\n\n  const displayWarning = (message = \"Warning\") => {\n    dispatch(\n      displayToast({\n        message,\n        type: \"warning\",\n        duration: 5000,\n        position: \"top-center\",\n      })\n    );\n  };\n\n  const isGuestUser = loggedInUser?.email === \"guest.user@gmail.com\";\n\n  // Edit Password Config\n  let editPasswordData;\n\n  const getUpdatedState = (updatedState, options) => {\n    editPasswordData = updatedState;\n    if (options?.submitUpdatedPassword)\n      updatePassword({ enterKeyPressed: true });\n  };\n\n  const updatePassword = async (options) => {\n    const { currentPassword, newPassword, confirmNewPassword } =\n      editPasswordData;\n\n    if (!currentPassword || !newPassword || !confirmNewPassword) {\n      return displayWarning(\"Please Enter All the Fields\");\n    }\n    if (currentPassword === newPassword) {\n      return displayWarning(\"New Password Must Differ from Current Password\");\n    }\n    if (newPassword !== confirmNewPassword) {\n      return displayWarning(\"New Password Must Match Confirm New Password\");\n    }\n    dispatch(setLoading(true));\n    const config = getAxiosConfig({ loggedInUser });\n    try {\n      await axios.put(\n        \"/api/user/update/password\",\n        { currentPassword, newPassword },\n        config\n      );\n      displaySuccess(\n        \"Password Updated Successfully. Please Login Again with Updated Password\",\n        5000\n      );\n\n      dispatch(setLoading(false));\n      localStorage.removeItem(\"loggedInUser\");\n      dispatch(setLoggedInUser(null));\n      if (options?.enterKeyPressed) {\n        dispatch(hideDialog());\n        dispatch(setSelectedChat(null));\n        navigate(\"/\");\n        return;\n      }\n      return \"pwdUpdated\";\n    } catch (error) {\n      dispatch(\n        displayToast({\n          title: \"Password Update Failed\",\n          message: error.response?.data?.message || error.message,\n          type: \"error\",\n          duration: 5000,\n          position: \"top-center\",\n        })\n      );\n      dispatch(setLoading(false));\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"loggedInUser\");\n    dispatch(setLoggedInUser(null));\n    dispatch(\n      displayToast({\n        message: \"Logged Out\",\n        type: \"success\",\n        duration: 1500,\n        position: \"bottom-center\",\n      })\n    );\n    return \"loggingOut\";\n  };\n\n  // Open dialogs\n  const openLogoutConfirmDialog = () => {\n    dispatch(setShowDialogActions(true));\n    setDialogBody(<>Are you sure you want to log out?</>);\n    dispatch(\n      displayDialog({\n        title: \"Logout Confirmation\",\n        nolabel: \"NO\",\n        yeslabel: \"YES\",\n        loadingYeslabel: \"Logging Out...\",\n        action: logout,\n      })\n    );\n  };\n\n  const openEditProfileDialog = () => {\n    dispatch(setShowDialogActions(false));\n    setDialogBody(<EditProfileBody />);\n    dispatch(\n      displayDialog({\n        title: isGuestUser ? \"View Profile\" : \"Edit Profile\",\n      })\n    );\n  };\n\n  const openEditPasswordDialog = () => {\n    dispatch(setShowDialogActions(true));\n    setDialogBody(<ChangePasswordBody getUpdatedState={getUpdatedState} />);\n    dispatch(\n      displayDialog({\n        title: \"Change Password\",\n        nolabel: \"CANCEL\",\n        yeslabel: \"SAVE\",\n        loadingYeslabel: \"Saving...\",\n        action: updatePassword,\n      })\n    );\n  };\n\n  return (\n    <Menu\n      menuAnchor={anchor}\n      setMenuAnchor={setAnchor}\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n    >\n      <MenuItem sx={menuItemProps} onClick={openEditProfileDialog}>\n        <ListItemIcon sx={menuIconProps}>\n          {isGuestUser ? <Person /> : <ManageAccounts />}\n        </ListItemIcon>\n        <MenuItemText>{isGuestUser ? \"View\" : \"Edit\"} Profile</MenuItemText>\n      </MenuItem>\n      {!isGuestUser && (\n        <MenuItem sx={menuItemProps} onClick={openEditPasswordDialog}>\n          <ListItemIcon sx={menuIconProps}>\n            <Key />\n          </ListItemIcon>\n          <MenuItemText>Change Password</MenuItemText>\n        </MenuItem>\n      )}\n      <MenuItem sx={menuItemProps} onClick={openLogoutConfirmDialog}>\n        <ListItemIcon sx={menuIconProps}>\n          <Logout />\n        </ListItemIcon>\n        <MenuItemText>Logout</MenuItemText>\n      </MenuItem>\n    </Menu>\n  );\n};\n\nexport default ProfileSettingsMenu;\n","import { Avatar } from \"@mui/material\";\nimport { truncateString } from \"../../utils/appUtils\";\nimport getCustomTooltip from \"../utils/CustomTooltip\";\n\nconst arrowStyles = { color: \"#A30CA7\" };\nconst tooltipStyles = {\n  maxWidth: 250,\n  color: \"#eee\",\n  fontFamily: \"Trebuchet MS\",\n  fontSize: 17,\n  padding: \"5px 12px\",\n  borderRadius: 5,\n  backgroundColor: \"#A30CA7\",\n};\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\n\nconst UserListItem = ({ user, truncateValues }) => {\n  const { _id, name, email, profilePic } = user;\n  const [max, index] = truncateValues;\n\n  return (\n    <div\n      data-user={_id}\n      className={`userListItem user-select-none d-flex text-light justify-content-start align-items-center pointer px-3`}\n    >\n      <CustomTooltip\n        data-user={_id}\n        title={`${name} (${email})`}\n        placement=\"top-start\"\n        arrow\n      >\n        <Avatar\n          src={profilePic}\n          alt={_id}\n          data-user={_id}\n          className={`listItemAvatar userListAvatar`}\n        />\n      </CustomTooltip>\n      <div\n        data-user={_id}\n        className=\"userListData d-flex flex-column align-items-start px-2\"\n      >\n        <p data-user={_id} className=\"userListName fs-5 fw-bold text-info\">\n          {truncateString(name, max, index)}\n        </p>\n        <p data-user={_id} className=\"userListEmail fs-6\">\n          {truncateString(email, max, index)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default UserListItem;\n","import { Skeleton } from \"@mui/material\";\n\ninterface Props {\n  listOf: string;\n  dpRadius: string;\n  count: number;\n}\n\nconst LoadingList = ({ listOf, dpRadius, count }: Props) => {\n  const skeletonStyle = { backgroundColor: \"#999\" };\n  return (\n    <>\n      {[...Array(count)].map((e, i) => (\n        <div key={`loadingListOf${listOf + i}`} className=\"loadingListItem row\">\n          <Skeleton\n            variant=\"circular\"\n            className=\"loadingDp rounded-circle\"\n            style={{ ...skeletonStyle, width: dpRadius, height: dpRadius }}\n          />\n          <Skeleton\n            variant=\"rectangular\"\n            className=\"loadingTitle col-5\"\n            style={skeletonStyle}\n          />\n          <Skeleton\n            variant=\"rectangular\"\n            className=\"loadingDesc col-7\"\n            style={skeletonStyle}\n          />\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default LoadingList;\n","import { Clear, Search } from \"@mui/icons-material\";\nimport { IconButton } from \"@mui/material\";\nimport { forwardRef, LegacyRef, MutableRefObject, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectFormfieldState } from \"../../store/slices/FormfieldSlice\";\n\ninterface Props {\n  searchHandler: Function;\n  autoFocus: boolean;\n  placeholder: string;\n  clearInput: Function;\n}\n\ntype InputRef = MutableRefObject<HTMLInputElement>;\n\nconst SearchInput = forwardRef<HTMLInputElement, Props>((props, inputRef) => {\n  const { searchHandler, autoFocus, placeholder, clearInput } = props;\n  const { disableIfLoading, formFieldClassName, inputFieldClassName } =\n    useSelector(selectFormfieldState);\n\n  // To display/hide clear search (<Close />) icon when typing\n  const [typing, setTyping] = useState(false);\n\n  const onClearIconClick = () => {\n    if (!inputRef || !(inputRef as InputRef).current) return;\n    (inputRef as InputRef).current.value = \"\";\n    setTyping(false); // Hide '<Close />' icon\n    (inputRef as InputRef).current.focus();\n    clearInput();\n  };\n\n  return (\n    <section className={`${formFieldClassName} pt-3 pb-2 mx-1`}>\n      {/* Input box */}\n      <div className=\"input-group\">\n        <span\n          className={`input-group-text ${disableIfLoading} bg-black bg-gradient border-secondary text-light rounded-pill rounded-end`}\n        >\n          <Search className=\"mx-0\" style={{ marginTop: \"3px\" }} />\n        </span>\n        <input\n          type=\"text\"\n          ref={inputRef as LegacyRef<HTMLInputElement>}\n          onChange={(e) => {\n            setTyping(Boolean(e.target.value.trim()));\n            searchHandler(e);\n          }}\n          autoFocus={autoFocus}\n          placeholder={placeholder}\n          className={`${inputFieldClassName\n            .replace(\"text-center\", \"text-start\")\n            .replace(\"pill\", \"0\")} border-start-0 border-end-0 d-inline-block`}\n          style={{ cursor: \"auto\", fontSize: \"18px\" }}\n        />\n        {/* Clear icon button */}\n        <span\n          className={`input-group-text ${disableIfLoading} bg-black bg-gradient border-secondary text-light rounded-pill rounded-start border-start-0`}\n        >\n          <IconButton\n            onClick={onClearIconClick}\n            className={`${typing ? \"d-inline-block\" : \"d-none\"}`}\n            style={{\n              padding: \"0px 9px 3px 9px\",\n              margin: \"-7px\",\n              color: \"#999999\",\n            }}\n            sx={{ \":hover\": { backgroundColor: \"#aaaaaa20\" } }}\n          >\n            <Clear style={{ fontSize: \"19px\" }} />\n          </IconButton>\n        </span>\n      </div>\n    </section>\n  );\n});\n\nexport default SearchInput;\n","import { ChevronLeft } from \"@mui/icons-material\";\nimport { Drawer, IconButton } from \"@mui/material\";\nimport { useEffect, useRef, useState } from \"react\";\nimport axios from \"../../utils/axios\";\nimport { debounce, getAxiosConfig, truncateString } from \"../../utils/appUtils\";\nimport UserListItem from \"./UserListItem\";\nimport LoadingList from \"./LoadingList\";\nimport SearchInput from \"./SearchInput\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectAppState,\n  setDeleteNotifsOfChat,\n  setFetchMsgs,\n  setSelectedChat,\n} from \"../../store/slices/AppSlice\";\nimport {\n  selectFormfieldState,\n  setLoading,\n} from \"../../store/slices/FormfieldSlice\";\nimport { displayToast } from \"../../store/slices/ToastSlice\";\n\nconst SearchUsersDrawer = ({ isDrawerOpen, setIsDrawerOpen }) => {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const { loggedInUser } = useSelector(selectAppState);\n  const { loading } = useSelector(selectFormfieldState);\n  const dispatch = useDispatch();\n  const searchUserInput = useRef(null);\n\n  useEffect(() => {\n    if (isDrawerOpen) {\n      setSearchResults([]);\n      dispatch(setLoading(false));\n      setSearchQuery(\"\");\n    }\n  }, [isDrawerOpen]);\n\n  const handleClose = () => setIsDrawerOpen(false);\n\n  // Debouncing fetchUsers method to limit the no. of API calls\n  const searchUsers = debounce(async (e) => {\n    const query = e.target?.value?.trim();\n    setSearchQuery(query);\n    if (!query) return setSearchResults([]);\n\n    dispatch(setLoading(true));\n    const config = getAxiosConfig({ loggedInUser });\n    try {\n      const { data } = await axios.get(`/api/user?search=${query}`, config);\n\n      dispatch(setLoading(false));\n      setSearchResults(data);\n    } catch (error) {\n      dispatch(\n        displayToast({\n          title: \"Couldn't Fetch Users\",\n          message: error.response?.data?.message || error.message,\n          type: \"error\",\n          duration: 5000,\n          position: \"bottom-left\",\n        })\n      );\n      dispatch(setLoading(false));\n    }\n  }, 800);\n\n  // Create/Retreive chat when a user item is clicked\n  const createOrRetrieveChat = async (userId) => {\n    handleClose();\n    dispatch(setLoading(true));\n    const config = getAxiosConfig({ loggedInUser });\n    try {\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\n\n      dispatch(setLoading(false));\n      dispatch(setSelectedChat(data));\n      dispatch(setFetchMsgs(true));\n      dispatch(setDeleteNotifsOfChat(data._id));\n    } catch (error) {\n      dispatch(\n        displayToast({\n          title: \"Couldn't Create/Retrieve Chat\",\n          message: error.response?.data?.message || error.message,\n          type: \"error\",\n          duration: 4000,\n          position: \"bottom-center\",\n        })\n      );\n      dispatch(setLoading(false));\n    }\n  };\n\n  return (\n    <>\n      <Drawer\n        PaperProps={{\n          sx: {\n            borderTopRightRadius: 10,\n            borderBottomRightRadius: 10,\n            backgroundImage: \"linear-gradient(0deg,#222,#444)\",\n            padding: \"10px\",\n            width: \"350px\",\n          },\n        }}\n        anchor=\"left\"\n        open={isDrawerOpen}\n        onClose={handleClose}\n        transitionDuration={350}\n      >\n        <div className=\"d-flex justify-content-center\">\n          <span\n            className=\"text-center mt-1 user-select-none text-light\"\n            style={{ marginTop: 0, fontSize: 27 }}\n          >\n            Search Users\n            <IconButton\n              onClick={handleClose}\n              sx={{\n                position: \"absolute\",\n                right: 8,\n                top: 5,\n                color: \"#999999\",\n                \":hover\": { backgroundColor: \"#aaaaaa20\" },\n              }}\n            >\n              <ChevronLeft className=\"text-light m-1\" />\n            </IconButton>\n          </span>\n        </div>\n        {/* Search Bar */}\n        <SearchInput\n          ref={searchUserInput}\n          searchHandler={searchUsers}\n          autoFocus={true}\n          placeholder=\"Search by Name or Email\"\n          clearInput={() => {\n            setSearchQuery(\"\");\n            setSearchResults([]);\n            searchUserInput.current.focus();\n          }}\n        />\n        {/* Search Results */}\n        <section\n          className=\"position-relative mx-1 my-2 h-100\"\n          style={{ overflowY: \"auto\", overflowX: \"hidden\" }}\n        >\n          <div\n            // 'Event delegation' (add only one event listener for\n            // parent element instead of adding for each child element)\n            onClick={(e) => {\n              const userId = e.target.dataset.user || e.target.alt;\n              if (!userId) return;\n              createOrRetrieveChat(userId);\n            }}\n          >\n            {loading ? (\n              <LoadingList listOf=\"User\" dpRadius={\"42px\"} count={8} />\n            ) : searchResults.length > 0 ? (\n              searchResults.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  truncateValues={[27, 24]}\n                />\n              ))\n            ) : searchQuery && !loading ? (\n              <p className=\"text-light text-center fs-5 mt-3 mx-5\">\n                No results found for '\n                <span className=\"text-info\">\n                  {truncateString(searchQuery, 30, 26)}\n                </span>\n                '\n              </p>\n            ) : (\n              <></>\n            )}\n          </div>\n        </section>\n      </Drawer>\n    </>\n  );\n};\n\nexport default SearchUsersDrawer;\n","import { Notifications, Search } from \"@mui/icons-material\";\nimport { Avatar, IconButton } from \"@mui/material\";\nimport { useEffect,  useState } from \"react\";\nimport NotificationsMenu from \"./menus/NotificationsMenu\";\nimport ProfileSettingsMenu from \"./menus/ProfileSettingsMenu\";\nimport SearchUsersDrawer from \"./utils/SearchUsersDrawer\";\nimport getCustomTooltip from \"./utils/CustomTooltip\";\nimport { useSelector } from \"react-redux\";\nimport { selectAppState } from \"../store/slices/AppSlice\";\n\nconst arrowStyles = { color: \"#666\" };\nconst tooltipStyles = {\n  maxWidth: 250,\n  color: \"#eee\",\n  fontFamily: \"Trebuchet MS\",\n  fontSize: 16,\n  padding: \"5px 15px\",\n  backgroundColor: \"#666\",\n};\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\n\nconst ChatpageHeader = ({ chats, setDialogBody }) => {\n  const { loggedInUser } = useSelector(selectAppState);\n  const notifCount = loggedInUser?.notifications?.length || \"\";\n\n  const [animateNotif, setAnimateNotif] = useState(false);\n  const [notificationsMenuAnchor, setNotificationsMenuAnchor] = useState(null);\n  const [profileSettingsMenuAnchor, setProfileSettingsMenuAnchor] =\n    useState(null);\n\n  const openNotificationMenu = (e) => setNotificationsMenuAnchor(e.target);\n  const openProfileSettingsMenu = (e) => setProfileSettingsMenuAnchor(e.target);\n\n  // For opening/closing 'search users' left drawer\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n\n  useEffect(() => {\n    if (animateNotif) return;\n    setAnimateNotif(true);\n    let timeout = setTimeout(() => {\n      setAnimateNotif(false);\n    }, 1000);\n    return () => clearTimeout(timeout);\n  }, [notifCount]);\n\n  return (\n    <header\n      className={`chatpageDiv d-flex justify-content-between align-items-center user-select-none`}\n    >\n      {/* Search Users to create/access chat */}\n      <CustomTooltip\n        title=\"Search Members to Start or Open a Private Chat\"\n        placement=\"bottom-start\"\n        arrow\n      >\n        <button\n          style={{ borderRadius: \"20px\" }}\n          className={`btn btn-outline-secondary text-light px-3`}\n          onClick={() => setIsDrawerOpen(true)}\n        >\n          <Search className={`me-1`} />\n          <span className={`d-none d-md-inline mb-1 fs-5`}>Search Members</span>\n        </button>\n      </CustomTooltip>\n      <SearchUsersDrawer\n        isDrawerOpen={isDrawerOpen}\n        setIsDrawerOpen={setIsDrawerOpen}\n      />\n\n      {/* App Logo */}\n      <div className={`d-flex align-items-center ms-3 ms-md-0`}>\n        <span style={{ color: \"orange\" }} className=\"fs-4 fw-bold mt-1\">\n        Global Service Group\n        </span>\n      </div>\n\n      {/* User notification and profile settings icons */}\n      <div>\n        <CustomTooltip title={`Notifications`} placement=\"bottom-end\" arrow>\n          <IconButton\n            className=\"position-relative mx-1\"\n            onClick={openNotificationMenu}\n            sx={{\n              color: \"#999999\",\n              \":hover\": { backgroundColor: \"#aaaaaa20\" },\n            }}\n          >\n            {notifCount && (\n              <span\n                className={`notifBadge ${\n                  animateNotif ? \"notifCountChange\" : \"\"\n                } badge rounded-circle bg-danger \n               position-absolute`}\n                style={{\n                  fontSize: notifCount > 99 ? 12 : 13,\n                  top: -2,\n                  right: notifCount > 99 ? -11 : notifCount > 9 ? -5 : -2,\n                  padding:\n                    notifCount > 99\n                      ? \"6px 5px\"\n                      : notifCount > 9\n                      ? \"4px 5px\"\n                      : \"4px 7px\",\n                }}\n              >\n                {!notifCount ? \"\" : notifCount > 99 ? \"99+\" : notifCount}\n              </span>\n            )}\n            <Notifications className={`text-light`} />\n          </IconButton>\n        </CustomTooltip>\n        <CustomTooltip\n          title=\"Profile Settings\"\n          size=\"small\"\n          placement=\"bottom-end\"\n          arrow\n        >\n          <IconButton\n            className=\"mx-md-3 mx-lg-4\"\n            sx={{\n              color: \"#999999\",\n              \":hover\": { backgroundColor: \"#aaaaaa20\" },\n            }}\n            onClick={openProfileSettingsMenu}\n          >\n            <Avatar\n              alt=\"LoggedInUser\"\n              className=\"img-fluid\"\n              src={loggedInUser?.profilePic}\n            />\n          </IconButton>\n        </CustomTooltip>\n        <NotificationsMenu\n          chats={chats}\n          anchor={notificationsMenuAnchor}\n          setAnchor={setNotificationsMenuAnchor}\n        />\n        <ProfileSettingsMenu\n          anchor={profileSettingsMenuAnchor}\n          setAnchor={setProfileSettingsMenuAnchor}\n          setDialogBody={setDialogBody}\n        />\n      </div>\n    </header>\n  );\n};\n\nexport default ChatpageHeader;\n","import { useRef, useState } from \"react\";\nimport { Edit, KeyboardDoubleArrowLeft } from \"@mui/icons-material\";\nimport getCustomTooltip from \"../utils/CustomTooltip\";\nimport { getAxiosConfig, isImageFile, TWO_MB } from \"../../utils/appUtils\";\nimport EditPicMenu from \"../menus/EditPicMenu\";\nimport axios from \"../../utils/axios\";\nimport { Button, CircularProgress, DialogActions } from \"@mui/material\";\nimport { btnCustomStyle, btnHoverStyle } from \"../utils/CustomDialog\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectAppState,\n  setGroupInfo,\n  toggleRefresh,\n} from \"../../store/slices/AppSlice\";\nimport {\n  selectFormfieldState,\n  setLoading,\n} from \"../../store/slices/FormfieldSlice\";\nimport { displayToast } from \"../../store/slices/ToastSlice\";\nimport { hideDialog } from \"../../store/slices/CustomDialogSlice\";\n\nconst arrowStyles = { color: \"#111\" };\nconst tooltipStyles = {\n  maxWidth: 250,\n  color: \"#eee\",\n  fontFamily: \"Trebuchet MS\",\n  fontSize: 17,\n  padding: \"5px 10px\",\n  border: \"1px solid #333\",\n  backgroundColor: \"#111\",\n};\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\nconst DEFAULT_GROUP_DP = process.env.REACT_APP_DEFAULT_GROUP_DP;\n\nconst NewGroupBody = ({ closeChildDialog }) => {\n  const { loggedInUser, refresh, groupInfo, clientSocket, isSocketConnected } =\n    useSelector(selectAppState);\n  const {\n    loading,\n    disableIfLoading,\n    formFieldClassName,\n    inputFieldClassName,\n    formLabelClassName,\n  } = useSelector(selectFormfieldState);\n  const dispatch = useDispatch();\n\n  const { chatDisplayPicUrl, chatName } = groupInfo;\n  const [editGroupDpMenuAnchor, setEditGroupDpMenuAnchor] = useState(null);\n  const imgInput = useRef();\n\n  // Click a button/icon upon 'Enter' or 'Space' keydown\n  const clickOnKeydown = (e) => {\n    if (e.key === \" \" || e.key === \"Enter\") e.target.click();\n  };\n\n  const displayWarning = (message = \"Warning\", duration = 3000) => {\n    dispatch(\n      displayToast({\n        message,\n        type: \"warning\",\n        duration,\n        position: \"top-center\",\n      })\n    );\n  };\n\n  // Create group chat\n  const createGroupChat = async () => {\n    if (!groupInfo) return;\n    const { chatDisplayPic, chatName, users } = groupInfo;\n\n    if (!chatName) return displayWarning(\"Please Enter a Discussion Name\");\n\n    if (users?.length < 2)\n      return displayWarning(\"Please Add Atleast 2 Members\");\n\n    dispatch(setLoading(true));\n    const config = getAxiosConfig({ loggedInUser, formData: true });\n    try {\n      const formData = new FormData();\n      formData.append(\"displayPic\", chatDisplayPic);\n      formData.append(\"chatName\", chatName);\n      formData.append(\"users\", JSON.stringify(users?.map((user) => user?._id)));\n\n      const { data } = await axios.post(\"/api/chat/group\", formData, config);\n      if (isSocketConnected) {\n        clientSocket.emit(\"new grp created\", {\n          admin: loggedInUser,\n          newGroup: data,\n        });\n      }\n      dispatch(\n        displayToast({\n          message: \"Discussion Created Successfully\",\n          type: \"success\",\n          duration: 2000,\n          position: \"bottom-center\",\n        })\n      );\n\n      dispatch(setLoading(false));\n      dispatch(toggleRefresh());\n      closeChildDialog();\n      // Close Parent Dialog as well\n      dispatch(hideDialog());\n    } catch (error) {\n      dispatch(\n        displayToast({\n          title: \"Couldn't Create Discussion\",\n          message: error.response?.data?.message || error.message,\n          type: \"error\",\n          duration: 5000,\n          position: \"top-center\",\n        })\n      );\n    }\n  };\n\n  const handleImgInputChange = (e) => {\n    const image = e.target.files[0];\n    if (!image) return;\n\n    if (!isImageFile(image.name)) {\n      return dispatch(\n        displayToast({\n          title: \"Invalid Image File\",\n          message: \"Please Select an Image File (png/jpg/jpeg/svg/webp)\",\n          type: \"warning\",\n          duration: 5000,\n          position: \"bottom-center\",\n        })\n      );\n    }\n\n    if (image.size >= TWO_MB) {\n      imgInput.current.value = \"\";\n      return displayWarning(\"Please Select an Image Smaller than 2 MB\", 4000);\n    }\n    dispatch(\n      setGroupInfo({\n        ...groupInfo,\n        chatDisplayPic: image,\n        chatDisplayPicUrl: URL.createObjectURL(image),\n      })\n    );\n  };\n\n  const handleReset = (e) => {\n    e.preventDefault();\n    dispatch(\n      setGroupInfo({\n        ...groupInfo,\n        chatDisplayPic: null,\n        chatDisplayPicUrl: DEFAULT_GROUP_DP,\n      })\n    );\n    imgInput.current.value = \"\";\n  };\n\n  const openEditGroupDpMenu = (e) => {\n    setEditGroupDpMenuAnchor(e.target);\n  };\n\n  return (\n    <div>\n      {/* Select Display Pic */}\n      <section className=\"newGroup d-flex position-relative mb-4\">\n        <img\n          className=\"img-fluid d-flex mx-auto border border-2 border-primary rounded-circle mt-1\"\n          src={chatDisplayPicUrl}\n          alt=\"displayPic\"\n        />\n        <CustomTooltip\n          title=\"Edit Discussion Display Pic\"\n          placement=\"top-start\"\n          arrow\n        >\n          <i\n            id=\"editGroupDPTooltip\"\n            tabIndex={2}\n            onKeyDown={clickOnKeydown}\n            className={`selectPicIcon position-absolute p-2 d-flex ${disableIfLoading} justify-content-center align-items-center bg-success rounded-circle pointer`}\n            onClick={openEditGroupDpMenu}\n          >\n            <Edit className=\"text-light fs-6\" />\n          </i>\n        </CustomTooltip>\n        {/* Edit/Delete profile pic menu */}\n        <EditPicMenu\n          anchor={editGroupDpMenuAnchor}\n          setAnchor={setEditGroupDpMenuAnchor}\n          selectProfilePic={() => imgInput.current.click()}\n          openDeletePhotoConfirmDialog={handleReset}\n          deletePhotoCondition={\n            !chatDisplayPicUrl?.endsWith(\"group_mbuvht.png\")\n          }\n        />\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={handleImgInputChange}\n          name=\"groupdp\"\n          id=\"editGroupDp\"\n          ref={imgInput}\n          className={`d-none`}\n          disabled={loading}\n        />\n      </section>\n      {/* Group Name input */}\n      <section className={`${formFieldClassName}`}>\n        <label htmlFor=\"groupName\" className={`${formLabelClassName}`}>\n          Discussion Name <span className=\"required\">*</span>\n        </label>\n        <input\n          type=\"text\"\n          value={chatName}\n          onChange={(e) => {\n            dispatch(setGroupInfo({ ...groupInfo, chatName: e.target.value }));\n          }}\n          onKeyDown={(e) => {\n            if (e.key === \"Enter\") createGroupChat();\n          }}\n          required\n          autoFocus\n          name=\"groupname\"\n          id=\"groupName\"\n          className={`${inputFieldClassName}`}\n          disabled={loading}\n          placeholder=\"Eg: The Avengers\"\n        />\n      </section>\n      <DialogActions className=\"mt-3\" style={{ marginBottom: \"-17px\" }}>\n        <Button\n          sx={btnHoverStyle}\n          disabled={loading}\n          style={btnCustomStyle}\n          onClick={closeChildDialog}\n        >\n          <span>\n            <KeyboardDoubleArrowLeft\n              className=\"btnArrowIcons\"\n              style={{\n                margin: \"0px 5px 2px 0px\",\n              }}\n            />\n            Back\n          </span>\n        </Button>\n        <Button\n          sx={btnHoverStyle}\n          disabled={loading}\n          style={btnCustomStyle}\n          onClick={createGroupChat}\n        >\n          {loading ? (\n            <>\n              <CircularProgress size={25} style={{ marginRight: \"10px\" }} />\n              <span>Creating...</span>\n            </>\n          ) : (\n            <>Create Discussion</>\n          )}\n        </Button>\n      </DialogActions>\n    </div>\n  );\n};\n\nexport default NewGroupBody;\n","import { useEffect, useRef, useState } from \"react\";\nimport { Avatar, Chip } from \"@mui/material\";\nimport axios from \"../../utils/axios\";\nimport { debounce, getAxiosConfig, truncateString } from \"../../utils/appUtils\";\nimport UserListItem from \"../utils/UserListItem\";\nimport SearchInput from \"../utils/SearchInput\";\nimport NewGroupBody from \"./NewGroupBody\";\nimport ChildDialog from \"../utils/ChildDialog\";\nimport LoadingList from \"../utils/LoadingList\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectAppState, setGroupInfo } from \"../../store/slices/AppSlice\";\nimport { selectChildDialogState } from \"../../store/slices/ChildDialogSlice\";\nimport { displayToast } from \"../../store/slices/ToastSlice\";\nimport { setDialogAction } from \"../../store/slices/CustomDialogSlice\";\n\nconst AddMembersToGroup = ({ getAddedMembers, forCreateGroup }) => {\n  const { loggedInUser, groupInfo } = useSelector(selectAppState);\n  const { childDialogMethods } = useSelector(selectChildDialogState);\n  const dispatch = useDispatch();\n\n  const [groupData, setGroupData] = useState(groupInfo);\n  const [fetching, setFetching] = useState(false);\n  const groupMembers = groupData?.users;\n  const [isMemberSelected, setIsMemberSelected] = useState(false);\n  const [addedMembers, setAddedMembers] = useState([]);\n\n  const searchUserInput = useRef(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const { setChildDialogBody, displayChildDialog, closeChildDialog } =\n    childDialogMethods;\n  const [showDialogActions, setShowDialogActions] = useState(true);\n  const [showDialogClose, setShowDialogClose] = useState(false);\n\n  useEffect(() => {\n    setGroupData(groupInfo);\n  }, [groupInfo]);\n\n  // For 'create group chat'\n  const openNewGroupDialog = () => {\n    if (addedMembers?.length < 2) {\n      return dispatch(\n        displayToast({\n          message: \"Please Add Atleast 2 Members\",\n          type: \"warning\",\n          duration: 3000,\n          position: \"top-center\",\n        })\n      );\n    }\n    setShowDialogActions(false);\n    setShowDialogClose(false);\n    dispatch(setGroupInfo(groupData));\n    setChildDialogBody(<NewGroupBody closeChildDialog={closeChildDialog} />);\n    displayChildDialog({\n      title: \"Create New Discussion\",\n    });\n  };\n\n  useEffect(() => {\n    setSearchResults([]);\n    setSearchQuery(\"\");\n  }, []);\n\n  useEffect(() => {\n    // For create group: [Next >>] button\n    if (forCreateGroup) dispatch(setDialogAction(openNewGroupDialog));\n  }, [groupData]);\n\n  useEffect(() => {\n    // For add more group members\n    if (!forCreateGroup) getAddedMembers([...addedMembers]);\n  }, [addedMembers]);\n\n  const searchUsers = debounce(async (e) => {\n    const query = e.target?.value?.trim();\n    setSearchQuery(query);\n    if (!query) return setSearchResults([]);\n\n    setFetching(true);\n    if (isMemberSelected) setIsMemberSelected(false);\n\n    const config = getAxiosConfig({ loggedInUser });\n    try {\n      const { data } = await axios.get(`/api/user?search=${query}`, config);\n\n      // Remove all the already added members from search results\n      let membersNotAdded = [...data];\n      groupMembers.forEach((addedMember) => {\n        membersNotAdded = membersNotAdded.filter(\n          (m) => m._id !== addedMember._id\n        );\n      });\n\n      setFetching(false);\n      setSearchResults(membersNotAdded);\n    } catch (error) {\n      dispatch(\n        displayToast({\n          title: \"Couldn't Fetch Members\",\n          message: error.response?.data?.message || error.message,\n          type: \"error\",\n          duration: 5000,\n          position: \"bottom-left\",\n        })\n      );\n      setFetching(false);\n    }\n  }, 800);\n\n  const unselectUser = (user) => {\n    if (!user) return;\n    setGroupData({\n      ...groupData,\n      users: groupMembers.filter((u) => u._id !== user._id),\n    });\n    // Remove user from added member list\n    setAddedMembers(addedMembers.filter((u) => u._id !== user._id));\n    // Add removed user to search result list\n    setSearchResults([user, ...searchResults]);\n  };\n\n  return (\n    <div className=\"addGroupMembers d-flex flex-column\">\n      {/* Selected Users tag list */}\n      <section\n        className=\"mx-auto px-3 py-2 overflow-auto d-flex flex-wrap\"\n        style={{\n          flex: \"0.33\",\n          borderRadius: \"15px\",\n          backgroundColor: \"#303030\",\n        }}\n      >\n        {addedMembers?.map((user) => (\n          <Chip\n            key={user?._id}\n            className=\"userChip text-light bg-success rounded-pill fs-6\"\n            avatar={\n              <Avatar\n                className=\"userChipAvatar\"\n                alt={user?.name}\n                src={user?.profilePic}\n              />\n            }\n            label={truncateString(user?.name?.split(\" \")[0], 12, 8)}\n            onDelete={() => unselectUser(user)}\n          />\n        ))}\n      </section>\n      {/* Search Bar */}\n      <SearchInput\n        ref={searchUserInput}\n        searchHandler={searchUsers}\n        autoFocus={true}\n        placeholder=\"Search Members\"\n        clearInput={() => {\n          setSearchQuery(\"\");\n          setSearchResults([]);\n          searchUserInput.current.focus();\n        }}\n      />\n      {/* Search Results */}\n      <section\n        className=\"position-relative mx-auto mt-2 overflow-auto\"\n        style={{ flex: \"1\", marginBottom: \"-10px\" }}\n      >\n        <div\n          // 'Event delegation'\n          onClick={(e) => {\n            const userId = e.target.dataset.user || e.target.alt;\n            if (!userId) return;\n\n            if (!isMemberSelected) setIsMemberSelected(true);\n            // Add selected user to tag list\n            const selectedUser = searchResults.find((u) => u._id === userId);\n            setGroupData({\n              ...groupData,\n              users: [...groupMembers, selectedUser],\n            });\n            // Add selected user to added member list\n            setAddedMembers([...addedMembers, selectedUser]);\n            // Remove selected user from search result list\n            setSearchResults(searchResults.filter((u) => u._id !== userId));\n          }}\n        >\n          {fetching ? (\n            <LoadingList listOf=\"Member\" dpRadius={\"43px\"} count={6} />\n          ) : searchResults.length > 0 ? (\n            searchResults.map((user) => (\n              <UserListItem\n                key={user._id}\n                user={user}\n                truncateValues={[21, 18]}\n              />\n            ))\n          ) : (\n            searchQuery &&\n            !fetching && (\n              <p className=\"text-light text-center fs-5 mt-3 mx-5\">\n                {isMemberSelected ? \"No Other Members \" : \"No Results \"}\n                Found for '\n                <span className=\"text-info\">\n                  {truncateString(searchQuery, 25, 22)}\n                </span>\n                '\n              </p>\n            )\n          )}\n        </div>\n      </section>\n      {/* Child dialog */}\n      <ChildDialog\n        showChildDialogActions={showDialogActions}\n        showChildDialogClose={showDialogClose}\n      />\n    </div>\n  );\n};\n\nexport default AddMembersToGroup;\n","import { Avatar } from \"@mui/material\";\nimport LottieAnimation from \"../utils/LottieAnimation\";\nimport typingAnimData from \"../../animations/typing.json\";\nimport { useRef } from \"react\";\n\nconst TypingIndicator = ({ typingChatUser, showAvatar }) => {\n  const typingGif = useRef(null);\n  const typingUserData = typingChatUser?.toString().split(\"---\") || [];\n  const typingUserName = typingUserData[1] || \"\";\n  const isGroupChat = typingUserData[3] === \"true\";\n  return (\n    <span\n      className={`typingIndicator ${\n        typingChatUser ? \"displayTyping\" : \"hideTyping\"\n      } \n      d-flex pt-2 rounded-3 ps-2 ms-3`}\n    >\n      {showAvatar && (\n        <Avatar\n          alt={typingUserName || \"Receiver\"}\n          src={typingUserData[2] || \"Receiver\"}\n          style={{ height: 30, width: 30 }}\n        />\n      )}\n      <span className=\"ms-2\">\n        {typingUserName && isGroupChat ? `${typingUserName} is ` : \"\"}typing\n      </span>\n      <LottieAnimation\n        ref={typingGif}\n        className={\"\"}\n        style={{ height: 30, bottom: 0 }}\n        animationData={typingAnimData}\n      />\n    </span>\n  );\n};\n\nexport default TypingIndicator;\n","import {\n  AudioFile,\n  Description,\n  DoneAll,\n  GifBox,\n  Image,\n  PictureAsPdf,\n  VideoFile,\n} from \"@mui/icons-material\";\nimport { Avatar } from \"@mui/material\";\nimport { selectAppState } from \"../../store/slices/AppSlice\";\nimport { useAppSelector } from \"../../store/storeHooks\";\nimport {\n  dateStringOf,\n  isImageFile,\n  msgDateStringOf,\n  msgTimeStringOf,\n  truncateString,\n} from \"../../utils/appUtils\";\nimport getCustomTooltip from \"./CustomTooltip\";\nimport TypingIndicator from \"./TypingIndicator\";\n\nconst arrowStyles = { color: \"#A30CA7\" };\nconst tooltipStyles = {\n  maxWidth: 230,\n  color: \"#eee\",\n  fontFamily: \"Trebuchet MS\",\n  fontSize: 17,\n  padding: \"5px 12px\",\n  borderRadius: 5,\n  backgroundColor: \"#A30CA7\",\n};\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\n\nconst ChatListItem = ({ chat, chatNotifCount, typingChatUser }) => {\n  const { selectedChat, loggedInUser } = useAppSelector(selectAppState);\n  const {\n    _id,\n    chatName,\n    receiverEmail,\n    isGroupChat,\n    lastMessage,\n    chatDisplayPic,\n  } = chat;\n  const tooltipTitle = isGroupChat\n    ? `Group: ${chatName}\\n(${chat?.users?.length} Members)`\n    : `${chatName}\\n${receiverEmail}`;\n\n  let lastMsgContent = lastMessage?.content\n    ?.replaceAll(\"<br>\", \"\\n\")\n    .replaceAll(\"&nbsp;\", \" \")\n    .replaceAll(\"<div>\", \"\\n\")\n    .replaceAll(\"</div>\", \"\\n\")\n    .replaceAll(\"<span>\", \"\")\n    .replaceAll(\"</span>\", \"\");\n\n  const lastMsgDate = new Date(lastMessage?.createdAt);\n  const lastMsgDateString = msgDateStringOf(lastMsgDate);\n\n  const lastMsgFileUrl = lastMessage?.fileUrl;\n  const fileContents = lastMessage?.file_name?.split(\"===\") || [];\n  const lastMsgFileName = fileContents[0] || \"\";\n  const lastMsgData = lastMsgContent || lastMsgFileName;\n  const fileType = fileContents[1]?.split(\"+++\")[1];\n  let lastMsgFileType;\n\n  if (lastMsgFileUrl) {\n    lastMsgFileType = isImageFile(lastMsgFileUrl)\n      ? \"image\"\n      : /(\\.gif)$/.test(lastMsgFileUrl)\n      ? \"gif\"\n      : fileType?.startsWith(\"video/\") ||\n        /(\\.mp4|\\.mov|\\.ogv|\\.webm)$/.test(lastMsgFileUrl)\n      ? \"video\"\n      : fileType?.startsWith(\"audio/\") ||\n        /(\\.mp3|\\.ogg|\\.wav)$/.test(lastMsgFileUrl)\n      ? \"audio\"\n      : /(\\.pdf)$/.test(lastMsgFileUrl)\n      ? \"pdf\"\n      : \"otherFile\";\n  }\n\n  return (\n    <div\n      data-chat={_id}\n      data-has-notifs={chatNotifCount}\n      className={`chatListItem w-100 user-select-none text-light pointer ${\n        selectedChat?._id === _id ? \"isSelected\" : \"\"\n      } d-flex justify-content-start align-items-center`}\n    >\n      {/* Chat Display Pic */}\n      <CustomTooltip\n        title={`View ${isGroupChat ? \"Discussion DP\" : \"Profile Pic\"}`}\n        placement=\"top-start\"\n        arrow\n      >\n        <Avatar\n          src={chatDisplayPic}\n          alt={chatName}\n          data-chat={_id}\n          data-has-notifs={chatNotifCount}\n          className={`img-fluid listItemAvatar chatListAvatar rounded-circle`}\n        />\n      </CustomTooltip>\n      {/* Chat Data */}\n      <div\n        data-chat={_id}\n        data-has-notifs={chatNotifCount}\n        className=\"chatListData w-100 d-flex flex-column align-items-start px-2\"\n      >\n        {/* Chat Name */}\n        <p\n          data-chat={_id}\n          data-has-notifs={chatNotifCount}\n          title={tooltipTitle}\n          className=\"chatListName fs-5 fw-bold text-info text-start\"\n        >\n          {truncateString(chatName, 31, 28)}\n        </p>\n        {lastMessage && (\n          <span\n            className=\"lastMsgDate\"\n            data-chat={_id}\n            data-has-notifs={chatNotifCount}\n            style={{ color: chatNotifCount ? \"#50F0B8\" : \"#b9b9b9\" }}\n          >\n            {lastMsgDateString === \"Today\"\n              ? msgTimeStringOf(lastMsgDate)\n              : lastMsgDateString !== \"Yesterday\"\n              ? dateStringOf(lastMsgDate)\n              : \"Yesterday\"}\n          </span>\n        )}\n        {lastMessage && chatNotifCount && (\n          <span\n            className={`notifBadge badge rounded-circle\n             position-absolute text-black bg-gradient`}\n            data-chat={_id}\n            data-has-notifs={chatNotifCount}\n            style={{\n              fontSize: chatNotifCount > 99 ? 12 : 13,\n              right: 17,\n              bottom: chatNotifCount > 9 ? 8 : 9,\n              padding:\n                chatNotifCount > 99\n                  ? \"6px 4px\"\n                  : chatNotifCount > 9\n                  ? \"6px 5px\"\n                  : \"4px 7px\",\n            }}\n          >\n            {chatNotifCount || \"\"}\n          </span>\n        )}\n        {/* Last Message Data */}\n        {typingChatUser ? (\n          <span style={{ color: \"#73F76D\", margin: \"-6px 0px -4px -30px\" }}>\n            <TypingIndicator typingChatUser={typingChatUser} />\n          </span>\n        ) : (\n          (lastMessage || lastMessage === null || isGroupChat) && (\n            <p\n              data-chat={_id}\n              data-has-notifs={chatNotifCount}\n              className=\"chatListLastMessage text-start\"\n            >\n              <span\n                data-chat={_id}\n                data-has-notifs={chatNotifCount}\n                className=\"text-warning\"\n              >\n                <>\n                  {lastMessage === null ||\n                  (isGroupChat && !lastMessage) ||\n                  (!isGroupChat &&\n                    lastMessage?.sender?._id !== loggedInUser?._id) ? (\n                    \"\"\n                  ) : lastMessage?.sender?._id === loggedInUser?._id ? (\n                    <>\n                      {isGroupChat ? (\n                        <>You: </>\n                      ) : (\n                        <DoneAll\n                          data-chat={_id}\n                          data-has-notifs={chatNotifCount}\n                          className=\"me-1 fs-5\"\n                          style={{ color: \"lightblue\" }}\n                        />\n                      )}\n                    </>\n                  ) : (\n                    truncateString(\n                      lastMessage?.sender?.name?.split(\" \")[0],\n                      12,\n                      8\n                    ) + \": \"\n                  )}\n                </>\n              </span>\n              {lastMsgFileUrl ? (\n                <span data-chat={_id} data-has-notifs={chatNotifCount}>\n                  {lastMsgFileType === \"image\" ? (\n                    <span\n                      data-chat={_id}\n                      data-has-notifs={chatNotifCount}\n                      title={lastMsgData}\n                    >\n                      <Image\n                        data-chat={_id}\n                        data-has-notifs={chatNotifCount}\n                        className=\"fileIcon\"\n                      />{\" \"}\n                      {truncateString(lastMsgContent, 25, 22) || \"Photo\"}\n                    </span>\n                  ) : lastMsgFileType === \"gif\" ? (\n                    <span\n                      data-chat={_id}\n                      data-has-notifs={chatNotifCount}\n                      title={lastMsgData}\n                    >\n                      <GifBox\n                        data-chat={_id}\n                        data-has-notifs={chatNotifCount}\n                        className=\"fileIcon\"\n                      />{\" \"}\n                      {truncateString(lastMsgContent, 25, 22) || \"Gif\"}\n                    </span>\n                  ) : lastMsgFileType === \"video\" ? (\n                    <span\n                      data-chat={_id}\n                      data-has-notifs={chatNotifCount}\n                      title={lastMsgData}\n                    >\n                      <VideoFile\n                        data-chat={_id}\n                        data-has-notifs={chatNotifCount}\n                        className=\"fileIcon\"\n                      />{\" \"}\n                      {truncateString(lastMsgContent, 25, 22) || \"Video\"}\n                    </span>\n                  ) : lastMsgFileType === \"audio\" ? (\n                    <span\n                      data-chat={_id}\n                      data-has-notifs={chatNotifCount}\n                      title={lastMsgData}\n                    >\n                      <AudioFile\n                        data-chat={_id}\n                        data-has-notifs={chatNotifCount}\n                        className=\"fileIcon\"\n                      />{\" \"}\n                      {truncateString(lastMsgContent, 25, 22) || \"Audio\"}\n                    </span>\n                  ) : lastMsgFileType === \"pdf\" ? (\n                    <span\n                      data-chat={_id}\n                      data-has-notifs={chatNotifCount}\n                      title={lastMsgData}\n                    >\n                      <PictureAsPdf\n                        data-chat={_id}\n                        data-has-notifs={chatNotifCount}\n                        className=\"fileIcon\"\n                      />{\" \"}\n                      {truncateString(lastMsgData, 22, 19) || \"Pdf\"}\n                    </span>\n                  ) : (\n                    <span\n                      data-chat={_id}\n                      data-has-notifs={chatNotifCount}\n                      title={lastMsgData}\n                    >\n                      <Description\n                        data-chat={_id}\n                        data-has-notifs={chatNotifCount}\n                        className=\"fileIcon\"\n                      />{\" \"}\n                      {truncateString(lastMsgData, 22, 19) || \"File\"}\n                    </span>\n                  )}\n                </span>\n              ) : (\n                <span\n                  data-chat={_id}\n                  data-has-notifs={chatNotifCount}\n                  title={lastMsgContent}\n                >\n                  {lastMessage === null\n                    ? \" Last Message was deleted\"\n                    : isGroupChat && !lastMessage\n                    ? `New Discussion Created`\n                    : truncateString(lastMsgContent, 35, 32)}\n                </span>\n              )}\n            </p>\n          )\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChatListItem;\n","const FILE_STYLES = { width: \"90vw\", height: \"82vh\", borderRadius: 10 };\nconst PLACEHOLDER_IMG = process.env.REACT_APP_PLACEHOLDER_IMG_URL;\n\nconst FullSizeImage = ({ event, audioSrc, videoSrc }) => {\n  return (\n    <div className=\"d-flex justify-content-center align-items-center h-100\">\n      {audioSrc ? (\n        <audio\n          src={audioSrc}\n          style={{ width: \"clamp(300px, 70%, 600px)\" }}\n          autoPlay\n          controls\n        >\n          Your browser does not support audio tag.\n        </audio>\n      ) : videoSrc ? (\n        <video src={videoSrc} style={FILE_STYLES} autoPlay controls>\n          Your browser does not support video tag.\n        </video>\n      ) : (\n        <img\n          src={event.target?.src || PLACEHOLDER_IMG}\n          alt={event.target?.alt || \"fullSizeImg\"}\n          className=\"img-fluid d-inline-block mx-auto\"\n          style={{ ...FILE_STYLES, objectFit: \"contain\" }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default FullSizeImage;\n","import { GroupAdd, Search } from \"@mui/icons-material\";\r\n\r\nconst GettingStarted = (props) => {\r\n  const iconWrapperStyles = \"text-light border d-inline-block rounded-pill\";\r\n  const labelTab = ['Team', 'Group', 'Discussion']\r\n  return (\r\n    <div\r\n      className=\"w-75 mt-4 mx-auto\"\r\n      style={{ color: \"lightblue\", fontSize: 18 }}\r\n    >\r\n      <p>\r\n        Click on{\" \"}\r\n        <span className={`${iconWrapperStyles} px-2`}>\r\n          <Search />\r\n        </span>{\" \"}\r\n        button at the top left, to search members by name or email, and then click\r\n        on a member to start a one-to-one chat.\r\n      </p>\r\n      <p>\r\n        You can also click on{\" \"}\r\n        <span\r\n          className={`${iconWrapperStyles}`}\r\n          style={{ padding: \"0px 10px 3px 13px\" }}\r\n        >\r\n          <GroupAdd />\r\n        </span>{\" \"}\r\n        button to search members and create a {labelTab[props.labelIndex]} chat.\r\n      </p>\r\n      <p style={{ color: \"#F2AFEC\" }}>\r\n        If you're not sure what to search, enter{\" \"}\r\n        <span className={`${iconWrapperStyles} bg-secondary border-0 px-2`}>\r\n          .\r\n        </span>{\" \"}\r\n        in search box to list all users.\r\n      </p>\r\n      <p>\r\n        After creating a {labelTab[props.labelIndex]}, click the {labelTab[props.labelIndex]} avatar at top-left of messages\r\n        view, for receiver/{labelTab[props.labelIndex]} info.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GettingStarted;\r\n","import { GroupAdd } from \"@mui/icons-material\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport * as React from 'react';\r\nimport {\r\n  debounce,\r\n  getAxiosConfig,\r\n  getOneToOneChatReceiver,\r\n  truncateString,\r\n} from \"../utils/appUtils\";\r\nimport axios from \"../utils/axios\";\r\nimport AddMembersToGroup from \"./dialogs/AddMembersToGroup\";\r\nimport ChatListItem from \"./utils/ChatListItem\";\r\nimport getCustomTooltip from \"./utils/CustomTooltip\";\r\nimport FullSizeImage from \"./utils/FullSizeImage\";\r\nimport LoadingList from \"./utils/LoadingList\";\r\nimport SearchInput from \"./utils/SearchInput\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectAppState,\r\n  setDeleteNotifsOfChat,\r\n  setFetchMsgs,\r\n  setGroupInfo,\r\n  setSelectedChat,\r\n} from \"../store/slices/AppSlice\";\r\nimport {\r\n  displayDialog,\r\n  setShowDialogActions,\r\n} from \"../store/slices/CustomDialogSlice\";\r\nimport { displayToast } from \"../store/slices/ToastSlice\";\r\nimport GettingStarted from \"./GettingStarted\";\r\n\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst DEFAULT_GROUP_DP = process.env.REACT_APP_DEFAULT_GROUP_DP;\r\n\r\nconst arrowStyles = { color: \"#666\" };\r\nconst tooltipStyles = {\r\n  maxWidth: 250,\r\n  color: \"#eee\",\r\n  fontFamily: \"Trebuchet MS\",\r\n  fontSize: 16,\r\n  padding: \"5px 12px\",\r\n  backgroundColor: \"#666\",\r\n};\r\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst ChatListView = ({\r\n  chats,\r\n  setChats,\r\n  loadingMsgs,\r\n  setDialogBody,\r\n  typingChatUsers,\r\n}) => {\r\n\r\n  const theme = useTheme();\r\n  const [valueTab, setValueTab] = useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValueTab(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValueTab(index);\r\n  };\r\n\r\n  const { loggedInUser, selectedChat, refresh } = useSelector(selectAppState);\r\n  const notifs = [...loggedInUser?.notifications];\r\n  const dispatch = useDispatch();\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [filteredChats, setFilteredChats] = useState(chats);\r\n  const searchChatInput = useRef();\r\n\r\n  const openCreateGroupChatDialog = () => {\r\n    dispatch(\r\n      setGroupInfo({\r\n        chatDisplayPic: null,\r\n        chatDisplayPicUrl: DEFAULT_GROUP_DP,\r\n        chatName: \"\",\r\n        users: [],\r\n      })\r\n    );\r\n    dispatch(setShowDialogActions(true));\r\n    setDialogBody(<AddMembersToGroup forCreateGroup={true} />);\r\n    dispatch(\r\n      displayDialog({\r\n        title: \"Add Team Members\",\r\n        nolabel: \"Cancel\",\r\n        yeslabel: \"Next\",\r\n        action: null,\r\n      })\r\n    );\r\n  };\r\n\r\n  const displayFullSizeImage = (e) => {\r\n    dispatch(setShowDialogActions(false));\r\n    setDialogBody(<FullSizeImage event={e} />);\r\n    dispatch(\r\n      displayDialog({\r\n        isFullScreen: true,\r\n        title: e.target?.alt || \"Display Pic\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const fetchChats = async () => {\r\n    const config = getAxiosConfig({ loggedInUser });\r\n    try {\r\n      const { data } = await axios.get(`/api/chat`, config);\r\n\r\n      const mappedChats = data\r\n        .map((chat) => {\r\n          const { isGroupChat, users } = chat;\r\n\r\n          if (!isGroupChat) {\r\n            const receiver = getOneToOneChatReceiver(loggedInUser, users);\r\n            chat[\"chatName\"] = receiver?.name;\r\n            chat[\"receiverEmail\"] = receiver?.email;\r\n            chat[\"chatDisplayPic\"] = receiver?.profilePic;\r\n          }\r\n          return chat;\r\n        })\r\n        .filter((chat) => chat.lastMessage !== undefined || chat.isGroupChat);\r\n\r\n      setChats(mappedChats);\r\n      setFilteredChats(mappedChats);\r\n      if (loading) setLoading(false);\r\n    } catch (error) {\r\n      dispatch(\r\n        displayToast({\r\n          title: \"Couldn't Fetch Discussions\",\r\n          message: error.response?.data?.message || error.message,\r\n          type: \"error\",\r\n          duration: 5000,\r\n          position: \"bottom-center\",\r\n        })\r\n      );\r\n      if (loading) setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Debouncing filterChats method to limit the no. of fn calls\r\n  const searchChats = debounce((e) => {\r\n    const chatNameInput = e.target.value?.toLowerCase().trim();\r\n    if (!chatNameInput) return setFilteredChats(chats);\r\n    setFilteredChats(\r\n      chats.filter((chat) =>\r\n        chat?.chatName?.toLowerCase().includes(chatNameInput)\r\n      )\r\n    );\r\n  }, 600);\r\n\r\n  useEffect(() => {\r\n    fetchChats();\r\n  }, [refresh]);\r\n\r\n\r\n  return (\r\n    <div\r\n      className={`chatpageDiv chatpageView chatListView text-light ${selectedChat ? \"d-none d-md-flex\" : \"d-flex\"\r\n        } flex-column user-select-none mx-1 p-2 ${loadingMsgs ? \"pe-none\" : \"pe-auto\"\r\n        }`}\r\n    >\r\n      <AppBar position=\"static\">\r\n        <Tabs\r\n          value={valueTab}\r\n          onChange={handleChange}\r\n          indicatorColor=\"secondary\"\r\n          textColor=\"inherit\"\r\n          variant=\"fullWidth\"\r\n          aria-label=\"full width tabs example\"\r\n        >\r\n          <Tab label=\"Item One\" {...a11yProps(0)} />\r\n          <Tab label=\"Item Two\" {...a11yProps(1)} />\r\n          <Tab label=\"Item Three\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <SwipeableViews\r\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n        index={valueTab}\r\n        onChangeIndex={handleChangeIndex}\r\n      >\r\n        <TabPanel value={valueTab} index={0} dir={theme.direction}>\r\n          <section className=\"position-relative\">\r\n            <p className=\"chatListHeader fw-bold fs-4 rounded-pill bg-info bg-opacity-10 py-2\">\r\n              TEAMS\r\n              {/* Create Group Chat */}\r\n              {loggedInUser._id === '633078842cabe732fe973b55' ?\r\n\r\n                <CustomTooltip\r\n                  title=\"Create New Discussion\"\r\n                  placement=\"bottom-end\"\r\n                  arrow\r\n                >\r\n                  <button\r\n                    className={`btnCreateGroup pointer btn btn-outline-secondary text-light px-3`}\r\n                    onClick={openCreateGroupChatDialog}\r\n                  >\r\n                    <GroupAdd />\r\n                  </button>\r\n                </CustomTooltip>\r\n                :\r\n                <p></p>\r\n              }\r\n            </p>\r\n          </section>\r\n          {/* Search Bar */}\r\n          {chats?.length > 0 && (\r\n            <section className=\"searchChat\">\r\n              <SearchInput\r\n                ref={searchChatInput}\r\n                searchHandler={searchChats}\r\n                autoFocus={false}\r\n                placeholder=\"Search Discussion\"\r\n                clearInput={() => setFilteredChats(chats)}\r\n              />\r\n            </section>\r\n          )}\r\n          {/* Chat list */}\r\n          <section className=\"chatList m-1 p-1 overflow-auto position-relative\">\r\n            {loading ? (\r\n              <LoadingList listOf=\"Chat\" dpRadius={\"49px\"} count={8} />\r\n            ) : filteredChats?.length > 0 ? (\r\n              <div\r\n                // 'Event delegation' (add only one event listener for\r\n                // parent element instead of adding for each child element)\r\n                onClick={(e) => {\r\n                  const { dataset } = e.target;\r\n                  const parentDataset = e.target.parentNode.dataset;\r\n                  const clickedChatId = dataset.chat || parentDataset.chat;\r\n                  const hasNotifs = dataset.hasNotifs || parentDataset.hasNotifs;\r\n                  if (!clickedChatId) return;\r\n\r\n                  if (e.target.className?.toString().includes(\"MuiAvatar-img\")) {\r\n                    return displayFullSizeImage(e);\r\n                  }\r\n                  const clickedChat = filteredChats.find(\r\n                    (chat) => chat._id === clickedChatId\r\n                  );\r\n                  if (clickedChat._id === selectedChat?._id) return;\r\n                  dispatch(setSelectedChat(clickedChat));\r\n                  dispatch(setFetchMsgs(true)); // To fetch selected chat msgs\r\n                  if (clickedChat?.isGroupChat) dispatch(setGroupInfo(clickedChat));\r\n\r\n                  // Delete notifications if notif badge is present\r\n                  if (hasNotifs) dispatch(setDeleteNotifsOfChat(clickedChatId));\r\n                }}\r\n              >\r\n                {filteredChats.map((chat) => {\r\n                  let chatNotifCount = 0;\r\n                  notifs?.forEach((notif) => {\r\n                    if (notif.chat._id === chat._id) ++chatNotifCount;\r\n                  });\r\n                  return (\r\n                    <ChatListItem\r\n                      key={chat._id}\r\n                      chat={chat}\r\n                      chatNotifCount={chatNotifCount || \"\"}\r\n                      typingChatUser={typingChatUsers?.find(\r\n                        (u) => u?.toString()?.split(\"---\")[0] === chat._id\r\n                      )}\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <span className=\"d-inline-block w-100 text-light fs-3 mt-4 mx-auto\">\r\n                  {chats?.length === 0\r\n                    ? `Hi ${truncateString(loggedInUser?.name?.split(\" \")[0], 12, 9) ||\r\n                    \"There\"\r\n                    } 😎`\r\n                    : \"No Team Found\"}\r\n                </span>\r\n                {chats?.length === 0 && <GettingStarted />}\r\n              </>\r\n            )}\r\n          </section>\r\n        </TabPanel>\r\n        <TabPanel value={valueTab} index={1} dir={theme.direction}>\r\n        <section className=\"position-relative\">\r\n            <p className=\"chatListHeader fw-bold fs-4 rounded-pill bg-info bg-opacity-10 py-2\">\r\n              GROUPS\r\n              {/* Create Group Chat */}\r\n              {loggedInUser._id === '633078842cabe732fe973b55' ?\r\n\r\n                <CustomTooltip\r\n                  title=\"Create New Discussion\"\r\n                  placement=\"bottom-end\"\r\n                  arrow\r\n                >\r\n                  <button\r\n                    className={`btnCreateGroup pointer btn btn-outline-secondary text-light px-3`}\r\n                    onClick={openCreateGroupChatDialog}\r\n                  >\r\n                    <GroupAdd />\r\n                  </button>\r\n                </CustomTooltip>\r\n                :\r\n                <p></p>\r\n              }\r\n            </p>\r\n          </section>\r\n          {/* Search Bar */}\r\n          {chats?.length > 0 && (\r\n            <section className=\"searchChat\">\r\n              <SearchInput\r\n                ref={searchChatInput}\r\n                searchHandler={searchChats}\r\n                autoFocus={false}\r\n                placeholder=\"Search Discussion\"\r\n                clearInput={() => setFilteredChats(chats)}\r\n              />\r\n            </section>\r\n          )}\r\n          {/* Chat list */}\r\n          <section className=\"chatList m-1 p-1 overflow-auto position-relative\">\r\n            {loading ? (\r\n              <LoadingList listOf=\"Chat\" dpRadius={\"49px\"} count={8} />\r\n            ) : filteredChats?.length > 0 ? (\r\n              <div\r\n                // 'Event delegation' (add only one event listener for\r\n                // parent element instead of adding for each child element)\r\n                onClick={(e) => {\r\n                  const { dataset } = e.target;\r\n                  const parentDataset = e.target.parentNode.dataset;\r\n                  const clickedChatId = dataset.chat || parentDataset.chat;\r\n                  const hasNotifs = dataset.hasNotifs || parentDataset.hasNotifs;\r\n                  if (!clickedChatId) return;\r\n\r\n                  if (e.target.className?.toString().includes(\"MuiAvatar-img\")) {\r\n                    return displayFullSizeImage(e);\r\n                  }\r\n                  const clickedChat = filteredChats.find(\r\n                    (chat) => chat._id === clickedChatId\r\n                  );\r\n                  if (clickedChat._id === selectedChat?._id) return;\r\n                  dispatch(setSelectedChat(clickedChat));\r\n                  dispatch(setFetchMsgs(true)); // To fetch selected chat msgs\r\n                  if (clickedChat?.isGroupChat) dispatch(setGroupInfo(clickedChat));\r\n\r\n                  // Delete notifications if notif badge is present\r\n                  if (hasNotifs) dispatch(setDeleteNotifsOfChat(clickedChatId));\r\n                }}\r\n              >\r\n                {filteredChats.map((chat) => {\r\n                  let chatNotifCount = 0;\r\n                  notifs?.forEach((notif) => {\r\n                    if (notif.chat._id === chat._id) ++chatNotifCount;\r\n                  });\r\n                  return (\r\n                    <ChatListItem\r\n                      key={chat._id}\r\n                      chat={chat}\r\n                      chatNotifCount={chatNotifCount || \"\"}\r\n                      typingChatUser={typingChatUsers?.find(\r\n                        (u) => u?.toString()?.split(\"---\")[0] === chat._id\r\n                      )}\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <span className=\"d-inline-block w-100 text-light fs-3 mt-4 mx-auto\">\r\n                  {chats?.length === 0\r\n                    ? `Hi ${truncateString(loggedInUser?.name?.split(\" \")[0], 12, 9) ||\r\n                    \"There\"\r\n                    } 😎`\r\n                    : \"No Group Found\"}\r\n                </span>\r\n                {chats?.length === 0 && <GettingStarted />}\r\n              </>\r\n            )}\r\n          </section>\r\n        </TabPanel>\r\n        <TabPanel value={valueTab} index={2} dir={theme.direction}>\r\n        <section className=\"position-relative\">\r\n            <p className=\"chatListHeader fw-bold fs-4 rounded-pill bg-info bg-opacity-10 py-2\">\r\n              DISCUSSIONS\r\n              {/* Create Group Chat */}\r\n              {loggedInUser._id === '633078842cabe732fe973b55' ?\r\n\r\n                <CustomTooltip\r\n                  title=\"Create New Discussion\"\r\n                  placement=\"bottom-end\"\r\n                  arrow\r\n                >\r\n                  <button\r\n                    className={`btnCreateGroup pointer btn btn-outline-secondary text-light px-3`}\r\n                    onClick={openCreateGroupChatDialog}\r\n                  >\r\n                    <GroupAdd />\r\n                  </button>\r\n                </CustomTooltip>\r\n                :\r\n                <p></p>\r\n              }\r\n            </p>\r\n          </section>\r\n          {/* Search Bar */}\r\n          {chats?.length > 0 && (\r\n            <section className=\"searchChat\">\r\n              <SearchInput\r\n                ref={searchChatInput}\r\n                searchHandler={searchChats}\r\n                autoFocus={false}\r\n                placeholder=\"Search Discussion\"\r\n                clearInput={() => setFilteredChats(chats)}\r\n              />\r\n            </section>\r\n          )}\r\n          {/* Chat list */}\r\n          <section className=\"chatList m-1 p-1 overflow-auto position-relative\">\r\n            {loading ? (\r\n              <LoadingList listOf=\"Chat\" dpRadius={\"49px\"} count={8} />\r\n            ) : filteredChats?.length > 0 ? (\r\n              <div\r\n                // 'Event delegation' (add only one event listener for\r\n                // parent element instead of adding for each child element)\r\n                onClick={(e) => {\r\n                  const { dataset } = e.target;\r\n                  const parentDataset = e.target.parentNode.dataset;\r\n                  const clickedChatId = dataset.chat || parentDataset.chat;\r\n                  const hasNotifs = dataset.hasNotifs || parentDataset.hasNotifs;\r\n                  if (!clickedChatId) return;\r\n\r\n                  if (e.target.className?.toString().includes(\"MuiAvatar-img\")) {\r\n                    return displayFullSizeImage(e);\r\n                  }\r\n                  const clickedChat = filteredChats.find(\r\n                    (chat) => chat._id === clickedChatId\r\n                  );\r\n                  if (clickedChat._id === selectedChat?._id) return;\r\n                  dispatch(setSelectedChat(clickedChat));\r\n                  dispatch(setFetchMsgs(true)); // To fetch selected chat msgs\r\n                  if (clickedChat?.isGroupChat) dispatch(setGroupInfo(clickedChat));\r\n\r\n                  // Delete notifications if notif badge is present\r\n                  if (hasNotifs) dispatch(setDeleteNotifsOfChat(clickedChatId));\r\n                }}\r\n              >\r\n                {filteredChats.map((chat) => {\r\n                  let chatNotifCount = 0;\r\n                  notifs?.forEach((notif) => {\r\n                    if (notif.chat._id === chat._id) ++chatNotifCount;\r\n                  });\r\n                  return (\r\n                    <ChatListItem\r\n                      key={chat._id}\r\n                      chat={chat}\r\n                      chatNotifCount={chatNotifCount || \"\"}\r\n                      typingChatUser={typingChatUsers?.find(\r\n                        (u) => u?.toString()?.split(\"---\")[0] === chat._id\r\n                      )}\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <span className=\"d-inline-block w-100 text-light fs-3 mt-4 mx-auto\">\r\n                  {chats?.length === 0\r\n                    ? `Hi ${truncateString(loggedInUser?.name?.split(\" \")[0], 12, 9) ||\r\n                    \"There\"\r\n                    } 😎`\r\n                    : \"No Discussions Found\"}\r\n                </span>\r\n                {chats?.length === 0 && <GettingStarted />}\r\n              </>\r\n            )}\r\n          </section>\r\n        </TabPanel>\r\n      </SwipeableViews>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatListView;\r\n","import { getOneToOneChatReceiver, truncateString } from \"../../utils/appUtils\";\nimport getCustomTooltip from \"../utils/CustomTooltip\";\nimport { useSelector } from \"react-redux\";\nimport { selectAppState } from \"../../store/slices/AppSlice\";\nimport { selectChildDialogState } from \"../../store/slices/ChildDialogSlice\";\nimport FullSizeImage from \"../utils/FullSizeImage\";\nimport { useState } from \"react\";\nimport ChildDialog from \"../utils/ChildDialog\";\n\nconst arrowStyles = { color: \"#111\" };\nconst tooltipStyles = {\n  maxWidth: 250,\n  color: \"#eee\",\n  fontFamily: \"Trebuchet MS\",\n  fontSize: 17,\n  padding: \"5px 10px\",\n  border: \"1px solid #333\",\n  backgroundColor: \"#111\",\n};\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\n\nconst ViewProfileBody = ({ memberProfilePic, memberName, memberEmail }) => {\n  const { loggedInUser, selectedChat } = useSelector(selectAppState);\n  let name, email, profilePic;\n  const { childDialogMethods } = useSelector(selectChildDialogState);\n  const { setChildDialogBody, displayChildDialog } = childDialogMethods;\n\n  const [showDialogActions, setShowDialogActions] = useState(true);\n  const [showDialogClose, setShowDialogClose] = useState(false);\n\n  if (memberProfilePic && memberName && memberEmail) {\n    name = memberName;\n    email = memberEmail;\n    profilePic = memberProfilePic;\n  } else {\n    const receiver = getOneToOneChatReceiver(loggedInUser, selectedChat?.users);\n    name = receiver?.name;\n    email = receiver?.email;\n    profilePic = receiver?.profilePic;\n  }\n\n  const displayFullSizeImage = (e) => {\n    setShowDialogActions(false);\n    setShowDialogClose(true);\n    setChildDialogBody(<FullSizeImage event={e} />);\n    displayChildDialog({\n      isFullScreen: true,\n      title: e.target?.alt || \"Profile Pic\",\n    });\n  };\n\n  return (\n    <>\n      {/* View Profile Pic */}\n      <section className=\"dialogField d-flex position-relative mb-4\">\n        <CustomTooltip title=\"View Profile Pic\" placement=\"top\" arrow>\n          <img\n            className=\"img-fluid pointer d-flex mx-auto border border-2 border-primary rounded-circle mt-1\"\n            id=\"view_profilePic\"\n            onClick={displayFullSizeImage}\n            src={profilePic}\n            alt={name}\n          />\n        </CustomTooltip>\n      </section>\n      {/* View Name */}\n      <section className={`dialogField text-center mb-2`}>\n        <div className=\"input-group\" style={{ marginTop: \"-15px\" }}>\n          <CustomTooltip\n            title={name?.length > 20 ? name : \"\"}\n            placement=\"top\"\n            arrow\n          >\n            <div\n              className=\"w-100 h1 fw-bold mx-4 text-info\"\n              style={{ fontSize: \"32px\" }}\n            >\n              {truncateString(name, 25, 21)}\n            </div>\n          </CustomTooltip>\n        </div>\n      </section>\n      {/* View Email */}\n      <section\n        className={`dialogField text-center mb-2`}\n        style={{ marginTop: \"-10px\" }}\n      >\n        <CustomTooltip\n          title={email?.length > 20 ? email : \"\"}\n          placement=\"bottom\"\n          arrow\n        >\n          <span className=\"fs-4\" style={{ color: \"lightblue\" }}>\n            {truncateString(email, 25, 21)}\n          </span>\n        </CustomTooltip>\n      </section>\n\n      {/* Child dialog */}\n      <ChildDialog\n        showChildDialogActions={showDialogActions}\n        showChildDialogClose={showDialogClose}\n      />\n    </>\n  );\n};\n\nexport default ViewProfileBody;\n","import { KeyboardArrowDown } from \"@mui/icons-material\";\nimport { Avatar } from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\nimport { selectAppState } from \"../../store/slices/AppSlice\";\nimport { truncateString } from \"../../utils/appUtils\";\nimport getCustomTooltip from \"../utils/CustomTooltip\";\n\nconst arrowStyles = { color: \"#E6480C\" };\nconst tooltipStyles = {\n  maxWidth: 230,\n  color: \"#eee\",\n  fontFamily: \"Trebuchet MS\",\n  fontSize: 17,\n  borderRadius: 10,\n  backgroundColor: \"#E6480C\",\n};\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\n\nconst GroupMemberItem = ({ user, truncateValues }) => {\n  const { loggedInUser } = useSelector(selectAppState);\n  const { _id, name, email, profilePic } = user;\n  const [max, index] = truncateValues;\n  const isLoggedInUser = _id === loggedInUser?._id;\n\n  return (\n    <div\n      data-user={_id}\n      className={`groupMemberItem position-relative user-select-none d-flex text-light justify-content-start align-items-center px-3 ${\n        !isLoggedInUser && \"pointer\"\n      }`}\n    >\n      {user?.isGroupAdmin && (\n        <span\n          className={`adminBadge position-absolute fw-light badge rounded-3 bg-success`}\n          style={{ cursor: \"auto\" }}\n        >\n          Admin\n        </span>\n      )}\n      {!isLoggedInUser && (\n        <span\n          data-user={_id}\n          className=\"memberSettingsIcon text-light position-absolute rounded-circle\"\n        >\n          <KeyboardArrowDown data-user={_id} />\n        </span>\n      )}\n      <CustomTooltip\n        data-user={_id}\n        title={`${isLoggedInUser ? \"\" : `${name} (${email})`}`}\n        placement=\"top-start\"\n        arrow\n      >\n        <Avatar\n          src={profilePic}\n          alt={_id}\n          data-user={_id}\n          className={`listItemAvatar groupMemberAvatar`}\n        />\n      </CustomTooltip>\n      <div\n        data-user={_id}\n        className=\"groupMemberData d-flex flex-column align-items-start px-2\"\n      >\n        <p data-user={_id} className=\"groupMemberName fw-bold text-info\">\n          {isLoggedInUser ? \"You\" : truncateString(name, max, index)}\n        </p>\n        <p data-user={_id} className=\"groupMemberEmail\">\n          {truncateString(email, max, index)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default GroupMemberItem;\n","import {\n  AdminPanelSettings,\n  GroupRemove,\n  InfoOutlined,\n  Message,\n} from \"@mui/icons-material\";\nimport { ListItemIcon, MenuItem } from \"@mui/material\";\nimport Menu, { menuIconProps, menuItemProps } from \"../utils/Menu\";\nimport axios from \"../../utils/axios\";\nimport MenuItemText from \"../utils/MenuItemText\";\nimport { getAxiosConfig, truncateString } from \"../../utils/appUtils\";\nimport ViewProfileBody from \"../dialogs/ViewProfileBody\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectAppState,\n  setDeleteNotifsOfChat,\n  setFetchMsgs,\n  setGroupInfo,\n  setSelectedChat,\n  toggleRefresh,\n} from \"../../store/slices/AppSlice\";\nimport { displayToast } from \"../../store/slices/ToastSlice\";\nimport { setLoading } from \"../../store/slices/FormfieldSlice\";\nimport { hideDialog } from \"../../store/slices/CustomDialogSlice\";\n\nconst MemberOptionsMenu = ({\n  anchor,\n  setAnchor,\n  clickedMember,\n  setShowDialogActions,\n  setShowDialogClose,\n  childDialogMethods,\n}) => {\n  const { loggedInUser, refresh, groupInfo, clientSocket, isSocketConnected } =\n    useSelector(selectAppState);\n  const dispatch = useDispatch();\n\n  const { setChildDialogBody, displayChildDialog } = childDialogMethods;\n  const isLoggedInUserGroupAdmin = groupInfo?.groupAdmins?.some(\n    (admin) => admin?._id === loggedInUser?._id\n  );\n  const clickedMemberName = truncateString(\n    clickedMember?.name?.split(\" \")[0],\n    12,\n    9\n  );\n  const styledMemberName = (\n    <span style={{ color: \"violet\", fontSize: \"22px\" }}>\n      {clickedMemberName}\n    </span>\n  );\n  const updateView = (data) => {\n    dispatch(toggleRefresh());\n    dispatch(setSelectedChat(data));\n  };\n\n  const displayError = (\n    error = \"Oops! Something went wrong\",\n    title = \"Operation Failed\"\n  ) => {\n    dispatch(\n      displayToast({\n        title,\n        message: error.response?.data?.message || error.message,\n        type: \"error\",\n        duration: 5000,\n        position: \"bottom-center\",\n      })\n    );\n  };\n\n  // Create/Retreive chat when 'Message Member' is clicked\n  const openChat = async () => {\n    dispatch(hideDialog()); // Close all dialogs by closing parent dialog\n    dispatch(setLoading(true));\n    const config = getAxiosConfig({ loggedInUser });\n    try {\n      const { data } = await axios.post(\n        `/api/chat`,\n        { userId: clickedMember?._id },\n        config\n      );\n\n      dispatch(setLoading(false));\n      updateView(data);\n      dispatch(setFetchMsgs(true));\n      dispatch(setDeleteNotifsOfChat(data._id));\n    } catch (error) {\n      displayError(error, \"Couldn't Create/Retrieve Chat\");\n      dispatch(setLoading(false));\n    }\n  };\n\n  const openViewProfileDialog = () => {\n    setShowDialogActions(false);\n    setShowDialogClose(true);\n    setChildDialogBody(\n      <ViewProfileBody\n        memberProfilePic={clickedMember?.profilePic}\n        memberName={clickedMember?.name}\n        memberEmail={clickedMember?.email}\n      />\n    );\n    displayChildDialog({ title: \"View Profile\" });\n  };\n\n  const makeGroupAdmin = async () => {\n    dispatch(setLoading(true));\n    const config = getAxiosConfig({ loggedInUser });\n    try {\n      const { data } = await axios.post(\n        `/api/chat/group/make-admin`,\n        { userId: clickedMember?._id, chatId: groupInfo?._id },\n        config\n      );\n      if (isSocketConnected) {\n        clientSocket.emit(\"grp updated\", {\n          updater: loggedInUser,\n          updatedGroup: data,\n          createdAdmin: clickedMember,\n        });\n      }\n      dispatch(\n        displayToast({\n          message: `${clickedMemberName} is now a Discussion Admin`,\n          type: \"success\",\n          duration: 4000,\n          position: \"bottom-center\",\n        })\n      );\n      dispatch(setGroupInfo(data));\n      updateView(data);\n      dispatch(setLoading(false));\n    } catch (error) {\n      displayError(error, \"Make Discussion Admin Failed\");\n      dispatch(setLoading(false));\n    }\n  };\n\n  const dismissAsAdmin = async () => {\n    dispatch(setLoading(true));\n    const config = getAxiosConfig({ loggedInUser });\n    try {\n      const { data } = await axios.put(\n        `/api/chat/group/dismiss-admin`,\n        { userId: clickedMember?._id, chatId: groupInfo?._id },\n        config\n      );\n      if (isSocketConnected) {\n        clientSocket.emit(\"grp updated\", {\n          updater: loggedInUser,\n          updatedGroup: data,\n          dismissedAdmin: clickedMember,\n        });\n      }\n      dispatch(\n        displayToast({\n          message: `${clickedMemberName} is no longer a Discussion Admin`,\n          type: \"info\",\n          duration: 4000,\n          position: \"bottom-center\",\n        })\n      );\n      dispatch(setLoading(false));\n      dispatch(setGroupInfo(data));\n      updateView(data);\n      return \"membersUpdated\";\n    } catch (error) {\n      displayError(error, \"Dismiss As Discussion Admin Failed\");\n      dispatch(setLoading(false));\n      return \"membersUpdated\";\n    }\n  };\n\n  const removeFromGroup = async () => {\n    dispatch(setLoading(true));\n    const config = getAxiosConfig({ loggedInUser });\n    try {\n      const { data } = await axios.put(\n        `/api/chat/group/remove`,\n        {\n          userToBeRemoved: clickedMember?._id,\n          isGroupAdmin: clickedMember?.isGroupAdmin,\n          chatId: groupInfo?._id,\n        },\n        config\n      );\n\n      data[\"removedUser\"] = clickedMember;\n      if (isSocketConnected) {\n        clientSocket.emit(\"grp updated\", {\n          updater: loggedInUser,\n          updatedGroup: data,\n        });\n      }\n      dispatch(\n        displayToast({\n          message: `${clickedMemberName} removed from Discussion`,\n          type: \"info\",\n          duration: 4000,\n          position: \"bottom-center\",\n        })\n      );\n      dispatch(setLoading(false));\n      dispatch(setGroupInfo(data));\n      updateView(data);\n      return \"membersUpdated\";\n    } catch (error) {\n      displayError(error, \"Remove From Discussion Failed\");\n      dispatch(setLoading(false));\n      return \"membersUpdated\";\n    }\n  };\n\n  // Confirmation dialogs\n  const openDismissAsAdminConfirmDialog = () => {\n    setShowDialogActions(true);\n    setShowDialogClose(false);\n    setChildDialogBody(\n      <>Are you sure you want to dismiss {styledMemberName} as discussion admin?</>\n    );\n    displayChildDialog({\n      title: \"Dismiss As Admin\",\n      nolabel: \"NO\",\n      yeslabel: \"YES\",\n      loadingYeslabel: \"Saving...\",\n      action: dismissAsAdmin,\n    });\n  };\n\n  const openRemoveFromGroupConfirmDialog = () => {\n    setShowDialogActions(true);\n    setShowDialogClose(false);\n    setChildDialogBody(\n      <>Are you sure you want to remove {styledMemberName} from this discussion?</>\n    );\n    displayChildDialog({\n      title: \"Remove From Discussion\",\n      nolabel: \"NO\",\n      yeslabel: \"YES\",\n      loadingYeslabel: \"Saving...\",\n      action: removeFromGroup,\n    });\n  };\n\n  return (\n    <Menu\n      menuAnchor={anchor}\n      setMenuAnchor={setAnchor}\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n    >\n      {/* Message X */}\n      <MenuItem sx={menuItemProps} onClick={openChat}>\n        <ListItemIcon sx={menuIconProps}>\n          <Message />\n        </ListItemIcon>\n        <MenuItemText>{`Message ${\n          clickedMemberName || \"Member\"\n        }`}</MenuItemText>\n      </MenuItem>\n      {/* View X */}\n      <MenuItem sx={menuItemProps} onClick={openViewProfileDialog}>\n        <ListItemIcon sx={menuIconProps}>\n          <InfoOutlined />\n        </ListItemIcon>\n        <MenuItemText>{`View ${clickedMemberName || \"Member\"}`}</MenuItemText>\n      </MenuItem>\n      {/* Make Group Admin / Dismiss as Admin */}\n      {isLoggedInUserGroupAdmin && (\n        <MenuItem\n          sx={menuItemProps}\n          onClick={\n            clickedMember?.isGroupAdmin\n              ? openDismissAsAdminConfirmDialog\n              : makeGroupAdmin\n          }\n        >\n          <ListItemIcon sx={menuIconProps}>\n            <AdminPanelSettings />\n          </ListItemIcon>\n          <MenuItemText>\n            {clickedMember?.isGroupAdmin\n              ? \"Dismiss as Admin\"\n              : \"Make Discussion Admin\"}\n          </MenuItemText>\n        </MenuItem>\n      )}\n      {/* Remove X */}\n      {isLoggedInUserGroupAdmin && (\n        <MenuItem sx={menuItemProps} onClick={openRemoveFromGroupConfirmDialog}>\n          <ListItemIcon sx={menuIconProps}>\n            <GroupRemove />\n          </ListItemIcon>\n          <MenuItemText>{`Remove ${\n            clickedMemberName || \"Member\"\n          }`}</MenuItemText>\n        </MenuItem>\n      )}\n    </Menu>\n  );\n};\n\nexport default MemberOptionsMenu;\n","import { useEffect, useRef, useState } from \"react\";\nimport { debounce } from \"../../utils/appUtils\";\nimport SearchInput from \"../utils/SearchInput\";\nimport GroupMemberItem from \"../utils/GroupMemberItem\";\nimport MemberOptionsMenu from \"../menus/MemberOptionsMenu\";\nimport ChildDialog from \"../utils/ChildDialog\";\nimport { useSelector } from \"react-redux\";\nimport { selectAppState } from \"../../store/slices/AppSlice\";\nimport { selectChildDialogState } from \"../../store/slices/ChildDialogSlice\";\n\nlet filteredMembersCache = [];\n\nconst ViewGroupMembers = () => {\n  const { loggedInUser, groupInfo } = useSelector(selectAppState);\n  const { childDialogMethods } = useSelector(selectChildDialogState);\n  const [showDialogActions, setShowDialogActions] = useState(true);\n  const [showDialogClose, setShowDialogClose] = useState(false);\n  const groupMembers = groupInfo?.users;\n  const admins = groupInfo?.groupAdmins;\n  const [clickedMember, setClickedMember] = useState(null);\n  const [memberOptionsMenuAnchor, setMemberOptionsMenuAnchor] = useState(null);\n  // LoggedInUser and Group Admins should be at the top\n  const sortMembers = () => {\n    return [\n      loggedInUser,\n      ...admins?.filter((admin) => admin?._id !== loggedInUser?._id),\n      ...groupMembers?.filter(\n        (member) =>\n          member?._id !== loggedInUser?._id &&\n          admins?.every((admin) => admin?._id !== member?._id)\n      ),\n    ].map((member) => {\n      return {\n        ...member,\n        isGroupAdmin: admins?.some((admin) => member?._id === admin?._id),\n      };\n    });\n  };\n\n  // Update the member list whenever groupInfo is updated\n  useEffect(() => {\n    if (!groupInfo) return;\n    filteredMembersCache = sortMembers();\n    setFilteredMembers(filteredMembersCache);\n  }, [groupInfo]);\n\n  const filterMemberInput = useRef(null);\n  const [filteredMembers, setFilteredMembers] = useState(filteredMembersCache);\n\n  // Debouncing filterMembers method to limit the no. of fn calls\n  const filterMembers = debounce((e) => {\n    const memberNameInput = e.target?.value?.toLowerCase().trim();\n    if (!memberNameInput) {\n      return setFilteredMembers(filteredMembersCache);\n    }\n    setFilteredMembers(\n      filteredMembersCache?.filter(\n        (user) =>\n          user?.name?.toLowerCase().includes(memberNameInput) ||\n          user?.email?.toLowerCase().includes(memberNameInput)\n      )\n    );\n  }, 600);\n\n  const openMemberOptionsMenu = (e) => setMemberOptionsMenuAnchor(e.target);\n\n  return (\n    <div\n      className=\"addGroupMembers d-flex flex-column\"\n      style={{ height: \"75vh\" }}\n    >\n      {/* Member Count */}\n      <p className=\"h3 text-center text-light\" style={{ marginTop: \"-5px\" }}>\n        {`${groupMembers?.length} Member${groupMembers?.length > 1 ? \"s\" : \"\"}`}\n      </p>\n      {/* Search Bar */}\n      <section className=\"searchChat\" style={{ marginTop: \"-15px\" }}>\n        <SearchInput\n          ref={filterMemberInput}\n          searchHandler={filterMembers}\n          autoFocus={false}\n          placeholder=\"Search Member\"\n          clearInput={() => setFilteredMembers(filteredMembersCache)}\n        />\n      </section>\n      {/* Member list */}\n      <section className=\"chatList p-1 overflow-auto position-relative\">\n        {filteredMembers?.length > 0 ? (\n          <div\n            // 'Event delegation' (add only one event listener for\n            // parent element instead of adding for each child element)\n            onClick={(e) => {\n              const userId =\n                e.target?.dataset.user ||\n                e.target.parentNode.dataset.user ||\n                e.target.alt;\n              if (userId) {\n                // Don't display member options menu for loggedInUser\n                if (loggedInUser?._id === userId) return;\n\n                setClickedMember(\n                  filteredMembers?.find((m) => m?._id === userId)\n                );\n                openMemberOptionsMenu(e);\n              }\n            }}\n          >\n            {filteredMembers.map((member) => (\n              <GroupMemberItem\n                key={member._id}\n                user={member}\n                truncateValues={[21, 18]}\n              />\n            ))}\n          </div>\n        ) : (\n          <span className=\"d-inline-block w-100 text-center text-light h5 mt-4 mx-auto\">\n            No Members Found\n          </span>\n        )}\n      </section>\n      <MemberOptionsMenu\n        anchor={memberOptionsMenuAnchor}\n        setAnchor={setMemberOptionsMenuAnchor}\n        clickedMember={clickedMember}\n        setShowDialogActions={setShowDialogActions}\n        setShowDialogClose={setShowDialogClose}\n        childDialogMethods={childDialogMethods}\n      />\n      {/* Child dialog */}\n      <ChildDialog\n        showChildDialogActions={showDialogActions}\n        showChildDialogClose={showDialogClose}\n      />\n    </div>\n  );\n};\n\nexport default ViewGroupMembers;\n","import { useRef, useState } from \"react\";\nimport {\n  Delete,\n  Edit,\n  InfoOutlined,\n  Logout,\n  PersonAdd,\n} from \"@mui/icons-material\";\nimport { CircularProgress, IconButton } from \"@mui/material\";\nimport axios from \"../../utils/axios\";\nimport {\n  getAxiosConfig,\n  isImageFile,\n  truncateString,\n  TWO_MB,\n} from \"../../utils/appUtils\";\nimport EditPicMenu from \"../menus/EditPicMenu\";\nimport EditNameBody from \"./EditNameBody\";\nimport ChildDialog from \"../utils/ChildDialog\";\nimport AddMembersToGroup from \"./AddMembersToGroup\";\nimport ViewGroupMembers from \"./ViewGroupMembers\";\nimport getCustomTooltip from \"../utils/CustomTooltip\";\nimport FullSizeImage from \"../utils/FullSizeImage\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectAppState,\n  setGroupInfo,\n  setSelectedChat,\n  toggleRefresh,\n} from \"../../store/slices/AppSlice\";\nimport {\n  selectFormfieldState,\n  setLoading,\n} from \"../../store/slices/FormfieldSlice\";\nimport { selectChildDialogState } from \"../../store/slices/ChildDialogSlice\";\nimport { displayToast } from \"../../store/slices/ToastSlice\";\nimport { hideDialog } from \"../../store/slices/CustomDialogSlice\";\n\nconst arrowStyles = { color: \"#111\" };\nconst tooltipStyles = {\n  maxWidth: 250,\n  color: \"#eee\",\n  fontFamily: \"Trebuchet MS\",\n  fontSize: 17,\n  padding: \"5px 10px\",\n  border: \"1px solid #333\",\n  backgroundColor: \"#111\",\n};\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\n\nconst GroupInfoBody = ({ messages, deleteNotifications }) => {\n  const { loggedInUser, refresh, groupInfo, clientSocket, isSocketConnected } =\n    useSelector(selectAppState);\n  const { childDialogMethods } = useSelector(selectChildDialogState);\n  const { loading, disableIfLoading } = useSelector(selectFormfieldState);\n  const dispatch = useDispatch();\n  const { setChildDialogBody, displayChildDialog, closeChildDialog } =\n    childDialogMethods;\n\n  const groupDP = groupInfo?.chatDisplayPic;\n  const groupName = groupInfo?.chatName;\n  const groupMembers = groupInfo?.users;\n  const admins = groupInfo?.groupAdmins;\n\n  const [uploading, setUploading] = useState(false);\n  const [editGroupDpMenuAnchor, setEditGroupDpMenuAnchor] = useState(null);\n  const isUserGroupAdmin = admins?.some(\n    (admin) => admin?._id === loggedInUser?._id\n  );\n  const [showDialogActions, setShowDialogActions] = useState(true);\n  const [showDialogClose, setShowDialogClose] = useState(false);\n  const imgInput = useRef(null);\n  const btnClassName = \"w-100 btn text-light fs-5\";\n\n  const displayWarning = (message = \"Warning\", duration = 3000) => {\n    dispatch(\n      displayToast({\n        message,\n        type: \"warning\",\n        duration,\n        position: \"top-center\",\n      })\n    );\n  };\n\n  const displayError = (\n    error = \"Oops! Something went wrong\",\n    title = \"Operation Failed\"\n  ) => {\n    dispatch(\n      displayToast({\n        title,\n        message: error.response?.data?.message || error.message,\n        type: \"error\",\n        duration: 5000,\n        position: \"top-center\",\n      })\n    );\n  };\n\n  const displaySuccess = (message = \"Operation Successful\") => {\n    dispatch(\n      displayToast({\n        message,\n        type: \"success\",\n        duration: 3000,\n        position: \"bottom-center\",\n      })\n    );\n  };\n\n  const updateView = (data) => {\n    dispatch(setGroupInfo(data));\n    dispatch(toggleRefresh());\n    dispatch(setSelectedChat(data)); // To update messages view\n  };\n\n  // Click a button/icon upon 'Enter' or 'Space' keydown\n  const clickOnKeydown = (e) => {\n    if (e.key === \" \" || e.key === \"Enter\") {\n      e.target.click();\n    }\n  };\n\n  // To retreive added members from `AddMembersToGroup` dialog\n  let updatedName = \"\";\n  const getUpdatedName = (updatedValue, options) => {\n    updatedName = updatedValue;\n    if (options?.submitUpdatedName) updateGroupName({ enterKeyClicked: true });\n  };\n\n  const updateGroupName = async (options) => {\n    if (!updatedName) return displayWarning(\"Please Enter Valid Discussion Name\");\n\n    dispatch(setLoading(true));\n    const config = getAxiosConfig({ loggedInUser });\n    try {\n      const { data } = await axios.put(\n        \"/api/chat/group/update-name\",\n        { groupName: updatedName, chatId: groupInfo?._id },\n        config\n      );\n\n      if (isSocketConnected) {\n        clientSocket.emit(\"grp updated\", {\n          updater: loggedInUser,\n          updatedGroup: data,\n        });\n      }\n      displaySuccess(\"Discussion Name Updated Successfully\");\n\n      dispatch(setLoading(false));\n      updateView(data);\n      if (options?.enterKeyClicked) closeChildDialog();\n      else return \"profileUpdated\";\n    } catch (error) {\n      displayError(error, \"Couldn't Update Discussion Name\");\n      dispatch(setLoading(false));\n    }\n  };\n\n  // Update Group Display Pic\n  const updateGroupDp = async (e) => {\n    const image = e.target.files[0];\n    if (!image) return;\n\n    if (!isImageFile(image.name)) {\n      return dispatch(\n        displayToast({\n          title: \"Invalid Image File\",\n          message: \"Please Select an Image File (png/jpg/jpeg/svg/webp)\",\n          type: \"warning\",\n          duration: 5000,\n          position: \"bottom-center\",\n        })\n      );\n    }\n\n    if (image.size >= TWO_MB) {\n      imgInput.current.value = \"\";\n      return displayWarning(\"Please Select an Image Smaller than 2 MB\", 4000);\n    }\n    dispatch(setLoading(true));\n    setUploading(true);\n    const config = getAxiosConfig({ loggedInUser, formData: true });\n\n    const formData = new FormData();\n    formData.append(\"displayPic\", image);\n    formData.append(\"currentDP\", groupDP);\n    formData.append(\"cloudinary_id\", groupInfo?.cloudinary_id);\n    formData.append(\"chatId\", groupInfo?._id);\n    try {\n      const { data } = await axios.put(\n        \"/api/chat/group/update-dp\",\n        formData,\n        config\n      );\n      if (isSocketConnected) {\n        clientSocket.emit(\"grp updated\", {\n          updater: loggedInUser,\n          updatedGroup: data,\n        });\n      }\n      displaySuccess(\"Discussion DP Updated Successfully\");\n      dispatch(setLoading(false));\n      setUploading(false);\n      updateView(data);\n    } catch (error) {\n      displayError(error, \"Couldn't Update Discussion DP\");\n      dispatch(setLoading(false));\n      setUploading(false);\n    }\n  };\n\n  const deleteGroupDp = async () => {\n    dispatch(setLoading(true));\n    const config = getAxiosConfig({ loggedInUser });\n    try {\n      const { data } = await axios.put(\n        `/api/chat/group/delete-dp`,\n        {\n          currentDP: groupDP,\n          cloudinary_id: groupInfo?.cloudinary_id,\n          chatId: groupInfo?._id,\n        },\n        config\n      );\n\n      if (isSocketConnected) {\n        clientSocket.emit(\"grp updated\", {\n          updater: loggedInUser,\n          updatedGroup: data,\n        });\n      }\n      displaySuccess(\"Discussion DP Deleted Successfully\");\n      dispatch(setLoading(false));\n      updateView(data);\n      return \"profileUpdated\";\n    } catch (error) {\n      displayError(error, \"Couldn't Delete Discussion DP\");\n      dispatch(setLoading(false));\n    }\n  };\n\n  const exitGroup = async () => {\n    if (groupMembers?.length === 1) return deleteGroup();\n\n    dispatch(setLoading(true));\n    const config = getAxiosConfig({ loggedInUser });\n    try {\n      const { data } = await axios.put(\n        `/api/chat/group/remove`,\n        {\n          userToBeRemoved: loggedInUser?._id,\n          isGroupAdmin: isUserGroupAdmin,\n          chatId: groupInfo?._id,\n        },\n        config\n      );\n\n      if (isSocketConnected) {\n        clientSocket.emit(\"grp updated\", {\n          updater: loggedInUser,\n          updatedGroup: data,\n        });\n      }\n      dispatch(\n        displayToast({\n          message: `Exited From '${data?.chatName}' Group`,\n          type: \"info\",\n          duration: 4000,\n          position: \"bottom-center\",\n        })\n      );\n      dispatch(setLoading(false));\n      updateView(null);\n      dispatch(hideDialog());\n    } catch (error) {\n      dispatch(\n        displayToast({\n          title: \"Couldn't Exit Discussion\",\n          message: error.response?.data?.message || error.message,\n          type: \"error\",\n          duration: 4000,\n          position: \"bottom-center\",\n        })\n      );\n      dispatch(setLoading(false));\n      return \"membersUpdated\";\n    }\n  };\n\n  const deleteGroup = async () => {\n    dispatch(setLoading(true));\n    const config = getAxiosConfig({ loggedInUser });\n    try {\n      const deleteGroupPromise = axios.put(\n        `/api/chat/group/delete`,\n        {\n          currentDP: groupInfo?.chatDisplayPic,\n          cloudinary_id: groupInfo?.cloudinary_id,\n          chatId: groupInfo?._id,\n        },\n        config\n      );\n      const deleteMessagesPromise = messages?.length\n        ? axios.put(\n            `/api/message/delete`,\n            {\n              messageIds: JSON.stringify(messages?.map((m) => m._id)),\n              isDeleteGroupRequest: true,\n            },\n            config\n          )\n        : Promise.resolve();\n\n      // Parallel execution of independent promises\n      await Promise.all([deleteGroupPromise, deleteMessagesPromise]);\n      if (isSocketConnected) {\n        clientSocket.emit(\"grp deleted\", {\n          admin: loggedInUser,\n          deletedGroup: groupInfo,\n        });\n      }\n      displaySuccess(\"Discussion Deleted Successfully\");\n      dispatch(setLoading(false));\n      updateView(null);\n      dispatch(hideDialog());\n    } catch (error) {\n      displayError(error, \"Couldn't Delete Discussion\");\n      dispatch(setLoading(false));\n    }\n  };\n\n  // Open confirm dialogs\n  const openExitGroupConfirmDialog = () => {\n    setShowDialogActions(true);\n    setShowDialogClose(false);\n    setChildDialogBody(\n      <>\n        {groupMembers?.length === 1\n          ? `Since you're the only Discussion member, this Discussion will be \n            DELETED if you exit. Are you sure you want to exit?`\n          : `This Discussion will be removed from your chats. \n             Are you sure you want to exit this Discussion?`}\n      </>\n    );\n    displayChildDialog({\n      title: \"Exit Group\",\n      nolabel: \"NO\",\n      yeslabel: \"YES\",\n      loadingYeslabel: \"Exiting...\",\n      action: exitGroup,\n    });\n  };\n\n  const openDeleteGroupConfirmDialog = () => {\n    setShowDialogActions(true);\n    setShowDialogClose(false);\n    setChildDialogBody(\n      <>\n        All messages and files related to this discussion will be deleted and this\n        discussion will be removed from the chats of ALL MEMBERS. Are you sure you\n        want to delete this discussion?\n      </>\n    );\n    displayChildDialog({\n      title: \"Delete Discussion\",\n      nolabel: \"NO\",\n      yeslabel: \"YES\",\n      loadingYeslabel: \"Deleting...\",\n      action: deleteGroup,\n    });\n  };\n\n  // Open edit name dialog\n  const openEditGroupNameDialog = () => {\n    setShowDialogActions(true);\n    setShowDialogClose(false);\n    setChildDialogBody(\n      <EditNameBody\n        originalName={groupInfo?.chatName}\n        getUpdatedName={getUpdatedName}\n        placeholder=\"Enter New Discussion Name\"\n      />\n    );\n    displayChildDialog({\n      title: \"Edit Discussion Name\",\n      nolabel: \"CANCEL\",\n      yeslabel: \"SAVE\",\n      loadingYeslabel: \"Saving...\",\n      action: updateGroupName,\n    });\n  };\n\n  // Open delete photo confirm dialog\n  const openDeletePhotoConfirmDialog = () => {\n    setShowDialogActions(true);\n    setShowDialogClose(false);\n    setChildDialogBody(<>Are you sure you want to delete this display pic?</>);\n    displayChildDialog({\n      title: \"Delete Display Pic\",\n      nolabel: \"NO\",\n      yeslabel: \"YES\",\n      loadingYeslabel: \"Deleting...\",\n      action: deleteGroupDp,\n    });\n  };\n\n  // To retreive added members from `AddMembersToGroup` dialog\n  let addedMembers = [];\n  const getAddedMembers = (updatedMembers) => {\n    addedMembers = updatedMembers;\n  };\n\n  const addMembersToGroup = async () => {\n    if (!isUserGroupAdmin)\n      return displayWarning(\"Only Admin Can Add Members to Discussion\");\n\n    if (!addedMembers?.length)\n      return displayWarning(\"Please Select Atleast 1 Member to Add\");\n\n    dispatch(setLoading(true));\n    const config = getAxiosConfig({ loggedInUser });\n    try {\n      const { data } = await axios.post(\n        \"/api/chat/group/add\",\n        {\n          usersToBeAdded: JSON.stringify(addedMembers),\n          chatId: groupInfo?._id,\n        },\n        config\n      );\n      if (isSocketConnected) {\n        clientSocket.emit(\"grp updated\", {\n          updater: loggedInUser,\n          updatedGroup: data,\n        });\n      }\n      displaySuccess(\"Successfully Added Member/s to Discussion\");\n      dispatch(setLoading(false));\n      updateView(data);\n      return \"profileUpdated\";\n    } catch (error) {\n      displayError(error, \"Couldn't Add Members to Discussion\");\n      dispatch(setLoading(false));\n    }\n  };\n\n  // Open Add members dialog\n  const openAddMembersDialog = () => {\n    setShowDialogActions(true);\n    setShowDialogClose(false);\n    setChildDialogBody(<AddMembersToGroup getAddedMembers={getAddedMembers} />);\n    displayChildDialog({\n      title: \"Add Team Members\",\n      nolabel: \"Cancel\",\n      yeslabel: \"Add\",\n      loadingYeslabel: \"Adding...\",\n      action: addMembersToGroup,\n    });\n  };\n\n  const openViewMembersDialog = () => {\n    setShowDialogActions(false);\n    setShowDialogClose(true);\n    setChildDialogBody(<ViewGroupMembers />);\n    displayChildDialog({\n      title: ``,\n    });\n  };\n\n  const displayFullSizeImage = (e) => {\n    setShowDialogActions(false);\n    setShowDialogClose(true);\n    setChildDialogBody(<FullSizeImage event={e} />);\n    displayChildDialog({\n      isFullScreen: true,\n      title: e.target?.alt || \"Display Pic\",\n    });\n  };\n\n  const openEditGroupDpMenu = (e) => {\n    setEditGroupDpMenuAnchor(e.target);\n  };\n\n  return (\n    <div className=\"groupDialog d-flex flex-column row\">\n      {/* View/Edit Display Pic */}\n      {loading && uploading ? (\n        <div className=\"d-flex flex-column justify-content-center align-items-center\">\n          <CircularProgress\n            size={60}\n            style={{ margin: \"20px 0px\", color: \"lightblue\" }}\n          />\n          <span style={{ marginBottom: \"45px\" }} className=\"text-light h1\">\n            {\" Updating Photo...\"}\n          </span>\n        </div>\n      ) : (\n        <section className=\"dialogField d-flex position-relative mb-4\">\n          <CustomTooltip title=\"View DP\" placement=\"right\" arrow>\n            <img\n              className=\"img-fluid d-flex mx-auto border border-2 border-primary rounded-circle pointer\"\n              src={groupDP || \"GroupDp\"}\n              style={{ width: \"120px\", height: \"120px\" }}\n              onClick={displayFullSizeImage}\n              alt={groupName}\n            />\n          </CustomTooltip>\n\n          <CustomTooltip title=\"Edit Discussion DP\" placement=\"right\" arrow>\n            <i\n              id=\"editProfilePic\"\n              tabIndex={2}\n              onKeyDown={clickOnKeydown}\n              className={`selectPicIcon position-absolute p-2 d-flex ${disableIfLoading} justify-content-center align-items-center bg-success rounded-circle pointer`}\n              onClick={openEditGroupDpMenu}\n            >\n              <Edit className=\"text-light fs-6\" />\n            </i>\n          </CustomTooltip>\n          {/* Edit/Delete display pic menu */}\n          <EditPicMenu\n            anchor={editGroupDpMenuAnchor}\n            setAnchor={setEditGroupDpMenuAnchor}\n            selectProfilePic={() => imgInput.current.click()}\n            openDeletePhotoConfirmDialog={openDeletePhotoConfirmDialog}\n            deletePhotoCondition={!groupDP?.endsWith(\"group_mbuvht.png\")}\n          />\n          <input\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={updateGroupDp}\n            name=\"displayPic\"\n            id=\"groupInfo__displayPic\"\n            ref={imgInput}\n            className={`d-none`}\n            disabled={loading}\n          />\n        </section>\n      )}\n\n      {/* Group Name */}\n      <section className={`dialogField text-center mb-3`}>\n        <div className=\"input-group\" style={{ marginTop: \"-10px\" }}>\n          <CustomTooltip\n            title={groupName?.length > 24 ? groupName : \"\"}\n            placement=\"top\"\n            arrow\n          >\n            <div\n              className=\"w-100 fw-bold mx-4 text-info\"\n              style={{ fontSize: \"28px\", lineHeight: \"30px\" }}\n            >\n              {truncateString(groupName, 25, 21)}\n            </div>\n          </CustomTooltip>\n          <CustomTooltip title=\"Edit Discussion Name\" placement=\"top\" arrow>\n            <IconButton\n              tabIndex={3}\n              onKeyDown={clickOnKeydown}\n              onClick={openEditGroupNameDialog}\n              sx={{\n                position: \"absolute\",\n                right: -8,\n                top: 0,\n                \":hover\": { backgroundColor: \"#aaaaaa30\" },\n              }}\n            >\n              <Edit className=\"text-light\" />\n            </IconButton>\n          </CustomTooltip>\n        </div>\n      </section>\n\n      {/* No of members */}\n      <section\n        className={`dialogField text-center mb-3 text-light text-opacity-75`}\n        style={{ marginTop: \"-5px\", borderRadius: \"10px\" }}\n      >\n        {`${groupMembers?.length} Member${groupMembers?.length > 1 ? \"s\" : \"\"}`}\n      </section>\n\n      {/* View Members */}\n      <section className={`dialogField text-center mb-2`}>\n        <button\n          className={`${btnClassName} btn-outline-primary`}\n          onClick={openViewMembersDialog}\n        >\n          <InfoOutlined\n            className=\"text-light\"\n            style={{ marginLeft: \"-15px\" }}\n          />\n          <span className=\"ms-2\">View Members</span>\n        </button>\n      </section>\n\n      {/* Add Members (only for admins) */}\n      {isUserGroupAdmin && (\n        <section className={`dialogField text-center mb-2`}>\n          <button\n            className={`${btnClassName} btn-outline-success`}\n            onClick={openAddMembersDialog}\n          >\n            <PersonAdd className=\"text-light\" style={{ marginLeft: \"-20px\" }} />\n            <span className=\"ms-2\">Add Members</span>\n          </button>\n        </section>\n      )}\n\n      {/* Exit Group */}\n      <section className={`dialogField text-center mb-2`}>\n        <button\n          className={`${btnClassName} btn-outline-danger`}\n          onClick={() => {\n            if (\n              isUserGroupAdmin &&\n              admins?.length === 1 &&\n              groupMembers?.length !== 1\n            ) {\n              return displayWarning(\n                `Every discussion must have atleast 1 admin. Since \n              you're the only discussion admin, you won't be allowed\n              to exit until you make someone else as the admin.`,\n                10000\n              );\n            }\n            openExitGroupConfirmDialog();\n          }}\n        >\n          <Logout className=\"text-light\" style={{ marginLeft: \"-30px\" }} />\n          <span className=\"ms-2\">Exit Discussion</span>\n        </button>\n      </section>\n\n      {/* Delete Group (only for admins) */}\n      {isUserGroupAdmin && (\n        <section className={`dialogField text-center mb-2`}>\n          <button\n            className={`${btnClassName} btn-outline-danger`}\n            onClick={openDeleteGroupConfirmDialog}\n          >\n            <Delete className=\"text-light\" style={{ marginLeft: \"-20px\" }} />\n            <span className=\"ms-2\">Delete Discussion</span>\n          </button>\n        </section>\n      )}\n\n      {/* Child dialog */}\n      <ChildDialog\n        showChildDialogActions={showDialogActions}\n        showChildDialogClose={showDialogClose}\n      />\n    </div>\n  );\n};\n\nexport default GroupInfoBody;\n","import { Skeleton } from \"@mui/material\";\n\nconst LoadingMsgs = ({ count }: { count: number }) => {\n  const skeletonStyle = { backgroundColor: \"#777\" };\n  return (\n    <>\n      {[...Array(count)].map((e, i) => (\n        <div\n          key={`loadingMsg${i}`}\n          className={`loadingMsg d-flex flex-column align-items-${\n            i % 2 ? \"start\" : \"end\"\n          } mb-2 mx-4`}\n        >\n          <Skeleton\n            variant=\"rectangular\"\n            className={`loadingSender col-3 mb-1`}\n            style={skeletonStyle}\n          />\n          <Skeleton\n            variant=\"rectangular\"\n            className={`loadingContent col-5`}\n            style={skeletonStyle}\n          />\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default LoadingMsgs;\n","import {\n  Audiotrack,\n  Description,\n  Download,\n  Downloading,\n  PictureAsPdf,\n  PlayArrow,\n  PlayCircle,\n  Videocam,\n} from \"@mui/icons-material\";\nimport {\n  getFileSizeString,\n  isImageOrGifFile,\n  truncateString,\n} from \"../../utils/appUtils\";\nimport animationData from \"../../animations/app-loading.json\";\nimport LottieAnimation from \"./LottieAnimation\";\nimport { useRef } from \"react\";\nimport { MsgAttachmentProps } from \"../../utils/AppTypes\";\n\nconst IMG_BASE_URL = process.env.REACT_APP_CLOUDINARY_BASE_URL;\n\nconst MsgAttachment = ({\n  msgSent,\n  isEditMode,\n  fileEditIcons,\n  downloadingFileId,\n  loadingMediaId,\n  isPreview,\n  fileData,\n}: MsgAttachmentProps) => {\n  const previewStyles = `${\n    isPreview && !isEditMode\n      ? \"py-4 border border-4 border-secondary previewFile\"\n      : \"p-2\"\n  }`;\n  const iconStyles = `${isPreview && !isEditMode ? \"fs-1\" : \"fs-2\"}`;\n\n  let { fileUrl, file_id, file_name, size } = fileData;\n  const fileContents = file_name.split(\"===\") || [];\n  file_name = fileContents[0] || file_name;\n  const isMediaFile = fileContents[1]?.includes(\":\");\n  const mediaContents = isMediaFile ? fileContents[1].split(\"+++\") : [];\n  const mediaFileType = mediaContents[1];\n  const mediaFileSize = getFileSizeString(mediaContents[2]);\n  const loadingGif = useRef(null);\n\n  let fileSize = mediaContents[0] || parseInt(fileContents[1]) || size || \"\";\n\n  if (!isMediaFile) {\n    fileSize = getFileSizeString(fileSize);\n  }\n\n  const isDownloadingFile = downloadingFileId === file_id;\n  const fileType =\n    mediaFileType?.startsWith(\"video/\") ||\n    /(\\.mp4|\\.mov|\\.ogv|\\.webm)$/.test(file_name)\n      ? \"Video\"\n      : mediaFileType?.startsWith(\"audio/\") ||\n        /(\\.mp3|\\.ogg|\\.wav)$/.test(file_name)\n      ? \"Audio\"\n      : /(\\.doc|\\.docx)$/.test(file_name)\n      ? \"Word Doc\"\n      : /(\\.ppt|\\.pptx)$/.test(file_name)\n      ? \"PPT\"\n      : /(\\.xlsx|\\.csv|\\.xls)$/.test(file_name)\n      ? \"Spreadsheet\"\n      : /(\\.pdf)$/.test(file_name)\n      ? \"PDF\"\n      : file_name.substring(file_name.lastIndexOf(\".\") + 1)?.toUpperCase();\n\n  const attachmentHeader = (\n    <>\n      {isEditMode ? (\n        <span\n          className=\"d-flex justify-content-center w-100 mx-auto\"\n          style={{ zIndex: 6 }}\n        >\n          {fileEditIcons}\n        </span>\n      ) : (\n        <span\n          data-download={file_id}\n          className={`downloadIcon ${isDownloadingFile ? \"downloading\" : \"\"} ${\n            isPreview || !msgSent ? \"d-none\" : \"\"\n          }`}\n          title={isDownloadingFile ? \"Downloading...\" : \"Download File\"}\n        >\n          {isDownloadingFile ? (\n            <Downloading />\n          ) : (\n            <Download data-download={file_id} />\n          )}\n        </span>\n      )}\n    </>\n  );\n  const fileNameWrapper = (\n    <span className={`${isPreview && !isEditMode ? \"fs-4\" : \"fs-6\"}`}>\n      &nbsp;&nbsp;\n      <span title={file_name}>{truncateString(file_name + \"\", 40, 37)}</span>\n    </span>\n  );\n  const fileInfo = (\n    <>\n      {fileNameWrapper}\n      <div\n        className={`${isPreview && !isEditMode ? \"fs-5 mt-4\" : \"\"}`}\n        style={{ marginBottom: isPreview && !isEditMode ? -10 : 0 }}\n      >\n        {`${fileType} : ${fileSize}`}\n      </div>\n    </>\n  );\n  const hideWhileLoadingMedia =\n    loadingMediaId === file_id ? \"invisible\" : \"visible\";\n\n  const displayWhileLoadingMedia =\n    loadingMediaId === file_id ? \"visible\" : \"invisible\";\n\n  return (\n    <>\n      {fileUrl?.startsWith(IMG_BASE_URL) || isImageOrGifFile(file_name) ? (\n        <span className=\"d-inline-block msgImageWrapper mb-2 position-relative\">\n          <img\n            src={fileUrl}\n            alt={file_name}\n            title={file_name}\n            data-image-id={file_id}\n            className={`msgImageFile d-inline-block`}\n          />\n          {isEditMode && (\n            <span className=\"position-absolute top-0 start-0\">\n              {fileEditIcons}\n            </span>\n          )}\n        </span>\n      ) : (\n        <div\n          className=\"pointer\"\n          style={{\n            margin: \"0px 0px -8px 0px\",\n            width:\n              isPreview && !isEditMode ? \"clamp(270px, 50vmin, 600px)\" : \"100%\",\n          }}\n        >\n          {fileType === \"PDF\" ? (\n            <div className={`${previewStyles} msgFile pdfFile text-light`}>\n              <div>\n                {!isEditMode && <PictureAsPdf className={iconStyles} />}\n                {attachmentHeader}\n              </div>\n              {fileInfo}\n            </div>\n          ) : fileType === \"Spreadsheet\" ? (\n            <div className={`${previewStyles} msgFile excelFile bg-success`}>\n              <div>\n                {!isEditMode && <Description className={iconStyles} />}\n                {attachmentHeader}\n              </div>\n              {fileInfo}\n            </div>\n          ) : fileType === \"PPT\" ? (\n            <div className={`${previewStyles} msgFile pptFile text-light`}>\n              <div>\n                {!isEditMode && <Description className={iconStyles} />}\n                {attachmentHeader}\n              </div>\n              {fileInfo}\n            </div>\n          ) : fileType === \"Word Doc\" ? (\n            <div\n              className={`${previewStyles} msgFile wordFile`}\n              style={{ borderRadius: isEditMode ? 10 : 5 }}\n            >\n              <div>\n                {!isEditMode && <Description className={iconStyles} />}\n                {attachmentHeader}\n              </div>\n              {fileInfo}\n            </div>\n          ) : fileType === \"Video\" ? (\n            <div className={`${previewStyles} msgFile mediaFile`}>\n              <div>\n                {attachmentHeader}\n                {!isEditMode && ` ${mediaFileSize}`}\n              </div>\n              {fileNameWrapper}\n              <div\n                data-video={file_id}\n                data-video-name={file_name}\n                title=\"Click to Play\"\n                className=\"mediaMsg bg-gradient py-5\"\n              >\n                <PlayCircle\n                  data-video={file_id}\n                  data-video-name={file_name}\n                  className={`playMedia ${hideWhileLoadingMedia}`}\n                  style={{ fontSize: 40 }}\n                />\n                <LottieAnimation\n                  ref={loadingGif}\n                  className={`position-absolute ${displayWhileLoadingMedia}`}\n                  style={{\n                    marginBottom: 0,\n                    height: 50,\n                    color: \"white\",\n                  }}\n                  animationData={animationData}\n                />\n                <span\n                  data-video={file_id}\n                  data-video-name={file_name}\n                  className=\"mediaDuration videoDuration text-light\"\n                >\n                  <Videocam data-video={file_id} data-video-name={file_name} />\n                  &nbsp;&nbsp;{fileSize}\n                </span>\n              </div>\n            </div>\n          ) : fileType === \"Audio\" ? (\n            <div\n              className={`${previewStyles} msgFile mediaFile bg-dark bg-opacity-75`}\n            >\n              <div>\n                {attachmentHeader}\n                {!isEditMode && ` ${mediaFileSize}`}\n              </div>\n              {fileNameWrapper}\n              <div\n                data-audio={file_id}\n                data-audio-name={file_name}\n                className=\"mediaMsg bg-gradient px-4 py-2\"\n                title=\"Click to Play\"\n              >\n                <PlayArrow\n                  data-audio={file_id}\n                  data-audio-name={file_name}\n                  className={`playMedia ${hideWhileLoadingMedia}`}\n                />\n                <LottieAnimation\n                  ref={loadingGif}\n                  className={`position-absolute ${displayWhileLoadingMedia}`}\n                  style={{\n                    marginBottom: 0,\n                    height: 30,\n                    color: \"white\",\n                  }}\n                  animationData={animationData}\n                />\n                <span\n                  data-audio={file_id}\n                  data-audio-name={file_name}\n                  className=\"mediaDuration audioDuration text-light\"\n                >\n                  <Audiotrack\n                    data-audio={file_id}\n                    data-audio-name={file_name}\n                    style={{ fontSize: 20 }}\n                  />\n                  &nbsp;{fileSize}\n                </span>\n              </div>\n            </div>\n          ) : (\n            <div className={`${previewStyles} msgFile otherFile`}>\n              <div>\n                {!isEditMode && <Description className={iconStyles} />}\n                {attachmentHeader}\n              </div>\n              {fileInfo}\n            </div>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MsgAttachment;\n","import { Close } from \"@mui/icons-material\";\nimport { IconButton } from \"@mui/material\";\nimport { truncateString } from \"../../utils/appUtils\";\nimport MsgAttachment from \"./MsgAttachment\";\n\nconst PLACEHOLDER_IMG = process.env.REACT_APP_PLACEHOLDER_IMG_URL;\n\ninterface Props {\n  isEditMode: boolean;\n  attachmentData: any;\n  CustomTooltip: any;\n  fileEditIcons: any;\n}\n\nconst AttachmentPreview = ({\n  isEditMode,\n  attachmentData,\n  CustomTooltip,\n  fileEditIcons,\n}: Props) => {\n  const {\n    attachment: { name, type, size },\n    attachmentPreviewUrl,\n  } = attachmentData;\n\n  const FILE_WRAPPER_CLASS = `${\n    isEditMode ? \"h-100\" : \"mt-4 h-50\"\n  } d-flex justify-content-center align-items-center`;\n  const ATTACHMENT_STYLE = {\n    borderRadius: 7,\n    width: \"calc(100%)\",\n    maxHeight: isEditMode ? 200 : 250,\n  };\n  const editIconsWrapper = (\n    <span className=\"position-absolute top-0 start-0 m-1\" style={{ zIndex: 6 }}>\n      {fileEditIcons}\n    </span>\n  );\n\n  const previewTitle = type.startsWith(\"application/\") ? \"Attached File\" : name;\n\n  return (\n    <div\n      className=\"bg-black bg-gradient bg-opacity-75 h-100 d-flex flex-column justify-content-start align-items-center\"\n      style={{ borderRadius: 10 }}\n    >\n      {/* Discard Attachment button */}\n      {!isEditMode && (\n        <CustomTooltip\n          title=\"Discard Attachment\"\n          placement=\"bottom-start\"\n          arrow\n        >\n          <IconButton\n            data-discard-file={true}\n            sx={{\n              position: \"absolute\",\n              left: 15,\n              top: 12,\n              color: \"#999999\",\n              \":hover\": {\n                backgroundColor: \"#aaaaaa20\",\n              },\n            }}\n          >\n            <Close data-discard-file={true} />\n          </IconButton>\n        </CustomTooltip>\n      )}\n\n      {/* Attached File Name */}\n      {!isEditMode && (\n        <CustomTooltip\n          title={previewTitle?.length > 23 ? previewTitle : \"\"}\n          placement=\"top\"\n          arrow\n        >\n          <span\n            className={`mt-5 mb-2`}\n            style={{ color: \"lightblue\", fontSize: 25, zIndex: 5 }}\n          >\n            {truncateString(previewTitle, 23, 20) || \"Attached File\"}\n          </span>\n        </CustomTooltip>\n      )}\n\n      <>\n        {type?.startsWith(\"image/\") ? (\n          <div className={`${FILE_WRAPPER_CLASS} position-relative`}>\n            {editIconsWrapper}\n            <img\n              style={ATTACHMENT_STYLE}\n              src={attachmentPreviewUrl || PLACEHOLDER_IMG}\n              alt=\"msgAttachment\"\n            />\n          </div>\n        ) : type?.startsWith(\"audio/\") ? (\n          <div\n            className={`${FILE_WRAPPER_CLASS} flex-column`}\n            style={{ width: \"clamp(190px, 48vw, 290px)\" }}\n          >\n            <span className=\"m-2\" style={{ zIndex: 6 }}>\n              {fileEditIcons}\n            </span>\n            <audio\n              src={attachmentPreviewUrl || \"\"}\n              controls\n              autoPlay\n              style={ATTACHMENT_STYLE}\n            >\n              {name}\n            </audio>\n          </div>\n        ) : type?.startsWith(\"video/\") ? (\n          <div className={`${FILE_WRAPPER_CLASS} position-relative`}>\n            {editIconsWrapper}\n            <video\n              src={attachmentPreviewUrl || \"\"}\n              controls\n              autoPlay\n              style={ATTACHMENT_STYLE}\n            >\n              {name}\n            </video>\n          </div>\n        ) : (\n          <MsgAttachment\n            isEditMode={isEditMode}\n            fileEditIcons={fileEditIcons}\n            isPreview={true}\n            fileData={{\n              fileUrl: attachmentPreviewUrl,\n              file_id: \"\",\n              file_name: name,\n              size,\n            }}\n          />\n        )}\n      </>\n    </div>\n  );\n};\n\nexport default AttachmentPreview;\n","import {\n  AttachFile,\n  Close,\n  Delete,\n  Done,\n  DoneAll,\n  Edit,\n  KeyboardArrowDown,\n} from \"@mui/icons-material\";\nimport { Avatar, CircularProgress, IconButton } from \"@mui/material\";\nimport { forwardRef, useEffect, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectAppState } from \"../../store/slices/AppSlice\";\nimport {\n  msgTimeStringOf,\n  msgDateStringOf,\n  dateStringOf,\n  setCaretPosition,\n} from \"../../utils/appUtils\";\nimport AttachmentPreview from \"./AttachmentPreview\";\nimport MsgAttachment from \"./MsgAttachment\";\n\nconst IconButtonSx = {\n  color: \"lightblue\",\n  \":hover\": { backgroundColor: \"#cccccc20\" },\n};\n\nconst Message = forwardRef(\n  (\n    {\n      downloadingFileId,\n      loadingMediaId,\n      msgEditMode,\n      clickedMsgId,\n      msgFileRemoved,\n      CustomTooltip,\n      msgSent,\n      currMsg,\n      prevMsg,\n      attachmentData,\n    },\n    editableMsgRef\n  ) => {\n    const msgContentRef = useRef(null); // Local ref (in non-edit mode)\n    const { loggedInUser, selectedChat } = useSelector(selectAppState);\n    const { fileUrl, file_id, file_name } = currMsg;\n    const { _id, profilePic, name, email } = currMsg?.sender;\n    const isLoggedInUser = _id === loggedInUser._id;\n    const senderData = `${profilePic}===${name}===${email}`;\n    const currMsgId = isLoggedInUser ? currMsg?._id : null;\n    const isClickedMsgCurrMsg = clickedMsgId === currMsgId;\n    const isSameSender = _id === prevMsg?.sender._id;\n    const currMsgDate = new Date(currMsg.createdAt);\n    const prevMsgDate = new Date(prevMsg?.createdAt);\n    const isOtherDay = dateStringOf(currMsgDate) !== dateStringOf(prevMsgDate);\n    const showCurrSender =\n      !isLoggedInUser &&\n      selectedChat?.isGroupChat &&\n      (!isSameSender || isOtherDay);\n    const isEditMode = msgEditMode && isClickedMsgCurrMsg;\n\n    const fileEditIcons = (\n      <>\n        <CustomTooltip title=\"Remove Attachment\" placement=\"top\" arrow>\n          <IconButton\n            data-remove-msg-file={true}\n            className={`m-1 bg-black bg-opacity-75`}\n            sx={IconButtonSx}\n          >\n            <Delete data-remove-msg-file={true} style={{ fontSize: 20 }} />\n          </IconButton>\n        </CustomTooltip>\n        <CustomTooltip title=\"Change Attachment\" placement=\"top\" arrow>\n          <IconButton\n            data-edit-msg-file={true}\n            className={`m-1 bg-black bg-opacity-75`}\n            sx={IconButtonSx}\n          >\n            <Edit data-edit-msg-file={true} style={{ fontSize: 20 }} />\n          </IconButton>\n        </CustomTooltip>\n      </>\n    );\n\n    useEffect(() => {\n      if (msgContentRef?.current) {\n        msgContentRef.current.innerHTML = currMsg?.content;\n      }\n    }, []);\n\n    useEffect(() => {\n      if (isEditMode) {\n        setCaretPosition(editableMsgRef?.current);\n      }\n    }, [msgEditMode]);\n\n    return (\n      <>\n        <section\n          className={`msgRow d-flex justify-content-${\n            isLoggedInUser ? \"end\" : \"start\"\n          }`}\n          style={{ marginTop: isSameSender ? 3 : 10 }}\n        >\n          {showCurrSender ? (\n            <CustomTooltip title={`View Profile`} placement=\"top-start\" arrow>\n              <Avatar\n                src={profilePic}\n                alt={name}\n                data-sender={senderData}\n                className=\"senderAvatar pointer\"\n              />\n            </CustomTooltip>\n          ) : (\n            selectedChat?.isGroupChat && <span style={{ width: 30 }}></span>\n          )}\n          <div\n            className={`msgBox d-flex flex-column text-start p-2 rounded-3\n          mx-2 mx-md-3 ${isLoggedInUser ? \"yourMsg\" : \"receiversMsg\"}`}\n            data-msg={currMsgId}\n            data-file-exists={file_id}\n          >\n            {isEditMode ? (\n              <div\n                className=\"d-flex justify-content-end\"\n                style={{ margin: \"-5px -5px 3px 0px\" }}\n              >\n                {(!currMsg?.fileUrl ||\n                  (msgFileRemoved && !attachmentData?.attachment)) && (\n                  <CustomTooltip title=\"Attach File\" placement=\"top-end\" arrow>\n                    <IconButton\n                      data-attach-msg-file={true}\n                      className={`me-1`}\n                      sx={{ ...IconButtonSx, transform: \"rotateZ(45deg)\" }}\n                    >\n                      <AttachFile\n                        data-attach-msg-file={true}\n                        style={{ fontSize: 20 }}\n                      />\n                    </IconButton>\n                  </CustomTooltip>\n                )}\n                <CustomTooltip title=\"Discard Draft\" placement=\"top-end\" arrow>\n                  <IconButton\n                    data-discard-draft={true}\n                    className={``}\n                    sx={IconButtonSx}\n                  >\n                    <Close data-discard-draft={true} style={{ fontSize: 20 }} />\n                  </IconButton>\n                </CustomTooltip>\n                <CustomTooltip title=\"Update Message\" placement=\"top-end\" arrow>\n                  <IconButton\n                    data-update-msg={true}\n                    data-msg-created-at={currMsg?.createdAt}\n                    className={`ms-1`}\n                    sx={IconButtonSx}\n                  >\n                    <Done\n                      data-update-msg={true}\n                      data-msg-created-at={currMsg?.createdAt}\n                      style={{ fontSize: 20 }}\n                    />\n                  </IconButton>\n                </CustomTooltip>\n              </div>\n            ) : (\n              <></>\n            )}\n            {showCurrSender && (\n              <span data-sender={senderData} className=\"msgSender pointer\">\n                {name}\n              </span>\n            )}\n            {isLoggedInUser && msgSent && !msgEditMode && (\n              <span\n                data-msg={currMsgId}\n                data-file-exists={file_id}\n                title=\"Edit/Delete Message\"\n                className={`msgOptionsIcon text-light position-absolute \n              top-0 end-0 w-25 h-100`}\n              >\n                <KeyboardArrowDown\n                  data-msg={currMsgId}\n                  data-file-exists={file_id}\n                  style={{ fontSize: 22 }}\n                  className=\"position-absolute top-0 end-0\"\n                />\n              </span>\n            )}\n            {currMsg?.fileUrl && !isEditMode && (\n              <MsgAttachment\n                msgSent={msgSent}\n                isEditMode={isEditMode}\n                fileEditIcons={fileEditIcons}\n                downloadingFileId={downloadingFileId}\n                loadingMediaId={loadingMediaId}\n                fileData={{\n                  msgId: currMsgId,\n                  fileUrl,\n                  file_id,\n                  file_name,\n                }}\n              />\n            )}\n            {isEditMode && attachmentData?.attachment && (\n              <AttachmentPreview\n                isEditMode={isEditMode}\n                attachmentData={attachmentData}\n                CustomTooltip={CustomTooltip}\n                fileEditIcons={fileEditIcons}\n              />\n            )}\n            {currMsg?.fileUrl &&\n              isEditMode &&\n              !attachmentData?.attachment &&\n              !msgFileRemoved && (\n                <MsgAttachment\n                  msgSent={msgSent}\n                  isEditMode={isEditMode}\n                  fileEditIcons={fileEditIcons}\n                  downloadingFileId={downloadingFileId}\n                  loadingMediaId={loadingMediaId}\n                  fileData={{\n                    msgId: currMsgId,\n                    fileUrl,\n                    file_id,\n                    file_name,\n                  }}\n                />\n              )}\n            <div\n              data-msg={currMsgId}\n              data-file-exists={file_id}\n              className={`msgContent d-flex ${\n                file_id || attachmentData?.attachment ? \"mt-2\" : \"\"\n              }`}\n            >\n              <span\n                id={`${currMsg?._id}---content`}\n                className=\"w-100\"\n                style={{ outline: \"none\" }}\n                contentEditable={isEditMode}\n                data-msg-created-at={currMsg?.createdAt}\n                ref={isEditMode ? editableMsgRef : msgContentRef}\n              ></span>\n              <span\n                data-msg={currMsgId}\n                data-file-exists={file_id}\n                className=\"msgTime text-end d-flex align-items-end justify-content-end\"\n              >\n                {msgTimeStringOf(currMsgDate)}\n                {isLoggedInUser && (\n                  <>\n                    {msgSent ? (\n                      <DoneAll\n                        data-msg={currMsgId}\n                        data-file-exists={file_id}\n                        className=\"text-info fs-6 ms-1\"\n                      />\n                    ) : (\n                      <CircularProgress\n                        size={10}\n                        className=\"sendStatusIcon ms-1\"\n                      />\n                    )}\n                  </>\n                )}\n              </span>\n            </div>\n          </div>\n        </section>\n        {isOtherDay && (\n          <div className={`msgDate mt-3 mb-2 mx-auto py-1 px-3 rounded-3`}>\n            {msgDateStringOf(currMsgDate)}\n          </div>\n        )}\n      </>\n    );\n  }\n);\nexport default Message;\n","import { Delete, Edit } from \"@mui/icons-material\";\nimport { ListItemIcon, MenuItem } from \"@mui/material\";\nimport Menu, { menuIconProps, menuItemProps } from \"../utils/Menu\";\nimport MenuItemText from \"../utils/MenuItemText\";\n\nconst MsgOptionsMenu = ({\n  anchor,\n  setAnchor,\n  editMsgHandler,\n  openDeleteMsgConfirmDialog,\n}) => {\n  return (\n    <Menu\n      menuAnchor={anchor}\n      setMenuAnchor={setAnchor}\n      transformOrigin={{ vertical: \"top\", horizontal: \"left\" }}\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n    >\n      <MenuItem sx={menuItemProps} onClick={editMsgHandler}>\n        <ListItemIcon sx={menuIconProps}>\n          <Edit />\n        </ListItemIcon>\n        <MenuItemText>Edit Message</MenuItemText>\n      </MenuItem>\n      <MenuItem sx={menuItemProps} onClick={openDeleteMsgConfirmDialog}>\n        <ListItemIcon sx={menuIconProps}>\n          <Delete />\n        </ListItemIcon>\n        <MenuItemText>Delete Message</MenuItemText>\n      </MenuItem>\n    </Menu>\n  );\n};\n\nexport default MsgOptionsMenu;\n","import { useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport letsChatAnimData from \"../animations/letsChatGif.json\";\r\nimport { selectAppState } from \"../store/slices/AppSlice\";\r\nimport { truncateString } from \"../utils/appUtils\";\r\nimport LottieAnimation from \"./utils/LottieAnimation\";\r\n\r\nconst WelcomeBanner = ({ isNewUser }) => {\r\n  const { loggedInUser } = useSelector(selectAppState);\r\n  const letsChatGif = useRef(null);\r\n  return (\r\n    <div className=\"d-flex flex-column justify-content-start align-items-center h-100\">\r\n      {!isNewUser && (\r\n        <h2 className=\"mx-3 mt-1\">\r\n          Hello{\" \"}\r\n          <span\r\n            className=\"fw-bold\"\r\n            style={{ color: \"#A798F2\" }}\r\n          >{`${truncateString(\r\n            loggedInUser?.name?.split(\" \")[0],\r\n            12,\r\n            9\r\n          )?.toUpperCase()}`}</span>{\" \"}\r\n          👋\r\n          <br />\r\n          <br />\r\n          {loggedInUser.email === 'strike10310522@gmail.com' ? <p>You Are SuperAdmin</p> : <p>You Are Member</p>}\r\n        </h2>\r\n      )}\r\n      <LottieAnimation\r\n        ref={letsChatGif}\r\n        className={\"d-inline-block mt-3\"}\r\n        style={{ marginBottom: 50, height: \"50%\" }}\r\n        animationData={letsChatAnimData}\r\n      />\r\n      <p className=\"h4 mx-5 mb-3\" style={{ marginTop: -40, color: \"#99C5EE\" }}>\r\n        Create one-to-one chats, discussion chats, send/edit/delete text messages and\r\n        files to get 'GSG'😉.\r\n      </p>\r\n      <p className=\"h2\" style={{ color: \"#DDBEF9\" }}>\r\n        Happy Chatting!😀\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WelcomeBanner;\r\n","import { ArrowBack, Close } from \"@mui/icons-material\";\nimport { Avatar, IconButton } from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\nimport { selectAppState } from \"../store/slices/AppSlice\";\nimport { getOneToOneChatReceiver, truncateString } from \"../utils/appUtils\";\n\nconst MsgsHeader = ({\n  closeChat,\n  openGroupInfoDialog,\n  openViewProfileDialog,\n  hideEmojiPicker,\n  CustomTooltip,\n}) => {\n  const { loggedInUser, selectedChat } = useSelector(selectAppState);\n  const chatName = selectedChat?.isGroupChat\n    ? selectedChat?.chatName\n    : getOneToOneChatReceiver(loggedInUser, selectedChat?.users)?.name;\n  return (\n    <section\n      className={`messagesHeader pointer-event d-flex justify-content-start \n            position-relative w-100 fw-bold bg-info bg-opacity-10 py-2`}\n      onClick={hideEmojiPicker}\n    >\n      <CustomTooltip title=\"Go Back\" placement=\"bottom-start\" arrow>\n        <IconButton\n          onClick={closeChat}\n          className={`d-flex d-md-none ms-3`}\n          sx={{\n            color: \"#999999\",\n            \":hover\": { backgroundColor: \"#aaaaaa20\" },\n          }}\n        >\n          <ArrowBack />\n        </IconButton>\n      </CustomTooltip>\n      <CustomTooltip\n        title={selectedChat?.isGroupChat ? \"Discussion Info\" : \"View Profile\"}\n        placement=\"bottom-start\"\n        arrow\n      >\n        <IconButton\n          sx={{\n            margin: \"-8px\",\n            \":hover\": { backgroundColor: \"#aaaaaa20\" },\n          }}\n          className=\"pointer ms-0 ms-md-4\"\n          onClick={\n            selectedChat?.isGroupChat\n              ? openGroupInfoDialog\n              : openViewProfileDialog\n          }\n        >\n          <Avatar\n            src={\n              selectedChat?.isGroupChat\n                ? selectedChat?.chatDisplayPic\n                : getOneToOneChatReceiver(loggedInUser, selectedChat?.users)\n                    ?.profilePic || \"\"\n            }\n            alt={\"receiverAvatar\"}\n          />\n        </IconButton>\n      </CustomTooltip>\n\n      <span className=\"ms-2 mt-1 fs-4 text-info\" title={chatName}>\n        {truncateString(chatName, 22, 17)}\n      </span>\n\n      <CustomTooltip title=\"Close Chat\" placement=\"bottom-end\" arrow>\n        <IconButton\n          onClick={closeChat}\n          className=\"d-none d-md-flex\"\n          sx={{\n            position: \"absolute\",\n            right: 15,\n            top: 8,\n            color: \"#999999\",\n            \":hover\": { backgroundColor: \"#aaaaaa20\" },\n          }}\n        >\n          <Close />\n        </IconButton>\n      </CustomTooltip>\n    </section>\n  );\n};\n\nexport default MsgsHeader;\n","import { useEffect, useRef, useState } from \"react\";\nimport { IconButton } from \"@mui/material\";\nimport {\n  debounce,\n  FIVE_MB,\n  getAxiosConfig,\n  isImageOrGifFile,\n  parseInnerHTML,\n  setCaretPosition,\n} from \"../utils/appUtils\";\nimport { AttachFile, EmojiEmotions, Send } from \"@mui/icons-material\";\nimport getCustomTooltip from \"./utils/CustomTooltip\";\nimport axios from \"../utils/axios\";\nimport ViewProfileBody from \"./dialogs/ViewProfileBody\";\nimport GroupInfoBody from \"./dialogs/GroupInfoBody\";\nimport LoadingMsgs from \"./utils/LoadingMsgs\";\nimport FullSizeImage from \"./utils/FullSizeImage\";\nimport Message from \"./utils/Message\";\nimport MsgOptionsMenu from \"./menus/MsgOptionsMenu\";\nimport io from \"socket.io-client\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectAppState,\n  setClientSocket,\n  setFetchMsgs,\n  setGroupInfo,\n  setLoggedInUser,\n  setSelectedChat,\n  setSocketConnected,\n  toggleRefresh,\n} from \"../store/slices/AppSlice\";\nimport {\n  selectFormfieldState,\n  setLoading,\n} from \"../store/slices/FormfieldSlice\";\nimport { displayToast } from \"../store/slices/ToastSlice\";\nimport {\n  displayDialog,\n  setShowDialogActions,\n} from \"../store/slices/CustomDialogSlice\";\nimport AttachmentPreview from \"./utils/AttachmentPreview\";\nimport WelcomeBanner from \"./WelcomeBanner\";\nimport MsgsHeader from \"./MsgsHeader\";\nimport TypingIndicator from \"./utils/TypingIndicator\";\nimport EmojiPicker from \"emoji-picker-react\";\n\nconst arrowStyles = { color: \"#111\" };\nconst tooltipStyles = {\n  maxWidth: 230,\n  color: \"#eee\",\n  fontFamily: \"Trebuchet MS\",\n  fontSize: 16,\n  padding: \"5px 10px\",\n  borderRadius: 5,\n  border: \"1px solid #555\",\n  backgroundColor: \"#111\",\n};\nconst iconStyles = {\n  margin: \"4px 0px\",\n  padding: \"5px\",\n  color: \"#999999\",\n  \":hover\": { backgroundColor: \"#aaaaaa20\" },\n};\n\nconst CustomTooltip = getCustomTooltip(arrowStyles, tooltipStyles);\nconst SOCKET_ENDPOINT = process.env.REACT_APP_SERVER_BASE_URL;\nlet msgFileAlreadyExists = false;\nlet currentlyTyping = false;\nlet preventStopTyping = true;\n\nconst MessagesView = ({\n  loadingMsgs,\n  setLoadingMsgs,\n  setDialogBody,\n  deletePersistedNotifs,\n  isNewUser,\n  typingChatUser,\n}) => {\n  const {\n    loggedInUser,\n    selectedChat,\n    fetchMsgs,\n    clientSocket,\n    isSocketConnected,\n  } = useSelector(selectAppState);\n  const { disableIfLoading } = useSelector(selectFormfieldState);\n  const dispatch = useDispatch();\n  const [sending, setSending] = useState(false);\n  const [msgFileRemoved, setMsgFileRemoved] = useState(false);\n  const [enableMsgSend, setEnableMsgSend] = useState(false);\n  const [fileAttached, setFileAttached] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [clickedMsgId, setClickedMsgId] = useState(\"\");\n  const [dontScrollToBottom, setDontScrollToBottom] = useState(false);\n  const [attachmentData, setAttachmentData] = useState({\n    attachment: \"\",\n    attachmentPreviewUrl: \"\",\n  });\n  const msgListBottom = useRef(null);\n  const msgFileInput = useRef(null);\n  const msgContent = useRef(null);\n  const editableMsgContent = useRef(null);\n  const [downloadingFileId, setDownloadingFileId] = useState(\"\");\n  const [loadingMediaId, setLoadingMediaId] = useState(\"\");\n  const [msgEditMode, setMsgEditMode] = useState(false);\n  const [msgOptionsMenuAnchor, setMsgOptionsMenuAnchor] = useState(null);\n\n  const resetMsgInput = (options) => {\n    setAttachmentData({\n      attachment: \"\",\n      attachmentPreviewUrl: \"\",\n    });\n    msgFileInput.current.value = \"\";\n    setFileAttached(false);\n    if (options?.discardAttachmentOnly) return;\n    setEnableMsgSend(false);\n    msgContent.current.innerHTML = \"\";\n  };\n\n  // Emoji picker config\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const onEmojiIconClick = () => {\n    preventStopTyping = true;\n    setShowEmojiPicker(!showEmojiPicker);\n  };\n  const hideEmojiPicker = () => {\n    if (showEmojiPicker) setShowEmojiPicker(false);\n  };\n  const onEmojiClick = (event, emojiObject) => {\n    msgContent.current.innerHTML += emojiObject.emoji;\n    setCaretPosition(msgContent.current);\n    setEnableMsgSend(true);\n  };\n\n  const selectAttachment = () => {\n    preventStopTyping = true;\n    hideEmojiPicker();\n    msgFileInput.current?.click();\n  };\n\n  const discardAttachment = () =>\n    resetMsgInput({ discardAttachmentOnly: true });\n\n  const persistUpdatedUser = (updatedUser) => {\n    // localStorage persists updated user even after page refresh\n    localStorage.setItem(\"loggedInUser\", JSON.stringify(updatedUser));\n    dispatch(setLoggedInUser(updatedUser));\n  };\n\n  const displayError = (\n    error = \"Oops! Something went wrong\",\n    title = \"Operation Failed\"\n  ) => {\n    dispatch(\n      displayToast({\n        title,\n        message: error.response?.data?.message || error.message,\n        type: \"error\",\n        duration: 5000,\n        position: \"bottom-center\",\n      })\n    );\n  };\n\n  const displaySuccess = (message = \"Operation Successful\") => {\n    dispatch(\n      displayToast({\n        message,\n        type: \"success\",\n        duration: 1500,\n        position: \"bottom-center\",\n      })\n    );\n  };\n\n  const closeChat = () => {\n    setLoadingMsgs(false);\n    dispatch(setSelectedChat(null));\n    resetMsgInput();\n    setMsgFileRemoved(false);\n    setMsgEditMode(false);\n    setDontScrollToBottom(false);\n  };\n\n  const viewMedia = (src, fileData) => {\n    if (!src || !fileData) return;\n    const { fileName, isAudio } = fileData;\n    dispatch(setShowDialogActions(false));\n    setDialogBody(\n      <FullSizeImage\n        audioSrc={isAudio ? src : null}\n        videoSrc={!isAudio ? src : null}\n      />\n    );\n    dispatch(\n      displayDialog({\n        isFullScreen: true,\n        title: fileName || `${isAudio ? \"Audio\" : \"Video\"} File`,\n      })\n    );\n    setLoadingMediaId(\"\");\n  };\n\n  const displayFullSizeImage = (e) => {\n    dispatch(setShowDialogActions(false));\n    setDialogBody(<FullSizeImage event={e} />);\n    dispatch(\n      displayDialog({\n        isFullScreen: true,\n        title: e.target?.alt || \"Display Pic\",\n      })\n    );\n  };\n\n  const loadMedia = async (fileId, options) => {\n    if (!fileId || !options) return;\n    setLoadingMediaId(fileId);\n    const { fileName, isAudio } = options;\n    const config = getAxiosConfig({ loggedInUser, blob: true });\n    try {\n      const { data } = await axios.get(`/api/message/files/${fileId}`, config);\n\n      const mediaSrc = URL.createObjectURL(new Blob([data]));\n      viewMedia(mediaSrc, { fileName, isAudio });\n    } catch (error) {\n      displayError(error, \"Couldn't Load Media\");\n      setLoadingMediaId(\"\");\n    }\n  };\n\n  const downloadFile = async (fileId) => {\n    if (!fileId) return;\n    setDownloadingFileId(fileId);\n    setSending(true);\n    const config = getAxiosConfig({ loggedInUser, blob: true });\n    try {\n      const { data } = await axios.get(`/api/message/files/${fileId}`, config);\n\n      const link = document.createElement(\"a\");\n      link.href = URL.createObjectURL(new Blob([data]));\n      link.setAttribute(\"download\", fileId.split(\"---\")[1] || fileId);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n\n      setDownloadingFileId(\"\");\n      setSending(false);\n    } catch (error) {\n      displayError(error, \"Couldn't Download File\");\n      setDownloadingFileId(\"\");\n      setSending(false);\n    }\n  };\n\n  const fetchMessages = async (options) => {\n    setLoadingMsgs(true);\n    const config = getAxiosConfig({ loggedInUser });\n    try {\n      const { data } = await axios.get(\n        `/api/message/${selectedChat?._id}`,\n        config\n      );\n      setMessages(\n        data.map((msg) => {\n          msg[\"sent\"] = true;\n          return msg;\n        })\n      );\n      setLoadingMsgs(false);\n      if (fetchMsgs) dispatch(setFetchMsgs(false));\n      if (options?.updatingMsg) displaySuccess(\"Message Updated Successfully\");\n      setSending(false);\n    } catch (error) {\n      displayError(error, \"Couldn't Fetch Messages\");\n      setLoadingMsgs(false);\n      if (fetchMsgs) dispatch(setFetchMsgs(false));\n      setSending(false);\n    }\n  };\n\n  const sendMessage = async () => {\n    preventStopTyping = false;\n    emitStopTyping();\n    hideEmojiPicker();\n    if (!attachmentData.attachment && !msgContent.current?.innerHTML) return;\n\n    const msgData = {\n      ...attachmentData,\n      content: msgContent.current?.innerHTML || \"\",\n    };\n    const isNonImageFile = !isImageOrGifFile(msgData.attachment?.name);\n\n    const newMsg = {\n      _id: Date.now(),\n      sender: {\n        _id: loggedInUser?._id,\n        profilePic: \"\",\n        name: \"\",\n        email: \"\",\n      },\n      fileUrl: msgData?.attachmentPreviewUrl,\n      file_id: \"\",\n      file_name:\n        msgData?.attachment?.name +\n        `${\n          msgData?.mediaDuration\n          ? `===${msgData.mediaDuration}`\n          : isNonImageFile\n            ? `===${msgData.attachment?.size || \"\"}`\n            : \"\"\n        }`,\n      content: msgData?.content,\n      createdAt: new Date().toISOString(),\n      sent: false,\n    };\n    setDontScrollToBottom(false);\n    setMessages([newMsg, ...messages]);\n    resetMsgInput();\n    setSending(true);\n    const config = getAxiosConfig({ loggedInUser, formData: true });\n\n    try {\n      // Upload img/gif to cloudinary, and all other files to aws s3\n      const apiUrl = isNonImageFile\n        ? `/api/message/upload-to-s3`\n        : `/api/message/`;\n\n      const formData = new FormData();\n      formData.append(\"attachment\", msgData.attachment);\n      formData.append(\"mediaDuration\", msgData?.mediaDuration);\n      formData.append(\"content\", msgData.content);\n      formData.append(\"chatId\", selectedChat?._id);\n      const { data } = await axios.post(apiUrl, formData, config);\n\n      if (isSocketConnected) clientSocket?.emit(\"new msg sent\", data);\n      fetchMessages();\n      dispatch(toggleRefresh());\n    } catch (error) {\n      displayError(error, \"Couldn't Send Message\");\n      setSending(false);\n    }\n  };\n\n  const deleteMessage = async () => {\n    dispatch(setLoading(true));\n    setSending(true);\n    const config = getAxiosConfig({ loggedInUser });\n\n    try {\n      await axios.put(\n        `/api/message/delete`,\n        { messageIds: JSON.stringify([clickedMsgId]) },\n        config\n      );\n      if (isSocketConnected) {\n        clientSocket?.emit(\"msg deleted\", {\n          deletedMsgId: clickedMsgId,\n          senderId: loggedInUser?._id,\n          chat: selectedChat,\n        });\n      }\n      displaySuccess(\"Message Deleted Successfully\");\n      setMessages(messages.filter((msg) => msg?._id !== clickedMsgId));\n      dispatch(setLoading(false));\n      dispatch(toggleRefresh());\n      setSending(false);\n      return \"msgActionDone\";\n    } catch (error) {\n      displayError(error, \"Couldn't Delete Message\");\n      dispatch(setLoading(false));\n      setSending(false);\n    }\n  };\n\n  const updateMessage = async (updatedMsgContent, msgDate) => {\n    if (\n      !(\n        attachmentData.attachment ||\n        (msgFileAlreadyExists && !msgFileRemoved)\n      ) &&\n      !parseInnerHTML(updatedMsgContent)\n    ) {\n      return dispatch(\n        displayToast({\n          message: \"A Message Must Contain Either a File or some Text Content\",\n          type: \"warning\",\n          duration: 5000,\n          position: \"top-center\",\n        })\n      );\n    }\n    setMsgEditMode(false);\n    setDontScrollToBottom(true);\n\n    const msgData = {\n      ...attachmentData,\n      content: updatedMsgContent || \"\",\n    };\n    const isNonImageFile = !isImageOrGifFile(msgData.attachment?.name);\n\n    const updatedMsg = {\n      _id: Date.now(),\n      sender: {\n        _id: loggedInUser?._id,\n        profilePic: \"\",\n        name: \"\",\n        email: \"\",\n      },\n      fileUrl: msgData?.attachmentPreviewUrl,\n      file_id: \"\",\n      file_name:\n        msgData?.attachment?.name +\n        `${ \n          msgData?.mediaDuration\n          ? `===${msgData.mediaDuration}`\n          : isNonImageFile\n            ? `===${msgData.attachment?.size || \"\"}`\n            : \"\"\n        }`,\n      content: msgData?.content,\n      createdAt: msgDate,\n      sent: false,\n    };\n    setMessages(\n      messages.map((msg) => (msg._id === clickedMsgId ? updatedMsg : msg))\n    );\n    discardAttachment();\n    setSending(true);\n    const config = getAxiosConfig({ loggedInUser, formData: true });\n\n    try {\n      // Upload img/gif to cloudinary, and all other files to aws s3\n      const apiUrl = isNonImageFile\n        ? `/api/message/update-in-s3`\n        : `/api/message/update`;\n\n      const formData = new FormData();\n      formData.append(\"attachment\", msgData.attachment);\n      formData.append(\"msgFileRemoved\", msgFileRemoved);\n      formData.append(\"mediaDuration\", msgData?.mediaDuration);\n      formData.append(\"updatedContent\", msgData.content);\n      formData.append(\"messageId\", clickedMsgId);\n      const { data } = await axios.put(apiUrl, formData, config);\n\n      if (isSocketConnected) clientSocket?.emit(\"msg updated\", data);\n      fetchMessages({ updatingMsg: true });\n      dispatch(toggleRefresh());\n      setMsgFileRemoved(false);\n    } catch (error) {\n      displayError(error, \"Couldn't Update Message\");\n      setSending(false);\n      setMsgFileRemoved(false);\n    }\n  };\n\n  const editMsgHandler = () => setMsgEditMode(true);\n\n  const setMediaDuration = (mediaUrl, msgFile) => {\n    const media = new Audio(mediaUrl);\n    media.onloadedmetadata = () => {\n      const { duration } = media;\n      const minutes = parseInt(duration / 60);\n      const seconds = parseInt(duration % 60);\n      setAttachmentData({\n        attachment: msgFile,\n        attachmentPreviewUrl: mediaUrl,\n        mediaDuration: `${minutes}:${\n          seconds < 10 ? `0${seconds}` : seconds\n          }+++${msgFile.type}`,\n      });\n      setFileAttached(true);\n    };\n  };\n\n  const handleMsgFileInputChange = (e) => {\n    const msgFile = e.target.files[0];\n    if (!msgFile) return;\n\n    if (msgFile.size >= FIVE_MB) {\n      msgFileInput.current.value = \"\";\n      return dispatch(\n        displayToast({\n          message: \"Please Select a File Smaller than 5 MB\",\n          type: \"warning\",\n          duration: 4000,\n          position: \"top-center\",\n        })\n      );\n    }\n    const fileUrl = URL.createObjectURL(msgFile);\n    if (/^(video\\/|audio\\/)/.test(msgFile.type)) {\n      setMediaDuration(fileUrl, msgFile);\n    } else {\n      setAttachmentData({\n        attachment: msgFile,\n        attachmentPreviewUrl: fileUrl,\n      });\n      setFileAttached(true);\n    }\n  };\n\n  const scrollToBottom = () => {\n    msgListBottom.current?.scrollIntoView();\n  };\n\n  // Initializing Client Socket\n  useEffect(() => {\n    dispatch(\n      setClientSocket(io(SOCKET_ENDPOINT, { transports: [\"websocket\"] }))\n    );\n  }, []);\n\n  // Socket event handlers\n  const newMsgSocketEventHandler = () => {\n    // off() prevents on() from executing multiple times\n    clientSocket\n      .off(\"new msg received\")\n      .on(\"new msg received\", (newMsg, notifications) => {\n        const { chat } = newMsg;\n        dispatch(toggleRefresh());\n        if (selectedChat && chat && selectedChat._id === chat._id) {\n          newMsg[\"sent\"] = true;\n          setMessages([newMsg, ...messages]);\n          deletePersistedNotifs([newMsg._id]);\n        } else {\n          const updatedUser = {\n            ...loggedInUser,\n            notifications: notifications?.reverse(),\n          };\n          persistUpdatedUser(updatedUser);\n        }\n      });\n  };\n\n  const deletedMsgSocketEventHandler = () => {\n    clientSocket\n      .off(\"remove deleted msg\")\n      .on(\"remove deleted msg\", (deletedMsgData) => {\n        const { deletedMsgId, chat } = deletedMsgData;\n        dispatch(toggleRefresh());\n        if (selectedChat && chat && selectedChat._id === chat._id) {\n          setMessages(messages.filter((m) => m?._id !== deletedMsgId));\n        } else {\n          // Remove notification of 'deleted msg' from global state\n          // and localStorage\n          const notifs = loggedInUser.notifications;\n          const updatedUser = {\n            ...loggedInUser,\n            notifications: notifs.filter((n) => n._id !== deletedMsgId),\n          };\n          persistUpdatedUser(updatedUser);\n        }\n      });\n  };\n\n  const updatedMsgSocketEventHandler = () => {\n    clientSocket\n      .off(\"update modified msg\")\n      .on(\"update modified msg\", (updatedMsg) => {\n        if (!updatedMsg) return;\n        const { chat } = updatedMsg;\n        dispatch(toggleRefresh());\n        if (selectedChat && chat && selectedChat._id === chat._id) {\n          updatedMsg[\"sent\"] = true;\n          updatedMsg[\"chat\"] = updatedMsg.chat?._id;\n          setTimeout(() => {\n            // Only updating msg content using 'document' method\n            // as updating 'messages' state will re-render all\n            // msgs and scroll to bottom, which may prevent the\n            // receiver to edit or view his/her msg, causing bad UX\n            if (parseInnerHTML(updatedMsg.content)) {\n              document.getElementById(`${updatedMsg._id}---content`).innerHTML =\n                updatedMsg.content;\n            }\n          }, 10);\n          // Updating 'state' is the only way to update attachment\n        }\n      });\n  };\n\n  // Listening to all socket events\n  useEffect(() => {\n    if (!clientSocket) return;\n\n    if (!isSocketConnected && clientSocket) {\n      clientSocket.emit(\"init user\", loggedInUser?._id);\n      clientSocket.on(\"user connected\", () => {\n        // console.log(\"socket connected\");\n        dispatch(setSocketConnected(true));\n      });\n    }\n    newMsgSocketEventHandler();\n    deletedMsgSocketEventHandler();\n    updatedMsgSocketEventHandler();\n  });\n\n  // Discard msg update draft\n  const discardMsgDraft = () => {\n    discardAttachment();\n    setMsgEditMode(false);\n    setSending(true);\n    setMessages([]);\n    // To execute after the entire code is run\n    setTimeout(() => {\n      setMessages(messages);\n      setSending(false);\n      // To execute after all the messages have been mapped\n      setTimeout(() => {\n        document.getElementById(clickedMsgId)?.scrollIntoView();\n      }, 10);\n    }, 0);\n    setMsgFileRemoved(false);\n    return \"msgActionDone\";\n  };\n\n  // Open discard draft confirm dialog\n  const openDiscardDraftConfirmDialog = () => {\n    dispatch(setShowDialogActions(true));\n    setDialogBody(<>Are you sure you want to discard this draft?</>);\n    dispatch(\n      displayDialog({\n        title: \"Discard Draft\",\n        nolabel: \"NO\",\n        yeslabel: \"YES\",\n        loadingYeslabel: \"Discarding...\",\n        action: discardMsgDraft,\n      })\n    );\n  };\n\n  // Message input handlers\n  const emitTyping = () => {\n    if (isSocketConnected && !currentlyTyping) {\n      clientSocket?.emit(\"typing\", selectedChat, loggedInUser);\n      currentlyTyping = true;\n    }\n  };\n\n  const emitStopTyping = () => {\n    if (isSocketConnected && currentlyTyping) {\n      clientSocket?.emit(\"stop typing\", selectedChat, loggedInUser);\n      currentlyTyping = false;\n    }\n  };\n\n  const onInputFocus = () => {\n    preventStopTyping = false;\n  };\n\n  const onInputBlur = () => {\n    setTimeout(() => {\n      if (!preventStopTyping) emitStopTyping();\n    }, 1000);\n  };\n\n  const msgInputHandler = debounce((e) => {\n    const isNonEmptyInput = Boolean(parseInnerHTML(e.target.innerHTML));\n    setEnableMsgSend(isNonEmptyInput);\n    if (!isNonEmptyInput) emitStopTyping();\n    if (isNonEmptyInput) emitTyping();\n  }, 500);\n\n  const msgKeydownHandler = (e) => {\n    hideEmojiPicker();\n    if (\n      e.key === \"Enter\" &&\n      !e.shiftKey &&\n      (enableMsgSend || fileAttached || msgEditMode)\n    ) {\n      e.preventDefault();\n      if (msgEditMode) {\n        const msgDate =\n          e.target.dataset.msgCreatedAt ||\n          e.target.parentNode.dataset.msgCreatedAt;\n        updateMessage(editableMsgContent?.current?.innerHTML, msgDate);\n      } else {\n        sendMessage();\n      }\n    }\n  };\n\n  // Msgs click handler ('Event Delegation' applied here)\n  const msgsClickHandler = (e) => {\n    const { dataset } = e.target;\n    const parentDataset = e.target.parentNode.dataset;\n    const senderData = (dataset.sender || parentDataset.sender)?.split(\"===\");\n    const msgId = dataset.msg || parentDataset.msg;\n    const videoId = dataset.video || parentDataset.video;\n    const audioId = dataset.audio || parentDataset.audio;\n    const fileId = dataset.download || parentDataset.download;\n    const updateEditedMsg = dataset.updateMsg || parentDataset.updateMsg;\n    const attachMsgFileClicked =\n      dataset.attachMsgFile || parentDataset.attachMsgFile;\n    const removeMsgFileClicked =\n      dataset.removeMsgFile || parentDataset.removeMsgFile;\n    const editMsgFileClicked = dataset.editMsgFile || parentDataset.editMsgFile;\n    const discardDraftClicked =\n      dataset.discardDraft || parentDataset.discardDraft;\n\n    hideEmojiPicker();\n    if (fileId) {\n      downloadFile(fileId);\n    } else if (videoId) {\n      // Load video\n      loadMedia(videoId, {\n        fileName: dataset.videoName || parentDataset.videoName,\n        isAudio: false,\n      });\n    } else if (audioId) {\n      // Load audio\n      loadMedia(audioId, {\n        fileName: dataset.audioName || parentDataset.audioName,\n        isAudio: true,\n      });\n    } else if (dataset.imageId) {\n      displayFullSizeImage(e);\n    } else if (senderData?.length) {\n      // Open view profile dialog\n      const props = {\n        memberProfilePic: senderData[0],\n        memberName: senderData[1],\n        memberEmail: senderData[2],\n      };\n      openViewProfileDialog(props);\n    } else if (msgId && !msgEditMode) {\n      msgFileAlreadyExists = Boolean(\n        dataset.fileExists || parentDataset.fileExists\n      );\n      setClickedMsgId(msgId);\n      openMsgOptionsMenu(e);\n    } else if (attachMsgFileClicked || editMsgFileClicked) {\n      selectAttachment();\n    } else if (removeMsgFileClicked) {\n      setMsgFileRemoved(true);\n      discardAttachment();\n    } else if (discardDraftClicked) {\n      openDiscardDraftConfirmDialog();\n    } else if (updateEditedMsg) {\n      const msgDate = dataset.msgCreatedAt || parentDataset.msgCreatedAt;\n      updateMessage(editableMsgContent?.current?.innerHTML, msgDate);\n    }\n  };\n\n  useEffect(() => {\n    if (!dontScrollToBottom) scrollToBottom();\n  }, [messages]);\n\n  useEffect(() => {\n    if (fetchMsgs) {\n      fetchMessages();\n      if (isSocketConnected) clientSocket?.emit(\"join chat\", selectedChat?._id);\n    }\n  }, [fetchMsgs]);\n\n  const openViewProfileDialog = (props) => {\n    dispatch(setShowDialogActions(false));\n    setDialogBody(props ? <ViewProfileBody {...props} /> : <ViewProfileBody />);\n    dispatch(displayDialog({ title: \"View Profile\" }));\n  };\n\n  const openGroupInfoDialog = () => {\n    // Open group info dialog\n    dispatch(setGroupInfo(selectedChat));\n    dispatch(setShowDialogActions(false));\n    setDialogBody(<GroupInfoBody messages={messages} />);\n    dispatch(displayDialog({ title: \"Discussion Info\" }));\n  };\n\n  // Open delete msg confirm dialog\n  const openDeleteMsgConfirmDialog = () => {\n    dispatch(setShowDialogActions(true));\n    setDialogBody(<>Are you sure you want to delete this message?</>);\n    dispatch(\n      displayDialog({\n        title: \"Delete Message\",\n        nolabel: \"NO\",\n        yeslabel: \"YES\",\n        loadingYeslabel: \"Deleting...\",\n        action: deleteMessage,\n      })\n    );\n  };\n\n  useEffect(() => {\n    if (msgContent?.current) msgContent.current.innerHTML = \"\";\n  }, [selectedChat]);\n\n  const openMsgOptionsMenu = (e) => {\n    if (sending) return;\n    setMsgOptionsMenuAnchor(e.target);\n  };\n\n  return (\n    <div\n      className={`chatpageDiv chatpageView messagesView col text-light mx-0 mx-md-1 ${\n        selectedChat ? \"d-flex\" : \"d-none d-md-flex\"\n        } flex-column p-2 user-select-none`}\n    >\n      {selectedChat ? (\n        <>\n          <MsgsHeader\n            closeChat={closeChat}\n            openGroupInfoDialog={openGroupInfoDialog}\n            openViewProfileDialog={openViewProfileDialog}\n            hideEmojiPicker={hideEmojiPicker}\n            CustomTooltip={CustomTooltip}\n          />\n          <section\n            className={`messagesBody position-relative ${\n              downloadingFileId || loadingMediaId ? \"pe-none\" : \"pe-auto\"\n              } d-flex flex-column m-1 p-2`}\n            onClick={(e) => {\n              const { dataset } = e.target;\n              const parentDataset = e.target.parentNode.dataset;\n              const discardFileClicked =\n                dataset.discardFile || parentDataset.discardFile;\n              if (discardFileClicked) discardAttachment();\n            }}\n          >\n            {/* Messages list */}\n            <div className=\"messages rounded-3 d-flex flex-column\">\n              <div\n                // Event delegation\n                onClick={msgsClickHandler}\n                onKeyDown={msgKeydownHandler}\n                className={`msgArea overflow-auto ${\n                  fileAttached && !msgEditMode ? \"d-none\" : \"d-flex\"\n                  } flex-column-reverse`}\n              >\n                <div className=\"msgListBottom\" ref={msgListBottom}></div>\n                {loadingMsgs && !sending ? (\n                  <LoadingMsgs count={8} />\n                ) : (\n                  messages.map((m, i, msgs) => (\n                    <Message\n                      downloadingFileId={downloadingFileId}\n                      loadingMediaId={loadingMediaId}\n                      msgEditMode={msgEditMode}\n                      clickedMsgId={clickedMsgId}\n                      msgFileRemoved={msgFileRemoved}\n                      attachmentData={attachmentData}\n                      ref={editableMsgContent}\n                      CustomTooltip={CustomTooltip}\n                      key={m._id}\n                      msgSent={m.sent}\n                      currMsg={m}\n                      prevMsg={i < msgs.length - 1 ? msgs[i + 1] : null}\n                    />\n                  ))\n                )}\n              </div>\n            </div>\n            {/* Edit/Delete Message menu */}\n            <MsgOptionsMenu\n              anchor={msgOptionsMenuAnchor}\n              setAnchor={setMsgOptionsMenuAnchor}\n              clickedMsg={clickedMsgId}\n              editMsgHandler={editMsgHandler}\n              openDeleteMsgConfirmDialog={openDeleteMsgConfirmDialog}\n            />\n            {fileAttached && !msgEditMode && (\n              <AttachmentPreview\n                attachmentData={attachmentData}\n                discardAttachment={discardAttachment}\n                CustomTooltip={CustomTooltip}\n              />\n            )}\n            {/* Typing indicator */}\n            <span className={`${typingChatUser ? \"d-inline-block\" : \"d-none\"}`}>\n              <TypingIndicator\n                typingChatUser={typingChatUser}\n                showAvatar={true}\n              />\n            </span>\n            {/* New Message Input */}\n            <div\n              className={`msgInputDiv d-flex position-absolute ${\n                msgEditMode || sending ? \"pe-none\" : \"pe-auto\"\n                }`}\n            >\n              <span\n                className={`d-flex attachFile ${disableIfLoading} pointer bg-dark`}\n              >\n                <IconButton\n                  onClick={onEmojiIconClick}\n                  className={`d-flex ms-2 me-1 my-1`}\n                  sx={iconStyles}\n                >\n                  <EmojiEmotions style={{ fontSize: 28 }} />\n                </IconButton>\n                <CustomTooltip title=\"Attach File\" placement=\"top-start\" arrow>\n                  <IconButton\n                    onClick={selectAttachment}\n                    className={`d-flex my-2`}\n                    sx={{ ...iconStyles, transform: \"rotateZ(45deg)\" }}\n                  >\n                    <AttachFile style={{ fontSize: 22 }} />\n                  </IconButton>\n                </CustomTooltip>\n                {/* Emoji Picker */}\n                {showEmojiPicker && (\n                  <span className=\"emojiPicker position-absolute start-0\">\n                    <EmojiPicker\n                      onEmojiClick={onEmojiClick}\n                      disableAutoFocus={true}\n                      native={true}\n                      searchPlaceholder={\"Search an emoji...\"}\n                    />\n                  </span>\n                )}\n                {/* Attachment File input */}\n                <input\n                  type=\"file\"\n                  accept=\"*\"\n                  onChange={handleMsgFileInputChange}\n                  name=\"attachment\"\n                  id=\"attachMsgFile\"\n                  ref={msgFileInput}\n                  className={`d-none`}\n                  disabled={loadingMsgs}\n                />\n              </span>\n              {/* Content/text input */}\n              <div\n                onFocus={onInputFocus}\n                onBlur={onInputBlur}\n                onInput={msgInputHandler}\n                onKeyDown={msgKeydownHandler}\n                onClick={hideEmojiPicker}\n                ref={msgContent}\n                className={`msgInput ${\n                  fileAttached && !msgEditMode ? \"addCaption\" : \"\"\n                  } w-100 text-start d-flex bg-dark px-2 justify-content-start`}\n                contentEditable={true}\n                style={{\n                  borderRadius:\n                    enableMsgSend || (fileAttached && !msgEditMode)\n                      ? \"0px\"\n                      : \"0px 7px 7px 0px\",\n                }}\n              ></div>\n              {/* Send button */}\n              {enableMsgSend || (fileAttached && !msgEditMode) ? (\n                <span\n                  className={`d-inline-block btn btn-dark btn-sm sendButton ${disableIfLoading} pointer`}\n                  onClick={sendMessage}\n                >\n                  <IconButton\n                    className={`d-flex my-1 mx-0 mx-md-0`}\n                    sx={{ margin: \"4px 0px\", padding: \"5px\", color: \"#999999\" }}\n                  >\n                    <Send style={{ fontSize: 20 }} />\n                  </IconButton>\n                </span>\n              ) : (\n                <></>\n              )}\n            </div>\n          </section>\n        </>\n      ) : (\n        <WelcomeBanner isNewUser={isNewUser} />\n      )}\n    </div>\n  );\n};\n\nexport default MessagesView;\n","import { useEffect, useState } from \"react\";\nimport { NavigateFunction, useNavigate } from \"react-router-dom\";\nimport ChatpageHeader from \"../components/ChatpageHeader\";\nimport CustomDialog from \"../components/utils/CustomDialog\";\nimport ChatListView from \"../components/ChatListView\";\nimport MessagesView from \"../components/MessagesView\";\nimport { displayToast } from \"../store/slices/ToastSlice\";\nimport {\n  selectAppState,\n  setDeleteNotifsOfChat,\n  setGroupInfo,\n  setLoggedInUser,\n  setSelectedChat,\n  toggleRefresh,\n} from \"../store/slices/AppSlice\";\nimport {\n  hideDialog,\n  selectCustomDialogState,\n} from \"../store/slices/CustomDialogSlice\";\nimport { getAxiosConfig, truncateString } from \"../utils/appUtils\";\nimport axios from \"../utils/axios\";\nimport { useAppDispatch, useAppSelector } from \"../store/storeHooks\";\nimport {\n  ChatType,\n  GroupInfo,\n  MessageType,\n  ToastData,\n  UserType,\n} from \"../utils/AppTypes\";\nimport { AxiosRequestConfig } from \"axios\";\n\nconst ChatsPage = () => {\n  const {\n    loggedInUser,\n    deleteNotifsOfChat,\n    clientSocket,\n    selectedChat,\n    isSocketConnected,\n  } = useAppSelector(selectAppState);\n  const { dialogData, showDialogActions } = useAppSelector(\n    selectCustomDialogState\n  );\n  const dispatch = useAppDispatch();\n  const navigate: NavigateFunction = useNavigate();\n  const [loadingMsgs, setLoadingMsgs] = useState(false);\n  const [dialogBody, setDialogBody] = useState(<></>);\n  const [chats, setChats] = useState([] as ChatType[]);\n  const [typingChatUsers, setTypingChatUsers] = useState([] as string[]);\n\n  useEffect(() => {\n    // localStorage persists data even after page refresh, unlike state\n    const user = JSON.parse(localStorage.getItem(\"loggedInUser\") as string);\n    if (!user) {\n      navigate(\"/\");\n      return;\n    }\n\n    if (Date.now() >= parseInt(user.expiryTime)) {\n      navigate(\"/\");\n      dispatch(\n        displayToast({\n          title: \"Session Expired\",\n          message: \"Please Login Again\",\n          type: \"info\",\n          duration: 4000,\n          position: \"bottom-center\",\n        } as ToastData)\n      );\n      return;\n    }\n\n    dispatch(setLoggedInUser(user));\n    dispatch(hideDialog());\n    dispatch(setSelectedChat(null));\n  }, []);\n\n  const getTypingUserName = (typingUser: UserType) =>\n    truncateString(typingUser?.name?.toString().split(\" \")[0], 12, 9) || \" \";\n\n  const getTypingChatId = (chatUser: string) =>\n    chatUser?.toString().split(\"---\")[0];\n\n  const displayInfo = (message = \"Operation Executed\") => {\n    dispatch(\n      displayToast({\n        message,\n        type: \"info\",\n        duration: 5000,\n        position: \"bottom-center\",\n      } as ToastData)\n    );\n  };\n\n  const groupSocketEventHandlers = () => {\n    clientSocket\n      .off(\"display updated grp\")\n      .on(\n        \"display updated grp\",\n        (updatedGroupData: {\n          updatedGroup: ChatType;\n          createdAdmin: UserType;\n          dismissedAdmin: UserType;\n        }) => {\n          const { updatedGroup, createdAdmin, dismissedAdmin } =\n            updatedGroupData;\n          dispatch(toggleRefresh());\n          if (!updatedGroup) return;\n          const { _id, chatName, removedUser } = updatedGroup;\n          const isLoggedInUserRemoved = removedUser?._id === loggedInUser?._id;\n          const isGroupInfoDialogOpen =\n            dialogData.isOpen && dialogData.title === \"Group Info\";\n\n          if (selectedChat?._id === _id) {\n            let groupData = updatedGroup as ChatType;\n            if (isLoggedInUserRemoved) {\n              dispatch(hideDialog());\n              groupData = null;\n            }\n            dispatch(setSelectedChat(groupData));\n            dispatch(setGroupInfo(groupData as GroupInfo));\n            if (\n              isGroupInfoDialogOpen &&\n              createdAdmin?._id === loggedInUser?._id\n            ) {\n              displayInfo(`You are now an Admin of '${chatName}' group`);\n            }\n            if (\n              isGroupInfoDialogOpen &&\n              dismissedAdmin?._id === loggedInUser?._id\n            ) {\n              displayInfo(`You are no longer an Admin of '${chatName}' group`);\n            }\n          }\n          if (isLoggedInUserRemoved) {\n            displayInfo(`You have been removed from '${chatName}' group`);\n          }\n        }\n      );\n\n    clientSocket\n      .off(\"remove deleted grp\")\n      .on(\"remove deleted grp\", (deletedGroup: ChatType) => {\n        dispatch(toggleRefresh());\n        if (!deletedGroup) return;\n        if (selectedChat?._id === deletedGroup?._id) {\n          dispatch(hideDialog());\n          dispatch(setSelectedChat(null));\n          dispatch(setGroupInfo(null));\n        }\n        displayInfo(`'${deletedGroup.chatName}' Group Deleted by Admin`);\n      });\n\n    clientSocket.off(\"display new grp\").on(\"display new grp\", () => {\n      dispatch(toggleRefresh());\n    });\n  };\n\n  const typingSocketEventHandler = () => {\n    clientSocket\n      .off(\"display typing\")\n      .on(\"display typing\", (chat: ChatType, typingUser: UserType) => {\n        if (!chat || !typingUser) return;\n        setTypingChatUsers([\n          ...typingChatUsers,\n          `${chat._id}---${getTypingUserName(typingUser)}---${\n            typingUser.profilePic\n          }---${chat.isGroupChat}`,\n        ]);\n      });\n\n    clientSocket\n      .off(\"hide typing\")\n      .on(\"hide typing\", (chat: ChatType, typingUser: UserType) => {\n        if (!chat || !typingUser) return;\n        setTypingChatUsers(\n          typingChatUsers.filter(\n            (chatUser) =>\n              chatUser !==\n              `${chat._id}---${getTypingUserName(typingUser)}---${\n                typingUser.profilePic\n              }---${chat.isGroupChat}`\n          )\n        );\n      });\n  };\n\n  // Listening to socket events\n  useEffect(() => {\n    if (!clientSocket || !isSocketConnected) return;\n    groupSocketEventHandlers();\n    typingSocketEventHandler();\n  });\n\n  const deletePersistedNotifs = async (notifsToBeDeleted: string[]) => {\n    const config = getAxiosConfig({ loggedInUser });\n    try {\n      await axios.put(\n        `/api/user/delete/notifications`,\n        { notificationIds: JSON.stringify(notifsToBeDeleted) },\n        config as AxiosRequestConfig\n      );\n    } catch (error) {\n      console.log(\"Couldn't Delete Notifications : \", (error as Error).message);\n    }\n  };\n\n  const deleteNotifications = (clickedChatId: string) => {\n    // Delete notifs from global state and localStorage\n    const notifs = [...(loggedInUser?.notifications as MessageType[])];\n    const notifsToBeDeleted = [];\n    if (!notifs) return;\n    for (let i = 0; i < notifs.length; ++i) {\n      if ((notifs[i]?.chat as ChatType)?._id === clickedChatId) {\n        const deletedNotif = notifs.splice(i, 1)[0];\n        notifsToBeDeleted.push(deletedNotif?._id);\n        // After deleting element at 'i', next element (i+1) shifts back\n        // to 'i' index\n        --i;\n      }\n    }\n    const updatedUser = { ...loggedInUser, notifications: notifs };\n    localStorage.setItem(\"loggedInUser\", JSON.stringify(updatedUser));\n    dispatch(setLoggedInUser(updatedUser as UserType));\n\n    // Delete notifs that were persisted in mongodb\n    deletePersistedNotifs(notifsToBeDeleted as string[]);\n    dispatch(setDeleteNotifsOfChat(\"\"));\n  };\n\n  useEffect(() => {\n    if (!deleteNotifsOfChat) return;\n    deleteNotifications(deleteNotifsOfChat);\n  }, [deleteNotifsOfChat]);\n\n  return (\n    <>\n      {loggedInUser && (\n        <div className={`chatpage`}>\n          {/* Header component */}\n          <ChatpageHeader chats={chats} setDialogBody={setDialogBody} />\n\n          <section className={`row g-1`}>\n            {/* Chat List component */}\n            <ChatListView\n              chats={chats}\n              setChats={setChats}\n              loadingMsgs={loadingMsgs}\n              setDialogBody={setDialogBody}\n              typingChatUsers={typingChatUsers}\n            />\n\n            {/* Chat Messages component */}\n            <MessagesView\n              loadingMsgs={loadingMsgs}\n              setLoadingMsgs={setLoadingMsgs}\n              setDialogBody={setDialogBody}\n              deletePersistedNotifs={deletePersistedNotifs}\n              isNewUser={chats?.length === 0}\n              typingChatUser={typingChatUsers.find(\n                (u) => getTypingChatId(u) === selectedChat?._id\n              )}\n            />\n          </section>\n\n          {/* App Parent Dialog */}\n          <CustomDialog\n            dialogData={dialogData}\n            showDialogActions={showDialogActions}\n            showDialogClose={true}\n          >\n            {dialogBody}\n          </CustomDialog>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ChatsPage;\n","import { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { TypedUseSelectorHook } from \"react-redux\";\nimport type { AppDispatch, RootState } from \"./store\";\n\n// Exporting reusable typed versions of 'useSelector' and 'useDispatch' hooks\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\nexport const useAppDispatch: () => AppDispatch = useDispatch;","import {\n  AxiosConfig,\n  AxiosOptions,\n  ChatType,\n  falsyType,\n  UserType,\n} from \"./AppTypes\";\n\n// Convert a normal function to a 'debounced' function\nexport const debounce = function (\n  func: Function,\n  delay: number = 500,\n  context: any\n) {\n  let timer: NodeJS.Timeout;\n  return (...args: any[]) => {\n    if (timer) clearTimeout(timer);\n    timer = setTimeout(() => {\n      func.apply(context, args);\n    }, delay);\n  };\n};\n\n// Optimization method to cache and retrieve the results\n// of pure functions, instead of recalculating again\nexport const memoize = function (func: Function) {\n  // Each memoized fn has its own separate cache\n  const cachedResults: any = {};\n\n  return (...args: any[]) => {\n    // To generate a unique key for each input args array\n    const argsKey = JSON.stringify(args);\n    // console.log(\n    //   cachedResults[argsKey] ? \"Retrieving from cache...\" : \"Calculating...\"\n    // );\n\n    // Retrieve result from cache if present, else calculate\n    const result: any = cachedResults[argsKey] || func(...args);\n\n    // If result isn't saved in cache, save it for later use\n    if (!cachedResults[argsKey]) cachedResults[argsKey] = result;\n\n    return result;\n  };\n};\n\n// Truncate a sentence/string\nexport const truncateString = memoize(\n  (\n    str: string | falsyType,\n    limit: number | falsyType,\n    index: number | falsyType\n  ) => {\n    if (!str || !limit || !index) return \"\";\n    return str.length > limit ? `${str.substring(0, index)}...` : str;\n  }\n);\n\n// Truncate each word of a sentence/string\nexport const truncateWords = (\n  sentence: string | falsyType,\n  limit: number | falsyType,\n  index: number | falsyType\n) => {\n  if (!sentence || !limit || !index) return \"\";\n  const words = sentence.split(\" \");\n  return words\n    .map((word) =>\n      word.length > limit ? `${word.substring(0, index)}...` : word\n    )\n    .join(\" \");\n};\n\nexport const getOneToOneChatReceiver = memoize(\n  (loggedInUser: UserType, chatUsers: UserType[]) => {\n    if (!chatUsers?.length || !loggedInUser) return;\n    return loggedInUser._id !== chatUsers[0]?._id ? chatUsers[0] : chatUsers[1];\n  }\n);\n\nexport const msgTimeStringOf = memoize((msgDate: Date | falsyType) => {\n  if (!msgDate) return \"\";\n  let hours = msgDate.getHours();\n  let minutes = msgDate.getMinutes();\n  const am_or_pm = hours >= 12 ? \" pm\" : \" am\";\n  hours = hours === 0 ? 12 : hours > 12 ? hours - 12 : hours;\n  return `${hours}:${minutes < 10 ? \"0\" : \"\"}${minutes}${am_or_pm}`;\n});\n\nexport const dateStringOf = memoize((date: Date | falsyType) => {\n  return date\n    ? `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`\n    : \"\";\n});\n\n// Impure function, so can't memoize\nexport const msgDateStringOf = (currDate: Date | falsyType) => {\n  if (!currDate) return \"\";\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n  const today = new Date();\n  const yesterday = new Date(\n    today.setTime(today.getTime() - 24 * 60 * 60 * 1000)\n  );\n\n  return dateStringOf(currDate) === dateStringOf(new Date())\n    ? \"Today\"\n    : dateStringOf(currDate) === dateStringOf(yesterday)\n    ? \"Yesterday\"\n    : `${currDate.getDate()} ${\n        months[currDate.getMonth()]\n      } ${currDate.getFullYear()}`;\n};\n\nexport const parseInnerHTML = (innerHTML: string | falsyType) => {\n  return (\n    innerHTML\n      ?.replaceAll(\"<br>\", \"\")\n      .replaceAll(\"&nbsp;\", \" \")\n      .replaceAll(\"<div>\", \"\")\n      .replaceAll(\"</div>\", \"\")\n      .trim() || \"\"\n  );\n};\n\nexport const setCaretPosition = (node: HTMLElement) => {\n  node?.focus();\n  const lastTextNode: ChildNode | null = node?.lastChild;\n  if (!lastTextNode) return;\n  console.log(\"lastTextNode\", lastTextNode);\n  const caret = lastTextNode.textContent?.length || 0;\n  const range = document.createRange();\n  range.setStart(lastTextNode, caret);\n  range.setEnd(lastTextNode, caret);\n  const sel: Selection | null = window.getSelection();\n  sel?.removeAllRanges();\n  sel?.addRange(range);\n};\n\nexport const getAxiosConfig = (options: AxiosOptions | falsyType) => {\n  if (!options) return;\n  const { loggedInUser, formData, blob } = options;\n  const config: AxiosConfig = {\n    headers: {\n      \"Content-Type\": formData ? \"multipart/form-data\" : \"application/json\",\n    },\n  };\n  if (blob) config.responseType = \"blob\";\n  if (loggedInUser)\n    config.headers.Authorization = `Bearer ${loggedInUser.token}`;\n\n  return config;\n};\n\n// In bytes\nexport const ONE_KB = 1024;\nexport const ONE_MB = 1048576;\nexport const TWO_MB = 2097152;\nexport const FIVE_MB = 5242880;\n\nexport const getFileSizeString = memoize((fileSize: number | falsyType) => {\n  return !fileSize\n    ? \"\"\n    : fileSize > ONE_MB\n    ? (fileSize / ONE_MB).toFixed(1) + \" MB\"\n    : fileSize > ONE_KB\n    ? (fileSize / ONE_KB).toFixed(0) + \" KB\"\n    : fileSize + \" B\";\n});\n\nexport const isImageFile = memoize((filename: string) =>\n  /(\\.png|\\.jpg|\\.jpeg|\\.svg|\\.webp)$/.test(filename)\n);\n\nexport const isImageOrGifFile = memoize((filename: string) =>\n  /(\\.png|\\.jpg|\\.jpeg|\\.svg|\\.gif|\\.webp)$/.test(filename)\n);\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: process.env.REACT_APP_SERVER_BASE_URL,\n});\n"],"names":["disableIfLoading","showPassword","setShowPassword","className","onClick","menuPaperProps","elevation","sx","overflow","maxHeight","filter","borderRadius","backgroundColor","mt","menuItemProps","color","fontSize","menuIconProps","children","menuAnchor","setMenuAnchor","transformOrigin","anchorOrigin","isMenuOpen","Boolean","closeMenu","anchorEl","open","onClose","PaperProps","style","marginBottom","chats","anchor","setAnchor","loggedInUser","useSelector","selectAppState","dispatch","useDispatch","notifs","notifications","notifGroups","forEach","notif","notifChat","chat","chatId","_id","chatName","isGroupChat","getOneToOneChatReceiver","users","name","notifGroupId","vertical","horizontal","Object","keys","length","e","chatNotifId","target","dataset","notifGroup","parentNode","split","chatToBeOpened","find","setSelectedChat","setFetchMsgs","setDeleteNotifsOfChat","setGroupInfo","map","fromGroup","includes","notifCount","MenuItem","title","truncateString","getUpdatedState","selectFormfieldState","loading","formLabelClassName","formFieldClassName","inputFieldClassName","useState","currentPassword","newPassword","confirmNewPassword","changePasswordData","setChangePasswordData","handleChangeFor","prop","value","useEffect","onEnterKeyDown","key","submitUpdatedPassword","htmlFor","type","onChange","onKeyDown","required","autoFocus","id","disabled","placeholder","PasswordVisibilityToggle","originalName","getUpdatedName","setName","width","submitUpdatedName","selectProfilePic","openDeletePhotoConfirmDialog","deletePhotoCondition","ListItemIcon","Upload","Delete","arrowStyles","tooltipStyles","styled","placement","arrow","Tooltip","classes","popper","theme","tooltipClasses","btnHoverStyle","btnCustomStyle","fontFamily","dialogData","showDialogActions","showDialogClose","closeDialog","useAppSelector","useAppDispatch","navigate","useNavigate","isFullScreen","isOpen","nolabel","yeslabel","loadingYeslabel","action","handleDialogClose","hideDialog","handleYes","result","Dialog","fullScreen","backgroundImage","DialogTitle","fontWeight","marginTop","marginRight","IconButton","position","right","top","Close","DialogContent","DialogActions","Button","KeyboardDoubleArrowLeft","margin","CircularProgress","size","KeyboardDoubleArrowRight","marginLeft","showChildDialogActions","showChildDialogClose","childDialogData","setChildDialogData","childDialogBody","setChildDialogBody","displayChildDialog","options","closeChildDialog","data","setChildDialogMethods","CustomTooltip","getCustomTooltip","maxWidth","padding","border","childDialogMethods","selectChildDialogState","profilePicUrl","profilePic","email","profileData","setProfileData","editProfilePicMenuAnchor","setEditProfilePicMenuAnchor","editedName","displayWarning","message","duration","displayToast","displayError","error","response","displaySuccess","uploading","setUploading","imgInput","useRef","isGuestUser","persistUpdatedUser","updatedUser","localStorage","setItem","JSON","stringify","setLoggedInUser","clickOnKeydown","click","handleImgInputChange","image","files","isImageFile","TWO_MB","current","setLoading","config","getAxiosConfig","formData","FormData","append","cloudinary_id","axios","token","expiryTime","deleteProfilePic","currentProfilePic","updatedValue","updateProfileName","enterKeyPressed","newUserName","src","alt","tabIndex","Edit","endsWith","accept","ref","wordWrap","truncateWords","editPasswordData","setDialogBody","updatedState","updatePassword","removeItem","logout","setShowDialogActions","displayDialog","Person","ManageAccounts","Key","Logout","user","truncateValues","max","index","Avatar","listOf","dpRadius","count","skeletonStyle","Array","i","Skeleton","variant","height","forwardRef","props","inputRef","searchHandler","clearInput","typing","setTyping","Search","trim","replace","cursor","focus","Clear","isDrawerOpen","setIsDrawerOpen","searchQuery","setSearchQuery","searchResults","setSearchResults","searchUserInput","handleClose","searchUsers","debounce","query","createOrRetrieveChat","userId","Drawer","borderTopRightRadius","borderBottomRightRadius","transitionDuration","ChevronLeft","overflowY","overflowX","animateNotif","setAnimateNotif","notificationsMenuAnchor","setNotificationsMenuAnchor","profileSettingsMenuAnchor","setProfileSettingsMenuAnchor","timeout","setTimeout","clearTimeout","Notifications","groupInfo","refresh","clientSocket","isSocketConnected","chatDisplayPicUrl","editGroupDpMenuAnchor","setEditGroupDpMenuAnchor","createGroupChat","chatDisplayPic","emit","admin","newGroup","toggleRefresh","preventDefault","process","URL","createObjectURL","getAddedMembers","forCreateGroup","groupData","setGroupData","fetching","setFetching","groupMembers","isMemberSelected","setIsMemberSelected","addedMembers","setAddedMembers","setShowDialogClose","openNewGroupDialog","setDialogAction","membersNotAdded","addedMember","m","flex","Chip","avatar","label","onDelete","u","unselectUser","selectedUser","typingChatUser","showAvatar","typingGif","typingUserData","toString","typingUserName","LottieAnimation","bottom","animationData","typingAnimData","lastMsgFileType","chatNotifCount","selectedChat","receiverEmail","lastMessage","tooltipTitle","lastMsgContent","content","replaceAll","lastMsgDate","Date","createdAt","lastMsgDateString","msgDateStringOf","lastMsgFileUrl","fileUrl","fileContents","file_name","lastMsgFileName","lastMsgData","fileType","test","startsWith","msgTimeStringOf","dateStringOf","sender","DoneAll","Image","GifBox","VideoFile","AudioFile","PictureAsPdf","Description","FILE_STYLES","event","audioSrc","videoSrc","autoPlay","controls","objectFit","iconWrapperStyles","labelTab","GroupAdd","labelIndex","TabPanel","other","role","hidden","Box","p","Typography","a11yProps","setChats","loadingMsgs","typingChatUsers","useTheme","valueTab","setValueTab","filteredChats","setFilteredChats","searchChatInput","openCreateGroupChatDialog","displayFullSizeImage","fetchChats","mappedChats","receiver","undefined","searchChats","chatNameInput","toLowerCase","AppBar","Tabs","newValue","indicatorColor","textColor","Tab","axis","direction","onChangeIndex","dir","parentDataset","clickedChatId","hasNotifs","clickedChat","memberProfilePic","memberName","memberEmail","isLoggedInUser","isGroupAdmin","KeyboardArrowDown","clickedMember","isLoggedInUserGroupAdmin","groupAdmins","some","clickedMemberName","styledMemberName","updateView","openChat","makeGroupAdmin","updater","updatedGroup","createdAdmin","dismissAsAdmin","dismissedAdmin","removeFromGroup","userToBeRemoved","Message","InfoOutlined","AdminPanelSettings","GroupRemove","filteredMembersCache","admins","setClickedMember","memberOptionsMenuAnchor","setMemberOptionsMenuAnchor","member","every","setFilteredMembers","filterMemberInput","filteredMembers","filterMembers","memberNameInput","openMemberOptionsMenu","messages","deleteNotifications","groupDP","groupName","isUserGroupAdmin","btnClassName","updatedName","updateGroupName","enterKeyClicked","updateGroupDp","deleteGroupDp","currentDP","exitGroup","deleteGroup","deleteGroupPromise","deleteMessagesPromise","messageIds","isDeleteGroupRequest","Promise","resolve","all","deletedGroup","updatedMembers","addMembersToGroup","usersToBeAdded","lineHeight","PersonAdd","msgSent","isEditMode","fileEditIcons","downloadingFileId","loadingMediaId","isPreview","fileData","previewStyles","iconStyles","file_id","isMediaFile","mediaContents","mediaFileType","mediaFileSize","getFileSizeString","loadingGif","fileSize","parseInt","isDownloadingFile","substring","lastIndexOf","toUpperCase","attachmentHeader","zIndex","Downloading","Download","fileNameWrapper","fileInfo","hideWhileLoadingMedia","displayWhileLoadingMedia","isImageOrGifFile","PlayCircle","Videocam","PlayArrow","Audiotrack","attachmentData","attachment","attachmentPreviewUrl","FILE_WRAPPER_CLASS","ATTACHMENT_STYLE","editIconsWrapper","previewTitle","left","IconButtonSx","editableMsgRef","msgEditMode","clickedMsgId","msgFileRemoved","currMsg","prevMsg","msgContentRef","senderData","currMsgId","isClickedMsgCurrMsg","isSameSender","currMsgDate","prevMsgDate","isOtherDay","showCurrSender","innerHTML","setCaretPosition","transform","AttachFile","Done","msgId","outline","contentEditable","editMsgHandler","openDeleteMsgConfirmDialog","isNewUser","letsChatGif","letsChatAnimData","closeChat","openGroupInfoDialog","openViewProfileDialog","hideEmojiPicker","ArrowBack","msgFileAlreadyExists","currentlyTyping","preventStopTyping","setLoadingMsgs","deletePersistedNotifs","fetchMsgs","sending","setSending","setMsgFileRemoved","enableMsgSend","setEnableMsgSend","fileAttached","setFileAttached","setMessages","setClickedMsgId","dontScrollToBottom","setDontScrollToBottom","setAttachmentData","msgListBottom","msgFileInput","msgContent","editableMsgContent","setDownloadingFileId","setLoadingMediaId","setMsgEditMode","msgOptionsMenuAnchor","setMsgOptionsMenuAnchor","resetMsgInput","discardAttachmentOnly","showEmojiPicker","setShowEmojiPicker","selectAttachment","discardAttachment","viewMedia","fileName","isAudio","loadMedia","fileId","blob","mediaSrc","Blob","downloadFile","link","document","createElement","href","setAttribute","body","appendChild","remove","fetchMessages","msg","updatingMsg","sendMessage","emitStopTyping","msgData","isNonImageFile","newMsg","now","mediaDuration","toISOString","sent","apiUrl","deleteMessage","deletedMsgId","senderId","updateMessage","updatedMsgContent","msgDate","parseInnerHTML","updatedMsg","setClientSocket","io","transports","on","setSocketConnected","off","reverse","deletedMsgData","n","getElementById","discardMsgDraft","scrollIntoView","msgInputHandler","isNonEmptyInput","msgKeydownHandler","shiftKey","msgCreatedAt","scrollToBottom","openMsgOptionsMenu","discardFile","videoId","video","audioId","audio","download","updateEditedMsg","updateMsg","attachMsgFileClicked","attachMsgFile","removeMsgFileClicked","removeMsgFile","editMsgFileClicked","editMsgFile","discardDraftClicked","discardDraft","videoName","audioName","imageId","fileExists","msgs","clickedMsg","EmojiEmotions","onEmojiClick","emojiObject","emoji","disableAutoFocus","native","searchPlaceholder","msgFile","FIVE_MB","mediaUrl","media","Audio","onloadedmetadata","minutes","seconds","setMediaDuration","onFocus","onBlur","onInput","Send","deleteNotifsOfChat","selectCustomDialogState","dialogBody","setTypingChatUsers","parse","getItem","getTypingUserName","typingUser","displayInfo","updatedGroupData","removedUser","isLoggedInUserRemoved","isGroupInfoDialogOpen","chatUser","notifsToBeDeleted","notificationIds","console","log","deletedNotif","splice","push","func","timer","delay","context","args","apply","memoize","cachedResults","argsKey","str","limit","sentence","word","join","chatUsers","hours","getHours","getMinutes","am_or_pm","date","getDate","getMonth","getFullYear","currDate","today","yesterday","setTime","getTime","node","lastTextNode","lastChild","caret","textContent","range","createRange","setStart","setEnd","sel","window","getSelection","removeAllRanges","addRange","headers","responseType","Authorization","ONE_MB","toFixed","filename","baseURL"],"sourceRoot":""}